<?xml version="1.0"?>
<api>
  <!--

        This file was automatically generated.
        Please DO NOT MODIFY THIS FILE, modify .metadata files instead.

-->
  <namespace name="Gtk" library="libgtk">
    <enum name="AccelFlags" cname="GtkAccelFlags" type="flags">
      <member cname="GTK_ACCEL_VISIBLE" name="Visible" value="1 &lt;&lt; 0" />
      <member cname="GTK_ACCEL_LOCKED" name="Locked" value="1 &lt;&lt; 1" />
      <member cname="GTK_ACCEL_MASK" name="Mask" value="0x07" />
    </enum>
    <enum name="AnchorType" cname="GtkAnchorType" type="enum">
      <member cname="GTK_ANCHOR_CENTER" name="Center" />
      <member cname="GTK_ANCHOR_NORTH" name="North" />
      <member cname="GTK_ANCHOR_NORTH_WEST" name="NorthWest" />
      <member cname="GTK_ANCHOR_NORTH_EAST" name="NorthEast" />
      <member cname="GTK_ANCHOR_SOUTH" name="South" />
      <member cname="GTK_ANCHOR_SOUTH_WEST" name="SouthWest" />
      <member cname="GTK_ANCHOR_SOUTH_EAST" name="SouthEast" />
      <member cname="GTK_ANCHOR_WEST" name="West" />
      <member cname="GTK_ANCHOR_EAST" name="East" />
      <member cname="GTK_ANCHOR_N" name="N" value="North" />
      <member cname="GTK_ANCHOR_NW" name="Nw" value="NorthWest" />
      <member cname="GTK_ANCHOR_NE" name="Ne" value="NorthEast" />
      <member cname="GTK_ANCHOR_S" name="S" value="South" />
      <member cname="GTK_ANCHOR_SW" name="Sw" value="SouthWest" />
      <member cname="GTK_ANCHOR_SE" name="Se" value="SouthEast" />
      <member cname="GTK_ANCHOR_W" name="W" value="West" />
      <member cname="GTK_ANCHOR_E" name="E" value="East" />
    </enum>
    <enum name="ArgFlags" cname="GtkArgFlags" deprecated="1" type="flags">
      <member cname="GTK_ARG_READABLE" name="Readable" value="G_PARAM_READABLE" />
      <member cname="GTK_ARG_WRITABLE" name="Writable" value="G_PARAM_WRITABLE" />
      <member cname="GTK_ARG_CONSTRUCT" name="Construct" value="G_PARAM_CONSTRUCT" />
      <member cname="GTK_ARG_CONSTRUCT_ONLY" name="ConstructOnly" value="G_PARAM_CONSTRUCT_ONLY" />
      <member cname="GTK_ARG_CHILD_ARG" name="ChildArg" value="1 &lt;&lt; 4" />
    </enum>
    <enum name="ArrowType" cname="GtkArrowType" type="enum">
      <member cname="GTK_ARROW_UP" name="Up" />
      <member cname="GTK_ARROW_DOWN" name="Down" />
      <member cname="GTK_ARROW_LEFT" name="Left" />
      <member cname="GTK_ARROW_RIGHT" name="Right" />
      <member cname="GTK_ARROW_NONE" name="None" />
    </enum>
    <enum name="AssistantPageType" cname="GtkAssistantPageType" type="enum">
      <member cname="GTK_ASSISTANT_PAGE_CONTENT" name="Content" />
      <member cname="GTK_ASSISTANT_PAGE_INTRO" name="Intro" />
      <member cname="GTK_ASSISTANT_PAGE_CONFIRM" name="Confirm" />
      <member cname="GTK_ASSISTANT_PAGE_SUMMARY" name="Summary" />
      <member cname="GTK_ASSISTANT_PAGE_PROGRESS" name="Progress" />
    </enum>
    <enum name="AttachOptions" cname="GtkAttachOptions" type="flags">
      <member cname="GTK_EXPAND" name="Expand" value="1 &lt;&lt; 0" />
      <member cname="GTK_SHRINK" name="Shrink" value="1 &lt;&lt; 1" />
      <member cname="GTK_FILL" name="Fill" value="1 &lt;&lt; 2" />
    </enum>
    <enum name="ButtonAction" cname="GtkButtonAction" deprecated="1" type="flags">
      <member cname="GTK_BUTTON_IGNORED" name="Ignored" />
      <member cname="GTK_BUTTON_SELECTS" name="Selects" value="1 &lt;&lt; 0" />
      <member cname="GTK_BUTTON_DRAGS" name="Drags" value="1 &lt;&lt; 1" />
      <member cname="GTK_BUTTON_EXPANDS" name="Expands" value="1 &lt;&lt; 2" />
    </enum>
    <enum name="ButtonBoxStyle" cname="GtkButtonBoxStyle" type="enum">
      <member cname="GTK_BUTTONBOX_DEFAULT_STYLE" name="DefaultStyle" />
      <member cname="GTK_BUTTONBOX_SPREAD" name="Spread" />
      <member cname="GTK_BUTTONBOX_EDGE" name="Edge" />
      <member cname="GTK_BUTTONBOX_START" name="Start" />
      <member cname="GTK_BUTTONBOX_END" name="End" />
    </enum>
    <enum name="ButtonsType" cname="GtkButtonsType" type="enum">
      <member cname="GTK_BUTTONS_NONE" name="None" />
      <member cname="GTK_BUTTONS_OK" name="Ok" />
      <member cname="GTK_BUTTONS_CLOSE" name="Close" />
      <member cname="GTK_BUTTONS_CANCEL" name="Cancel" />
      <member cname="GTK_BUTTONS_YES_NO" name="YesNo" />
      <member cname="GTK_BUTTONS_OK_CANCEL" name="OkCancel" />
    </enum>
    <enum name="CListDragPos" cname="GtkCListDragPos" deprecated="1" type="enum">
      <member cname="GTK_CLIST_DRAG_NONE" name="None" />
      <member cname="GTK_CLIST_DRAG_BEFORE" name="Before" />
      <member cname="GTK_CLIST_DRAG_INTO" name="Into" />
      <member cname="GTK_CLIST_DRAG_AFTER" name="After" />
    </enum>
    <enum name="CTreeExpanderStyle" cname="GtkCTreeExpanderStyle" deprecated="1" type="enum">
      <member cname="GTK_CTREE_EXPANDER_NONE" name="None" />
      <member cname="GTK_CTREE_EXPANDER_SQUARE" name="Square" />
      <member cname="GTK_CTREE_EXPANDER_TRIANGLE" name="Triangle" />
      <member cname="GTK_CTREE_EXPANDER_CIRCULAR" name="Circular" />
    </enum>
    <enum name="CTreeExpansionType" cname="GtkCTreeExpansionType" deprecated="1" type="enum">
      <member cname="GTK_CTREE_EXPANSION_EXPAND" name="Expand" />
      <member cname="GTK_CTREE_EXPANSION_EXPAND_RECURSIVE" name="ExpandRecursive" />
      <member cname="GTK_CTREE_EXPANSION_COLLAPSE" name="Collapse" />
      <member cname="GTK_CTREE_EXPANSION_COLLAPSE_RECURSIVE" name="CollapseRecursive" />
      <member cname="GTK_CTREE_EXPANSION_TOGGLE" name="Toggle" />
      <member cname="GTK_CTREE_EXPANSION_TOGGLE_RECURSIVE" name="ToggleRecursive" />
    </enum>
    <enum name="CTreeLineStyle" cname="GtkCTreeLineStyle" deprecated="1" type="enum">
      <member cname="GTK_CTREE_LINES_NONE" name="None" />
      <member cname="GTK_CTREE_LINES_SOLID" name="Solid" />
      <member cname="GTK_CTREE_LINES_DOTTED" name="Dotted" />
      <member cname="GTK_CTREE_LINES_TABBED" name="Tabbed" />
    </enum>
    <enum name="CTreePos" cname="GtkCTreePos" deprecated="1" type="enum">
      <member cname="GTK_CTREE_POS_BEFORE" name="Before" />
      <member cname="GTK_CTREE_POS_AS_CHILD" name="AsChild" />
      <member cname="GTK_CTREE_POS_AFTER" name="After" />
    </enum>
    <enum name="CalendarDisplayOptions" cname="GtkCalendarDisplayOptions" type="flags">
      <member cname="GTK_CALENDAR_SHOW_HEADING" name="ShowHeading" value="1 &lt;&lt; 0" />
      <member cname="GTK_CALENDAR_SHOW_DAY_NAMES" name="ShowDayNames" value="1 &lt;&lt; 1" />
      <member cname="GTK_CALENDAR_NO_MONTH_CHANGE" name="NoMonthChange" value="1 &lt;&lt; 2" />
      <member cname="GTK_CALENDAR_SHOW_WEEK_NUMBERS" name="ShowWeekNumbers" value="1 &lt;&lt; 3" />
      <member cname="GTK_CALENDAR_WEEK_START_MONDAY" name="WeekStartMonday" value="1 &lt;&lt; 4" />
    </enum>
    <enum name="CellRendererAccelMode" cname="GtkCellRendererAccelMode" type="enum">
      <member cname="GTK_CELL_RENDERER_ACCEL_MODE_GTK" name="Gtk" />
      <member cname="GTK_CELL_RENDERER_ACCEL_MODE_OTHER" name="Other" />
    </enum>
    <enum name="CellRendererMode" cname="GtkCellRendererMode" type="enum">
      <member cname="GTK_CELL_RENDERER_MODE_INERT" name="Inert" />
      <member cname="GTK_CELL_RENDERER_MODE_ACTIVATABLE" name="Activatable" />
      <member cname="GTK_CELL_RENDERER_MODE_EDITABLE" name="Editable" />
    </enum>
    <enum name="CellRendererState" cname="GtkCellRendererState" type="flags">
      <member cname="GTK_CELL_RENDERER_SELECTED" name="Selected" value="1 &lt;&lt; 0" />
      <member cname="GTK_CELL_RENDERER_PRELIT" name="Prelit" value="1 &lt;&lt; 1" />
      <member cname="GTK_CELL_RENDERER_INSENSITIVE" name="Insensitive" value="1 &lt;&lt; 2" />
      <member cname="GTK_CELL_RENDERER_SORTED" name="Sorted" value="1 &lt;&lt; 3" />
      <member cname="GTK_CELL_RENDERER_FOCUSED" name="Focused" value="1 &lt;&lt; 4" />
    </enum>
    <enum name="CellType" cname="GtkCellType" deprecated="1" type="enum">
      <member cname="GTK_CELL_EMPTY" name="Empty" />
      <member cname="GTK_CELL_TEXT" name="Text" />
      <member cname="GTK_CELL_PIXMAP" name="Pixmap" />
      <member cname="GTK_CELL_PIXTEXT" name="Pixtext" />
      <member cname="GTK_CELL_WIDGET" name="Widget" />
    </enum>
    <enum name="CornerType" cname="GtkCornerType" type="enum">
      <member cname="GTK_CORNER_TOP_LEFT" name="TopLeft" />
      <member cname="GTK_CORNER_BOTTOM_LEFT" name="BottomLeft" />
      <member cname="GTK_CORNER_TOP_RIGHT" name="TopRight" />
      <member cname="GTK_CORNER_BOTTOM_RIGHT" name="BottomRight" />
    </enum>
    <enum name="CurveType" cname="GtkCurveType" type="enum">
      <member cname="GTK_CURVE_TYPE_LINEAR" name="Linear" />
      <member cname="GTK_CURVE_TYPE_SPLINE" name="Spline" />
      <member cname="GTK_CURVE_TYPE_FREE" name="Free" />
    </enum>
    <enum name="DebugFlag" cname="GtkDebugFlag" type="flags">
      <member cname="GTK_DEBUG_MISC" name="Misc" value="1 &lt;&lt; 0" />
      <member cname="GTK_DEBUG_PLUGSOCKET" name="Plugsocket" value="1 &lt;&lt; 1" />
      <member cname="GTK_DEBUG_TEXT" name="Text" value="1 &lt;&lt; 2" />
      <member cname="GTK_DEBUG_TREE" name="Tree" value="1 &lt;&lt; 3" />
      <member cname="GTK_DEBUG_UPDATES" name="Updates" value="1 &lt;&lt; 4" />
      <member cname="GTK_DEBUG_KEYBINDINGS" name="Keybindings" value="1 &lt;&lt; 5" />
      <member cname="GTK_DEBUG_MULTIHEAD" name="Multihead" value="1 &lt;&lt; 6" />
      <member cname="GTK_DEBUG_MODULES" name="Modules" value="1 &lt;&lt; 7" />
      <member cname="GTK_DEBUG_GEOMETRY" name="Geometry" value="1 &lt;&lt; 8" />
      <member cname="GTK_DEBUG_ICONTHEME" name="Icontheme" value="1 &lt;&lt; 9" />
      <member cname="GTK_DEBUG_PRINTING" name="Printing" value="1 &lt;&lt; 10" />
    </enum>
    <enum name="DeleteType" cname="GtkDeleteType" type="enum">
      <member cname="GTK_DELETE_CHARS" name="Chars" />
      <member cname="GTK_DELETE_WORD_ENDS" name="WordEnds" />
      <member cname="GTK_DELETE_WORDS" name="Words" />
      <member cname="GTK_DELETE_DISPLAY_LINES" name="DisplayLines" />
      <member cname="GTK_DELETE_DISPLAY_LINE_ENDS" name="DisplayLineEnds" />
      <member cname="GTK_DELETE_PARAGRAPH_ENDS" name="ParagraphEnds" />
      <member cname="GTK_DELETE_PARAGRAPHS" name="Paragraphs" />
      <member cname="GTK_DELETE_WHITESPACE" name="Whitespace" />
    </enum>
    <enum name="DestDefaults" cname="GtkDestDefaults" type="flags">
      <member cname="GTK_DEST_DEFAULT_MOTION" name="Motion" value="1 &lt;&lt; 0" />
      <member cname="GTK_DEST_DEFAULT_HIGHLIGHT" name="Highlight" value="1 &lt;&lt; 1" />
      <member cname="GTK_DEST_DEFAULT_DROP" name="Drop" value="1 &lt;&lt; 2" />
      <member cname="GTK_DEST_DEFAULT_ALL" name="All" value="0x07" />
    </enum>
    <enum name="DialogFlags" cname="GtkDialogFlags" type="flags">
      <member cname="GTK_DIALOG_MODAL" name="Modal" value="1 &lt;&lt; 0" />
      <member cname="GTK_DIALOG_DESTROY_WITH_PARENT" name="DestroyWithParent" value="1 &lt;&lt; 1" />
      <member cname="GTK_DIALOG_NO_SEPARATOR" name="NoSeparator" value="1 &lt;&lt; 2" />
    </enum>
    <enum name="DirectionType" cname="GtkDirectionType" type="enum">
      <member cname="GTK_DIR_TAB_FORWARD" name="TabForward" />
      <member cname="GTK_DIR_TAB_BACKWARD" name="TabBackward" />
      <member cname="GTK_DIR_UP" name="Up" />
      <member cname="GTK_DIR_DOWN" name="Down" />
      <member cname="GTK_DIR_LEFT" name="Left" />
      <member cname="GTK_DIR_RIGHT" name="Right" />
    </enum>
    <enum name="ExpanderStyle" cname="GtkExpanderStyle" type="enum">
      <member cname="GTK_EXPANDER_COLLAPSED" name="Collapsed" />
      <member cname="GTK_EXPANDER_SEMI_COLLAPSED" name="SemiCollapsed" />
      <member cname="GTK_EXPANDER_SEMI_EXPANDED" name="SemiExpanded" />
      <member cname="GTK_EXPANDER_EXPANDED" name="Expanded" />
    </enum>
    <enum name="FileChooserAction" cname="GtkFileChooserAction" type="enum">
      <member cname="GTK_FILE_CHOOSER_ACTION_OPEN" name="Open" />
      <member cname="GTK_FILE_CHOOSER_ACTION_SAVE" name="Save" />
      <member cname="GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER" name="SelectFolder" />
      <member cname="GTK_FILE_CHOOSER_ACTION_CREATE_FOLDER" name="CreateFolder" />
    </enum>
    <enum name="FileChooserConfirmation" cname="GtkFileChooserConfirmation" type="enum">
      <member cname="GTK_FILE_CHOOSER_CONFIRMATION_CONFIRM" name="Confirm" />
      <member cname="GTK_FILE_CHOOSER_CONFIRMATION_ACCEPT_FILENAME" name="AcceptFilename" />
      <member cname="GTK_FILE_CHOOSER_CONFIRMATION_SELECT_AGAIN" name="SelectAgain" />
    </enum>
    <enum name="FileChooserError" cname="GtkFileChooserError" type="enum">
      <member cname="GTK_FILE_CHOOSER_ERROR_NONEXISTENT" name="Nonexistent" />
      <member cname="GTK_FILE_CHOOSER_ERROR_BAD_FILENAME" name="BadFilename" />
      <member cname="GTK_FILE_CHOOSER_ERROR_ALREADY_EXISTS" name="AlreadyExists" />
    </enum>
    <enum name="FileFilterFlags" cname="GtkFileFilterFlags" type="flags">
      <member cname="GTK_FILE_FILTER_FILENAME" name="Filename" value="1 &lt;&lt; 0" />
      <member cname="GTK_FILE_FILTER_URI" name="Uri" value="1 &lt;&lt; 1" />
      <member cname="GTK_FILE_FILTER_DISPLAY_NAME" name="DisplayName" value="1 &lt;&lt; 2" />
      <member cname="GTK_FILE_FILTER_MIME_TYPE" name="MimeType" value="1 &lt;&lt; 3" />
    </enum>
    <enum name="FileInfoType" cname="GtkFileInfoType" type="flags">
      <member cname="GTK_FILE_INFO_DISPLAY_NAME" name="DisplayName" value="1 &lt;&lt; 0" />
      <member cname="GTK_FILE_INFO_IS_FOLDER" name="IsFolder" value="1 &lt;&lt; 1" />
      <member cname="GTK_FILE_INFO_IS_HIDDEN" name="IsHidden" value="1 &lt;&lt; 2" />
      <member cname="GTK_FILE_INFO_MIME_TYPE" name="MimeType" value="1 &lt;&lt; 3" />
      <member cname="GTK_FILE_INFO_MODIFICATION_TIME" name="ModificationTime" value="1 &lt;&lt; 4" />
      <member cname="GTK_FILE_INFO_SIZE" name="Size" value="1 &lt;&lt; 5" />
      <member cname="GTK_FILE_INFO_ICON" name="Icon" value="1 &lt;&lt; 6" />
      <member cname="GTK_FILE_INFO_ALL" name="All" value="1 &lt;&lt; 7- 1" />
    </enum>
    <enum name="FileSystemError" cname="GtkFileSystemError" type="enum">
      <member cname="GTK_FILE_SYSTEM_ERROR_NONEXISTENT" name="Nonexistent" />
      <member cname="GTK_FILE_SYSTEM_ERROR_NOT_FOLDER" name="NotFolder" />
      <member cname="GTK_FILE_SYSTEM_ERROR_INVALID_URI" name="InvalidUri" />
      <member cname="GTK_FILE_SYSTEM_ERROR_BAD_FILENAME" name="BadFilename" />
      <member cname="GTK_FILE_SYSTEM_ERROR_FAILED" name="Failed" />
      <member cname="GTK_FILE_SYSTEM_ERROR_ALREADY_EXISTS" name="AlreadyExists" />
    </enum>
    <enum name="IMPreeditStyle" cname="GtkIMPreeditStyle" type="enum">
      <member cname="GTK_IM_PREEDIT_NOTHING" name="Nothing" />
      <member cname="GTK_IM_PREEDIT_CALLBACK" name="Callback" />
      <member cname="GTK_IM_PREEDIT_NONE" name="None" />
    </enum>
    <enum name="IMStatusStyle" cname="GtkIMStatusStyle" type="enum">
      <member cname="GTK_IM_STATUS_NOTHING" name="Nothing" />
      <member cname="GTK_IM_STATUS_CALLBACK" name="Callback" />
      <member cname="GTK_IM_STATUS_NONE" name="None" />
    </enum>
    <enum name="IconLookupFlags" cname="GtkIconLookupFlags" type="flags">
      <member cname="GTK_ICON_LOOKUP_NO_SVG" name="NoSvg" value="1 &lt;&lt; 0" />
      <member cname="GTK_ICON_LOOKUP_FORCE_SVG" name="ForceSvg" value="1 &lt;&lt; 1" />
      <member cname="GTK_ICON_LOOKUP_USE_BUILTIN" name="UseBuiltin" value="1 &lt;&lt; 2" />
    </enum>
    <enum name="IconSize" cname="GtkIconSize" type="enum">
      <member cname="GTK_ICON_SIZE_INVALID" name="Invalid" />
      <member cname="GTK_ICON_SIZE_MENU" name="Menu" />
      <member cname="GTK_ICON_SIZE_SMALL_TOOLBAR" name="SmallToolbar" />
      <member cname="GTK_ICON_SIZE_LARGE_TOOLBAR" name="LargeToolbar" />
      <member cname="GTK_ICON_SIZE_BUTTON" name="Button" />
      <member cname="GTK_ICON_SIZE_DND" name="Dnd" />
      <member cname="GTK_ICON_SIZE_DIALOG" name="Dialog" />
    </enum>
    <enum name="IconThemeError" cname="GtkIconThemeError" type="enum">
      <member cname="GTK_ICON_THEME_NOT_FOUND" name="NotFound" />
      <member cname="GTK_ICON_THEME_FAILED" name="Failed" />
    </enum>
    <enum name="IconViewDropPosition" cname="GtkIconViewDropPosition" type="enum">
      <member cname="GTK_ICON_VIEW_NO_DROP" name="NoDrop" />
      <member cname="GTK_ICON_VIEW_DROP_INTO" name="DropInto" />
      <member cname="GTK_ICON_VIEW_DROP_LEFT" name="DropLeft" />
      <member cname="GTK_ICON_VIEW_DROP_RIGHT" name="DropRight" />
      <member cname="GTK_ICON_VIEW_DROP_ABOVE" name="DropAbove" />
      <member cname="GTK_ICON_VIEW_DROP_BELOW" name="DropBelow" />
    </enum>
    <enum name="ImageType" cname="GtkImageType" type="enum">
      <member cname="GTK_IMAGE_EMPTY" name="Empty" />
      <member cname="GTK_IMAGE_PIXMAP" name="Pixmap" />
      <member cname="GTK_IMAGE_IMAGE" name="Image" />
      <member cname="GTK_IMAGE_PIXBUF" name="Pixbuf" />
      <member cname="GTK_IMAGE_STOCK" name="Stock" />
      <member cname="GTK_IMAGE_ICON_SET" name="IconSet" />
      <member cname="GTK_IMAGE_ANIMATION" name="Animation" />
      <member cname="GTK_IMAGE_ICON_NAME" name="IconName" />
    </enum>
    <enum name="Justification" cname="GtkJustification" type="enum">
      <member cname="GTK_JUSTIFY_LEFT" name="Left" />
      <member cname="GTK_JUSTIFY_RIGHT" name="Right" />
      <member cname="GTK_JUSTIFY_CENTER" name="Center" />
      <member cname="GTK_JUSTIFY_FILL" name="Fill" />
    </enum>
    <enum name="MatchType" cname="GtkMatchType" deprecated="1" type="enum">
      <member cname="GTK_MATCH_ALL" name="All" />
      <member cname="GTK_MATCH_ALL_TAIL" name="AllTail" />
      <member cname="GTK_MATCH_HEAD" name="Head" />
      <member cname="GTK_MATCH_TAIL" name="Tail" />
      <member cname="GTK_MATCH_EXACT" name="Exact" />
      <member cname="GTK_MATCH_LAST" name="Last" />
    </enum>
    <enum name="MenuDirectionType" cname="GtkMenuDirectionType" type="enum">
      <member cname="GTK_MENU_DIR_PARENT" name="Parent" />
      <member cname="GTK_MENU_DIR_CHILD" name="Child" />
      <member cname="GTK_MENU_DIR_NEXT" name="Next" />
      <member cname="GTK_MENU_DIR_PREV" name="Prev" />
    </enum>
    <enum name="MessageType" cname="GtkMessageType" type="enum">
      <member cname="GTK_MESSAGE_INFO" name="Info" />
      <member cname="GTK_MESSAGE_WARNING" name="Warning" />
      <member cname="GTK_MESSAGE_QUESTION" name="Question" />
      <member cname="GTK_MESSAGE_ERROR" name="Error" />
      <member cname="GTK_MESSAGE_OTHER" name="Other" />
    </enum>
    <enum name="MetricType" cname="GtkMetricType" type="enum">
      <member cname="GTK_PIXELS" name="Pixels" />
      <member cname="GTK_INCHES" name="Inches" />
      <member cname="GTK_CENTIMETERS" name="Centimeters" />
    </enum>
    <enum name="MovementStep" cname="GtkMovementStep" type="enum">
      <member cname="GTK_MOVEMENT_LOGICAL_POSITIONS" name="LogicalPositions" />
      <member cname="GTK_MOVEMENT_VISUAL_POSITIONS" name="VisualPositions" />
      <member cname="GTK_MOVEMENT_WORDS" name="Words" />
      <member cname="GTK_MOVEMENT_DISPLAY_LINES" name="DisplayLines" />
      <member cname="GTK_MOVEMENT_DISPLAY_LINE_ENDS" name="DisplayLineEnds" />
      <member cname="GTK_MOVEMENT_PARAGRAPHS" name="Paragraphs" />
      <member cname="GTK_MOVEMENT_PARAGRAPH_ENDS" name="ParagraphEnds" />
      <member cname="GTK_MOVEMENT_PAGES" name="Pages" />
      <member cname="GTK_MOVEMENT_BUFFER_ENDS" name="BufferEnds" />
      <member cname="GTK_MOVEMENT_HORIZONTAL_PAGES" name="HorizontalPages" />
    </enum>
    <enum name="NotebookTab" cname="GtkNotebookTab" type="enum">
      <member cname="GTK_NOTEBOOK_TAB_FIRST" name="First" />
      <member cname="GTK_NOTEBOOK_TAB_LAST" name="Last" />
    </enum>
    <enum name="ObjectFlags" cname="GtkObjectFlags" type="flags">
      <member cname="GTK_IN_DESTRUCTION" name="InDestruction" value="1 &lt;&lt; 0" />
      <member cname="GTK_FLOATING" name="Floating" value="1 &lt;&lt; 1" />
      <member cname="GTK_RESERVED_1" name="Reserved1" value="1 &lt;&lt; 2" />
      <member cname="GTK_RESERVED_2" name="Reserved2" value="1 &lt;&lt; 3" />
    </enum>
    <enum name="Orientation" cname="GtkOrientation" type="enum">
      <member cname="GTK_ORIENTATION_HORIZONTAL" name="Horizontal" />
      <member cname="GTK_ORIENTATION_VERTICAL" name="Vertical" />
    </enum>
    <enum name="PackDirection" cname="GtkPackDirection" type="enum">
      <member cname="GTK_PACK_DIRECTION_LTR" name="Ltr" />
      <member cname="GTK_PACK_DIRECTION_RTL" name="Rtl" />
      <member cname="GTK_PACK_DIRECTION_TTB" name="Ttb" />
      <member cname="GTK_PACK_DIRECTION_BTT" name="Btt" />
    </enum>
    <enum name="PackType" cname="GtkPackType" type="enum">
      <member cname="GTK_PACK_START" name="Start" />
      <member cname="GTK_PACK_END" name="End" />
    </enum>
    <enum name="PageOrientation" cname="GtkPageOrientation" type="enum">
      <member cname="GTK_PAGE_ORIENTATION_PORTRAIT" name="Portrait" />
      <member cname="GTK_PAGE_ORIENTATION_LANDSCAPE" name="Landscape" />
      <member cname="GTK_PAGE_ORIENTATION_REVERSE_PORTRAIT" name="ReversePortrait" />
      <member cname="GTK_PAGE_ORIENTATION_REVERSE_LANDSCAPE" name="ReverseLandscape" />
    </enum>
    <enum name="PageSet" cname="GtkPageSet" type="enum">
      <member cname="GTK_PAGE_SET_ALL" name="All" />
      <member cname="GTK_PAGE_SET_EVEN" name="Even" />
      <member cname="GTK_PAGE_SET_ODD" name="Odd" />
    </enum>
    <enum name="PathPriorityType" cname="GtkPathPriorityType" type="enum">
      <member cname="GTK_PATH_PRIO_LOWEST" name="Lowest" />
      <member cname="GTK_PATH_PRIO_GTK" name="Gtk" value="4" />
      <member cname="GTK_PATH_PRIO_APPLICATION" name="Application" value="8" />
      <member cname="GTK_PATH_PRIO_THEME" name="Theme" value="10" />
      <member cname="GTK_PATH_PRIO_RC" name="Rc" value="12" />
      <member cname="GTK_PATH_PRIO_HIGHEST" name="Highest" value="15" />
    </enum>
    <enum name="PathType" cname="GtkPathType" type="enum">
      <member cname="GTK_PATH_WIDGET" name="Widget" />
      <member cname="GTK_PATH_WIDGET_CLASS" name="WidgetClass" />
      <member cname="GTK_PATH_CLASS" name="Class" />
    </enum>
    <enum name="PolicyType" cname="GtkPolicyType" type="enum">
      <member cname="GTK_POLICY_ALWAYS" name="Always" />
      <member cname="GTK_POLICY_AUTOMATIC" name="Automatic" />
      <member cname="GTK_POLICY_NEVER" name="Never" />
    </enum>
    <enum name="PositionType" cname="GtkPositionType" type="enum">
      <member cname="GTK_POS_LEFT" name="Left" />
      <member cname="GTK_POS_RIGHT" name="Right" />
      <member cname="GTK_POS_TOP" name="Top" />
      <member cname="GTK_POS_BOTTOM" name="Bottom" />
    </enum>
    <enum name="PreviewType" cname="GtkPreviewType" deprecated="1" type="enum">
      <member cname="GTK_PREVIEW_COLOR" name="Color" />
      <member cname="GTK_PREVIEW_GRAYSCALE" name="Grayscale" />
    </enum>
    <enum name="PrintDuplex" cname="GtkPrintDuplex" type="enum">
      <member cname="GTK_PRINT_DUPLEX_SIMPLEX" name="Simplex" />
      <member cname="GTK_PRINT_DUPLEX_HORIZONTAL" name="Horizontal" />
      <member cname="GTK_PRINT_DUPLEX_VERTICAL" name="Vertical" />
    </enum>
    <enum name="PrintError" cname="GtkPrintError" type="enum">
      <member cname="GTK_PRINT_ERROR_GENERAL" name="General" />
      <member cname="GTK_PRINT_ERROR_INTERNAL_ERROR" name="InternalError" />
      <member cname="GTK_PRINT_ERROR_NOMEM" name="Nomem" />
    </enum>
    <enum name="PrintOperationAction" cname="GtkPrintOperationAction" type="enum">
      <member cname="GTK_PRINT_OPERATION_ACTION_PRINT_DIALOG" name="PrintDialog" />
      <member cname="GTK_PRINT_OPERATION_ACTION_PRINT" name="Print" />
      <member cname="GTK_PRINT_OPERATION_ACTION_PREVIEW" name="Preview" />
      <member cname="GTK_PRINT_OPERATION_ACTION_EXPORT" name="Export" />
    </enum>
    <enum name="PrintOperationResult" cname="GtkPrintOperationResult" type="enum">
      <member cname="GTK_PRINT_OPERATION_RESULT_ERROR" name="Error" />
      <member cname="GTK_PRINT_OPERATION_RESULT_APPLY" name="Apply" />
      <member cname="GTK_PRINT_OPERATION_RESULT_CANCEL" name="Cancel" />
      <member cname="GTK_PRINT_OPERATION_RESULT_IN_PROGRESS" name="InProgress" />
    </enum>
    <enum name="PrintPages" cname="GtkPrintPages" type="enum">
      <member cname="GTK_PRINT_PAGES_ALL" name="All" />
      <member cname="GTK_PRINT_PAGES_CURRENT" name="Current" />
      <member cname="GTK_PRINT_PAGES_RANGES" name="Ranges" />
    </enum>
    <enum name="PrintQuality" cname="GtkPrintQuality" type="enum">
      <member cname="GTK_PRINT_QUALITY_LOW" name="Low" />
      <member cname="GTK_PRINT_QUALITY_NORMAL" name="Normal" />
      <member cname="GTK_PRINT_QUALITY_HIGH" name="High" />
      <member cname="GTK_PRINT_QUALITY_DRAFT" name="Draft" />
    </enum>
    <enum name="PrintStatus" cname="GtkPrintStatus" type="enum">
      <member cname="GTK_PRINT_STATUS_INITIAL" name="Initial" />
      <member cname="GTK_PRINT_STATUS_PREPARING" name="Preparing" />
      <member cname="GTK_PRINT_STATUS_GENERATING_DATA" name="GeneratingData" />
      <member cname="GTK_PRINT_STATUS_SENDING_DATA" name="SendingData" />
      <member cname="GTK_PRINT_STATUS_PENDING" name="Pending" />
      <member cname="GTK_PRINT_STATUS_PENDING_ISSUE" name="PendingIssue" />
      <member cname="GTK_PRINT_STATUS_PRINTING" name="Printing" />
      <member cname="GTK_PRINT_STATUS_FINISHED" name="Finished" />
      <member cname="GTK_PRINT_STATUS_FINISHED_ABORTED" name="FinishedAborted" />
    </enum>
    <enum name="ProgressBarOrientation" cname="GtkProgressBarOrientation" type="enum">
      <member cname="GTK_PROGRESS_LEFT_TO_RIGHT" name="LeftToRight" />
      <member cname="GTK_PROGRESS_RIGHT_TO_LEFT" name="RightToLeft" />
      <member cname="GTK_PROGRESS_BOTTOM_TO_TOP" name="BottomToTop" />
      <member cname="GTK_PROGRESS_TOP_TO_BOTTOM" name="TopToBottom" />
    </enum>
    <enum name="ProgressBarStyle" cname="GtkProgressBarStyle" type="enum">
      <member cname="GTK_PROGRESS_CONTINUOUS" name="Continuous" />
      <member cname="GTK_PROGRESS_DISCRETE" name="Discrete" />
    </enum>
    <enum name="RcFlags" cname="GtkRcFlags" type="flags">
      <member cname="GTK_RC_FG" name="Fg" value="1 &lt;&lt; 0" />
      <member cname="GTK_RC_BG" name="Bg" value="1 &lt;&lt; 1" />
      <member cname="GTK_RC_TEXT" name="Text" value="1 &lt;&lt; 2" />
      <member cname="GTK_RC_BASE" name="Base" value="1 &lt;&lt; 3" />
    </enum>
    <enum name="RcTokenType" cname="GtkRcTokenType" type="enum">
      <member cname="GTK_RC_TOKEN_INVALID" name="Invalid" value="G_TOKEN_LAST" />
      <member cname="GTK_RC_TOKEN_INCLUDE" name="Include" />
      <member cname="GTK_RC_TOKEN_NORMAL" name="Normal" />
      <member cname="GTK_RC_TOKEN_ACTIVE" name="Active" />
      <member cname="GTK_RC_TOKEN_PRELIGHT" name="Prelight" />
      <member cname="GTK_RC_TOKEN_SELECTED" name="Selected" />
      <member cname="GTK_RC_TOKEN_INSENSITIVE" name="Insensitive" />
      <member cname="GTK_RC_TOKEN_FG" name="Fg" />
      <member cname="GTK_RC_TOKEN_BG" name="Bg" />
      <member cname="GTK_RC_TOKEN_TEXT" name="Text" />
      <member cname="GTK_RC_TOKEN_BASE" name="Base" />
      <member cname="GTK_RC_TOKEN_XTHICKNESS" name="Xthickness" />
      <member cname="GTK_RC_TOKEN_YTHICKNESS" name="Ythickness" />
      <member cname="GTK_RC_TOKEN_FONT" name="Font" />
      <member cname="GTK_RC_TOKEN_FONTSET" name="Fontset" />
      <member cname="GTK_RC_TOKEN_FONT_NAME" name="FontName" />
      <member cname="GTK_RC_TOKEN_BG_PIXMAP" name="BgPixmap" />
      <member cname="GTK_RC_TOKEN_PIXMAP_PATH" name="PixmapPath" />
      <member cname="GTK_RC_TOKEN_STYLE" name="Style" />
      <member cname="GTK_RC_TOKEN_BINDING" name="Binding" />
      <member cname="GTK_RC_TOKEN_BIND" name="Bind" />
      <member cname="GTK_RC_TOKEN_WIDGET" name="Widget" />
      <member cname="GTK_RC_TOKEN_WIDGET_CLASS" name="WidgetClass" />
      <member cname="GTK_RC_TOKEN_CLASS" name="Class" />
      <member cname="GTK_RC_TOKEN_LOWEST" name="Lowest" />
      <member cname="GTK_RC_TOKEN_GTK" name="Gtk" />
      <member cname="GTK_RC_TOKEN_APPLICATION" name="Application" />
      <member cname="GTK_RC_TOKEN_THEME" name="Theme" />
      <member cname="GTK_RC_TOKEN_RC" name="Rc" />
      <member cname="GTK_RC_TOKEN_HIGHEST" name="Highest" />
      <member cname="GTK_RC_TOKEN_ENGINE" name="Engine" />
      <member cname="GTK_RC_TOKEN_MODULE_PATH" name="ModulePath" />
      <member cname="GTK_RC_TOKEN_IM_MODULE_PATH" name="ImModulePath" />
      <member cname="GTK_RC_TOKEN_IM_MODULE_FILE" name="ImModuleFile" />
      <member cname="GTK_RC_TOKEN_STOCK" name="Stock" />
      <member cname="GTK_RC_TOKEN_LTR" name="Ltr" />
      <member cname="GTK_RC_TOKEN_RTL" name="Rtl" />
      <member cname="GTK_RC_TOKEN_COLOR" name="Color" />
      <member cname="GTK_RC_TOKEN_LAST" name="Last" />
    </enum>
    <enum name="RecentChooserError" cname="GtkRecentChooserError" type="enum">
      <member cname="GTK_RECENT_CHOOSER_ERROR_NOT_FOUND" name="NotFound" />
      <member cname="GTK_RECENT_CHOOSER_ERROR_INVALID_URI" name="InvalidUri" />
    </enum>
    <enum name="RecentFilterFlags" cname="GtkRecentFilterFlags" type="flags">
      <member cname="GTK_RECENT_FILTER_URI" name="Uri" value="1 &lt;&lt; 0" />
      <member cname="GTK_RECENT_FILTER_DISPLAY_NAME" name="DisplayName" value="1 &lt;&lt; 1" />
      <member cname="GTK_RECENT_FILTER_MIME_TYPE" name="MimeType" value="1 &lt;&lt; 2" />
      <member cname="GTK_RECENT_FILTER_APPLICATION" name="Application" value="1 &lt;&lt; 3" />
      <member cname="GTK_RECENT_FILTER_GROUP" name="Group" value="1 &lt;&lt; 4" />
      <member cname="GTK_RECENT_FILTER_AGE" name="Age" value="1 &lt;&lt; 5" />
    </enum>
    <enum name="RecentManagerError" cname="GtkRecentManagerError" type="enum">
      <member cname="GTK_RECENT_MANAGER_ERROR_NOT_FOUND" name="NotFound" />
      <member cname="GTK_RECENT_MANAGER_ERROR_INVALID_URI" name="InvalidUri" />
      <member cname="GTK_RECENT_MANAGER_ERROR_INVALID_ENCODING" name="InvalidEncoding" />
      <member cname="GTK_RECENT_MANAGER_ERROR_NOT_REGISTERED" name="NotRegistered" />
      <member cname="GTK_RECENT_MANAGER_ERROR_READ" name="Read" />
      <member cname="GTK_RECENT_MANAGER_ERROR_WRITE" name="Write" />
      <member cname="GTK_RECENT_MANAGER_ERROR_UNKNOWN" name="Unknown" />
    </enum>
    <enum name="RecentSortType" cname="GtkRecentSortType" type="enum">
      <member cname="GTK_RECENT_SORT_NONE" name="None" />
      <member cname="GTK_RECENT_SORT_MRU" name="Mru" />
      <member cname="GTK_RECENT_SORT_LRU" name="Lru" />
      <member cname="GTK_RECENT_SORT_CUSTOM" name="Custom" />
    </enum>
    <enum name="ReliefStyle" cname="GtkReliefStyle" type="enum">
      <member cname="GTK_RELIEF_NORMAL" name="Normal" />
      <member cname="GTK_RELIEF_HALF" name="Half" />
      <member cname="GTK_RELIEF_NONE" name="None" />
    </enum>
    <enum name="ResizeMode" cname="GtkResizeMode" type="enum">
      <member cname="GTK_RESIZE_PARENT" name="Parent" />
      <member cname="GTK_RESIZE_QUEUE" name="Queue" />
      <member cname="GTK_RESIZE_IMMEDIATE" name="Immediate" />
    </enum>
    <enum name="ResponseType" cname="GtkResponseType" type="enum">
      <member cname="GTK_RESPONSE_NONE" name="None" value="-1" />
      <member cname="GTK_RESPONSE_REJECT" name="Reject" value="-2" />
      <member cname="GTK_RESPONSE_ACCEPT" name="Accept" value="-3" />
      <member cname="GTK_RESPONSE_DELETE_EVENT" name="DeleteEvent" value="-4" />
      <member cname="GTK_RESPONSE_OK" name="Ok" value="-5" />
      <member cname="GTK_RESPONSE_CANCEL" name="Cancel" value="-6" />
      <member cname="GTK_RESPONSE_CLOSE" name="Close" value="-7" />
      <member cname="GTK_RESPONSE_YES" name="Yes" value="-8" />
      <member cname="GTK_RESPONSE_NO" name="No" value="-9" />
      <member cname="GTK_RESPONSE_APPLY" name="Apply" value="-10" />
      <member cname="GTK_RESPONSE_HELP" name="Help" value="-11" />
    </enum>
    <enum name="ScrollStep" cname="GtkScrollStep" type="enum">
      <member cname="GTK_SCROLL_STEPS" name="Steps" />
      <member cname="GTK_SCROLL_PAGES" name="Pages" />
      <member cname="GTK_SCROLL_ENDS" name="Ends" />
      <member cname="GTK_SCROLL_HORIZONTAL_STEPS" name="HorizontalSteps" />
      <member cname="GTK_SCROLL_HORIZONTAL_PAGES" name="HorizontalPages" />
      <member cname="GTK_SCROLL_HORIZONTAL_ENDS" name="HorizontalEnds" />
    </enum>
    <enum name="ScrollType" cname="GtkScrollType" type="enum">
      <member cname="GTK_SCROLL_NONE" name="None" />
      <member cname="GTK_SCROLL_JUMP" name="Jump" />
      <member cname="GTK_SCROLL_STEP_BACKWARD" name="StepBackward" />
      <member cname="GTK_SCROLL_STEP_FORWARD" name="StepForward" />
      <member cname="GTK_SCROLL_PAGE_BACKWARD" name="PageBackward" />
      <member cname="GTK_SCROLL_PAGE_FORWARD" name="PageForward" />
      <member cname="GTK_SCROLL_STEP_UP" name="StepUp" />
      <member cname="GTK_SCROLL_STEP_DOWN" name="StepDown" />
      <member cname="GTK_SCROLL_PAGE_UP" name="PageUp" />
      <member cname="GTK_SCROLL_PAGE_DOWN" name="PageDown" />
      <member cname="GTK_SCROLL_STEP_LEFT" name="StepLeft" />
      <member cname="GTK_SCROLL_STEP_RIGHT" name="StepRight" />
      <member cname="GTK_SCROLL_PAGE_LEFT" name="PageLeft" />
      <member cname="GTK_SCROLL_PAGE_RIGHT" name="PageRight" />
      <member cname="GTK_SCROLL_START" name="Start" />
      <member cname="GTK_SCROLL_END" name="End" />
    </enum>
    <enum name="SelectionMode" cname="GtkSelectionMode" type="enum">
      <member cname="GTK_SELECTION_NONE" name="None" />
      <member cname="GTK_SELECTION_SINGLE" name="Single" />
      <member cname="GTK_SELECTION_BROWSE" name="Browse" />
      <member cname="GTK_SELECTION_MULTIPLE" name="Multiple" />
      <member cname="GTK_SELECTION_EXTENDED" name="Extended" value="Multiple" />
    </enum>
    <enum name="SensitivityType" cname="GtkSensitivityType" type="enum">
      <member cname="GTK_SENSITIVITY_AUTO" name="Auto" />
      <member cname="GTK_SENSITIVITY_ON" name="On" />
      <member cname="GTK_SENSITIVITY_OFF" name="Off" />
    </enum>
    <enum name="ShadowType" cname="GtkShadowType" type="enum">
      <member cname="GTK_SHADOW_NONE" name="None" />
      <member cname="GTK_SHADOW_IN" name="In" />
      <member cname="GTK_SHADOW_OUT" name="Out" />
      <member cname="GTK_SHADOW_ETCHED_IN" name="EtchedIn" />
      <member cname="GTK_SHADOW_ETCHED_OUT" name="EtchedOut" />
    </enum>
    <enum name="SideType" cname="GtkSideType" deprecated="1" type="enum">
      <member cname="GTK_SIDE_TOP" name="Top" />
      <member cname="GTK_SIDE_BOTTOM" name="Bottom" />
      <member cname="GTK_SIDE_LEFT" name="Left" />
      <member cname="GTK_SIDE_RIGHT" name="Right" />
    </enum>
    <enum name="SignalRunType" cname="GtkSignalRunType" deprecated="1" type="enum">
      <member cname="GTK_RUN_FIRST" name="First" value="G_SIGNAL_RUN_FIRST" />
      <member cname="GTK_RUN_LAST" name="Last" value="G_SIGNAL_RUN_LAST" />
      <member cname="GTK_RUN_BOTH" name="Both" value="GTK_RUN_FIRST | GTK_RUN_LAST" />
      <member cname="GTK_RUN_NO_RECURSE" name="NoRecurse" value="G_SIGNAL_NO_RECURSE" />
      <member cname="GTK_RUN_ACTION" name="Action" value="G_SIGNAL_ACTION" />
      <member cname="GTK_RUN_NO_HOOKS" name="NoHooks" value="G_SIGNAL_NO_HOOKS" />
    </enum>
    <enum name="SizeGroupMode" cname="GtkSizeGroupMode" type="enum">
      <member cname="GTK_SIZE_GROUP_NONE" name="None" />
      <member cname="GTK_SIZE_GROUP_HORIZONTAL" name="Horizontal" />
      <member cname="GTK_SIZE_GROUP_VERTICAL" name="Vertical" />
      <member cname="GTK_SIZE_GROUP_BOTH" name="Both" />
    </enum>
    <enum name="SortType" cname="GtkSortType" type="enum">
      <member cname="GTK_SORT_ASCENDING" name="Ascending" />
      <member cname="GTK_SORT_DESCENDING" name="Descending" />
    </enum>
    <enum name="SpinButtonUpdatePolicy" cname="GtkSpinButtonUpdatePolicy" type="enum">
      <member cname="GTK_UPDATE_ALWAYS" name="Always" />
      <member cname="GTK_UPDATE_IF_VALID" name="IfValid" />
    </enum>
    <enum name="SpinType" cname="GtkSpinType" type="enum">
      <member cname="GTK_SPIN_STEP_FORWARD" name="StepForward" />
      <member cname="GTK_SPIN_STEP_BACKWARD" name="StepBackward" />
      <member cname="GTK_SPIN_PAGE_FORWARD" name="PageForward" />
      <member cname="GTK_SPIN_PAGE_BACKWARD" name="PageBackward" />
      <member cname="GTK_SPIN_HOME" name="Home" />
      <member cname="GTK_SPIN_END" name="End" />
      <member cname="GTK_SPIN_USER_DEFINED" name="UserDefined" />
    </enum>
    <enum name="StateType" cname="GtkStateType" type="enum">
      <member cname="GTK_STATE_NORMAL" name="Normal" />
      <member cname="GTK_STATE_ACTIVE" name="Active" />
      <member cname="GTK_STATE_PRELIGHT" name="Prelight" />
      <member cname="GTK_STATE_SELECTED" name="Selected" />
      <member cname="GTK_STATE_INSENSITIVE" name="Insensitive" />
    </enum>
    <enum name="SubmenuDirection" cname="GtkSubmenuDirection" deprecated="1" type="enum">
      <member cname="GTK_DIRECTION_LEFT" name="Left" />
      <member cname="GTK_DIRECTION_RIGHT" name="Right" />
    </enum>
    <enum name="SubmenuPlacement" cname="GtkSubmenuPlacement" deprecated="1" type="enum">
      <member cname="GTK_TOP_BOTTOM" name="TopBottom" />
      <member cname="GTK_LEFT_RIGHT" name="LeftRight" />
    </enum>
    <enum name="TargetFlags" cname="GtkTargetFlags" type="flags">
      <member cname="GTK_TARGET_SAME_APP" name="App" value="1 &lt;&lt; 0" />
      <member cname="GTK_TARGET_SAME_WIDGET" name="Widget" value="1 &lt;&lt; 1" />
    </enum>
    <enum name="TextBufferTargetInfo" cname="GtkTextBufferTargetInfo" type="enum">
      <member cname="GTK_TEXT_BUFFER_TARGET_INFO_BUFFER_CONTENTS" name="BufferContents" value="- 1" />
      <member cname="GTK_TEXT_BUFFER_TARGET_INFO_RICH_TEXT" name="RichText" value="- 2" />
      <member cname="GTK_TEXT_BUFFER_TARGET_INFO_TEXT" name="Text" value="- 3" />
    </enum>
    <enum name="TextDirection" cname="GtkTextDirection" type="enum">
      <member cname="GTK_TEXT_DIR_NONE" name="None" />
      <member cname="GTK_TEXT_DIR_LTR" name="Ltr" />
      <member cname="GTK_TEXT_DIR_RTL" name="Rtl" />
    </enum>
    <enum name="TextSearchFlags" cname="GtkTextSearchFlags" type="flags">
      <member cname="GTK_TEXT_SEARCH_VISIBLE_ONLY" name="VisibleOnly" value="1 &lt;&lt; 0" />
      <member cname="GTK_TEXT_SEARCH_TEXT_ONLY" name="TextOnly" value="1 &lt;&lt; 1" />
    </enum>
    <enum name="TextWindowType" cname="GtkTextWindowType" type="enum">
      <member cname="GTK_TEXT_WINDOW_PRIVATE" name="Private" />
      <member cname="GTK_TEXT_WINDOW_WIDGET" name="Widget" />
      <member cname="GTK_TEXT_WINDOW_TEXT" name="Text" />
      <member cname="GTK_TEXT_WINDOW_LEFT" name="Left" />
      <member cname="GTK_TEXT_WINDOW_RIGHT" name="Right" />
      <member cname="GTK_TEXT_WINDOW_TOP" name="Top" />
      <member cname="GTK_TEXT_WINDOW_BOTTOM" name="Bottom" />
    </enum>
    <enum name="ToolbarChildType" cname="GtkToolbarChildType" deprecated="1" type="enum">
      <member cname="GTK_TOOLBAR_CHILD_SPACE" name="Space" />
      <member cname="GTK_TOOLBAR_CHILD_BUTTON" name="Button" />
      <member cname="GTK_TOOLBAR_CHILD_TOGGLEBUTTON" name="Togglebutton" />
      <member cname="GTK_TOOLBAR_CHILD_RADIOBUTTON" name="Radiobutton" />
      <member cname="GTK_TOOLBAR_CHILD_WIDGET" name="Widget" />
    </enum>
    <enum name="ToolbarSpaceStyle" cname="GtkToolbarSpaceStyle" type="enum">
      <member cname="GTK_TOOLBAR_SPACE_EMPTY" name="Empty" />
      <member cname="GTK_TOOLBAR_SPACE_LINE" name="Line" />
    </enum>
    <enum name="ToolbarStyle" cname="GtkToolbarStyle" type="enum">
      <member cname="GTK_TOOLBAR_ICONS" name="Icons" />
      <member cname="GTK_TOOLBAR_TEXT" name="Text" />
      <member cname="GTK_TOOLBAR_BOTH" name="Both" />
      <member cname="GTK_TOOLBAR_BOTH_HORIZ" name="BothHoriz" />
    </enum>
    <enum name="TreeModelFlags" cname="GtkTreeModelFlags" type="flags">
      <member cname="GTK_TREE_MODEL_ITERS_PERSIST" name="ItersPersist" value="1 &lt;&lt; 0" />
      <member cname="GTK_TREE_MODEL_LIST_ONLY" name="ListOnly" value="1 &lt;&lt; 1" />
    </enum>
    <enum name="TreeViewColumnSizing" cname="GtkTreeViewColumnSizing" type="enum">
      <member cname="GTK_TREE_VIEW_COLUMN_GROW_ONLY" name="GrowOnly" />
      <member cname="GTK_TREE_VIEW_COLUMN_AUTOSIZE" name="Autosize" />
      <member cname="GTK_TREE_VIEW_COLUMN_FIXED" name="Fixed" />
    </enum>
    <enum name="TreeViewDropPosition" cname="GtkTreeViewDropPosition" type="enum">
      <member cname="GTK_TREE_VIEW_DROP_BEFORE" name="Before" />
      <member cname="GTK_TREE_VIEW_DROP_AFTER" name="After" />
      <member cname="GTK_TREE_VIEW_DROP_INTO_OR_BEFORE" name="IntoOrBefore" />
      <member cname="GTK_TREE_VIEW_DROP_INTO_OR_AFTER" name="IntoOrAfter" />
    </enum>
    <enum name="TreeViewGridLines" cname="GtkTreeViewGridLines" type="enum">
      <member cname="GTK_TREE_VIEW_GRID_LINES_NONE" name="None" />
      <member cname="GTK_TREE_VIEW_GRID_LINES_HORIZONTAL" name="Horizontal" />
      <member cname="GTK_TREE_VIEW_GRID_LINES_VERTICAL" name="Vertical" />
      <member cname="GTK_TREE_VIEW_GRID_LINES_BOTH" name="Both" />
    </enum>
    <enum name="UIManagerItemType" cname="GtkUIManagerItemType" type="flags">
      <member cname="GTK_UI_MANAGER_AUTO" name="Auto" />
      <member cname="GTK_UI_MANAGER_MENUBAR" name="Menubar" value="1 &lt;&lt; 0" />
      <member cname="GTK_UI_MANAGER_MENU" name="Menu" value="1 &lt;&lt; 1" />
      <member cname="GTK_UI_MANAGER_TOOLBAR" name="Toolbar" value="1 &lt;&lt; 2" />
      <member cname="GTK_UI_MANAGER_PLACEHOLDER" name="Placeholder" value="1 &lt;&lt; 3" />
      <member cname="GTK_UI_MANAGER_POPUP" name="Popup" value="1 &lt;&lt; 4" />
      <member cname="GTK_UI_MANAGER_MENUITEM" name="Menuitem" value="1 &lt;&lt; 5" />
      <member cname="GTK_UI_MANAGER_TOOLITEM" name="Toolitem" value="1 &lt;&lt; 6" />
      <member cname="GTK_UI_MANAGER_SEPARATOR" name="Separator" value="1 &lt;&lt; 7" />
      <member cname="GTK_UI_MANAGER_ACCELERATOR" name="Accelerator" value="1 &lt;&lt; 8" />
    </enum>
    <enum name="Unit" cname="GtkUnit" type="enum">
      <member cname="GTK_UNIT_PIXEL" name="Pixel" />
      <member cname="GTK_UNIT_POINTS" name="Points" />
      <member cname="GTK_UNIT_INCH" name="Inch" />
      <member cname="GTK_UNIT_MM" name="Mm" />
    </enum>
    <enum name="UpdateType" cname="GtkUpdateType" type="enum">
      <member cname="GTK_UPDATE_CONTINUOUS" name="Continuous" />
      <member cname="GTK_UPDATE_DISCONTINUOUS" name="Discontinuous" />
      <member cname="GTK_UPDATE_DELAYED" name="Delayed" />
    </enum>
    <enum name="Visibility" cname="GtkVisibility" type="enum">
      <member cname="GTK_VISIBILITY_NONE" name="None" />
      <member cname="GTK_VISIBILITY_PARTIAL" name="Partial" />
      <member cname="GTK_VISIBILITY_FULL" name="Full" />
    </enum>
    <enum name="WidgetFlags" cname="GtkWidgetFlags" type="flags">
      <member cname="GTK_TOPLEVEL" name="Toplevel" value="1 &lt;&lt; 4" />
      <member cname="GTK_NO_WINDOW" name="NoWindow" value="1 &lt;&lt; 5" />
      <member cname="GTK_REALIZED" name="Realized" value="1 &lt;&lt; 6" />
      <member cname="GTK_MAPPED" name="Mapped" value="1 &lt;&lt; 7" />
      <member cname="GTK_VISIBLE" name="Visible" value="1 &lt;&lt; 8" />
      <member cname="GTK_SENSITIVE" name="Sensitive" value="1 &lt;&lt; 9" />
      <member cname="GTK_PARENT_SENSITIVE" name="ParentSensitive" value="1 &lt;&lt; 10" />
      <member cname="GTK_CAN_FOCUS" name="CanFocus" value="1 &lt;&lt; 11" />
      <member cname="GTK_HAS_FOCUS" name="HasFocus" value="1 &lt;&lt; 12" />
      <member cname="GTK_CAN_DEFAULT" name="CanDefault" value="1 &lt;&lt; 13" />
      <member cname="GTK_HAS_DEFAULT" name="HasDefault" value="1 &lt;&lt; 14" />
      <member cname="GTK_HAS_GRAB" name="HasGrab" value="1 &lt;&lt; 15" />
      <member cname="GTK_RC_STYLE" name="RcStyle" value="1 &lt;&lt; 16" />
      <member cname="GTK_COMPOSITE_CHILD" name="CompositeChild" value="1 &lt;&lt; 17" />
      <member cname="GTK_NO_REPARENT" name="NoReparent" value="1 &lt;&lt; 18" />
      <member cname="GTK_APP_PAINTABLE" name="AppPaintable" value="1 &lt;&lt; 19" />
      <member cname="GTK_RECEIVES_DEFAULT" name="ReceivesDefault" value="1 &lt;&lt; 20" />
      <member cname="GTK_DOUBLE_BUFFERED" name="DoubleBuffered" value="1 &lt;&lt; 21" />
      <member cname="GTK_NO_SHOW_ALL" name="NoShowAll" value="1 &lt;&lt; 22" />
    </enum>
    <enum name="WidgetHelpType" cname="GtkWidgetHelpType" type="enum">
      <member cname="GTK_WIDGET_HELP_TOOLTIP" name="Tooltip" />
      <member cname="GTK_WIDGET_HELP_WHATS_THIS" name="WhatsThis" />
    </enum>
    <enum name="WindowPosition" cname="GtkWindowPosition" type="enum">
      <member cname="GTK_WIN_POS_NONE" name="None" />
      <member cname="GTK_WIN_POS_CENTER" name="Center" />
      <member cname="GTK_WIN_POS_MOUSE" name="Mouse" />
      <member cname="GTK_WIN_POS_CENTER_ALWAYS" name="CenterAlways" />
      <member cname="GTK_WIN_POS_CENTER_ON_PARENT" name="CenterOnParent" />
    </enum>
    <enum name="WindowType" cname="GtkWindowType" type="enum">
      <member cname="GTK_WINDOW_TOPLEVEL" name="Toplevel" />
      <member cname="GTK_WINDOW_POPUP" name="Popup" />
    </enum>
    <enum name="WrapMode" cname="GtkWrapMode" type="enum">
      <member cname="GTK_WRAP_NONE" name="None" />
      <member cname="GTK_WRAP_CHAR" name="Char" />
      <member cname="GTK_WRAP_WORD" name="Word" />
      <member cname="GTK_WRAP_WORD_CHAR" name="WordChar" />
    </enum>
    <callback name="AboutDialogActivateLinkFunc" cname="GtkAboutDialogActivateLinkFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkAboutDialog*" name="about" />
        <parameter type="const-gchar*" name="link" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="AccelGroupActivate" cname="GtkAccelGroupActivate">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="GtkAccelGroup*" name="accel_group" />
        <parameter type="GObject*" name="acceleratable" />
        <parameter type="guint" name="keyval" />
        <parameter type="GdkModifierType" name="modifier" />
      </parameters>
    </callback>
    <callback name="AccelGroupFindFunc" cname="GtkAccelGroupFindFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="GtkAccelKey*" name="key" />
        <parameter type="GClosure*" name="closure" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="AccelMapForeach" cname="GtkAccelMapForeach">
      <return-type type="void" />
      <parameters>
        <parameter type="gpointer" name="data" />
        <parameter type="const-gchar*" name="accel_path" />
        <parameter type="guint" name="accel_key" />
        <parameter type="GdkModifierType" name="accel_mods" />
        <parameter type="gboolean" name="changed" />
      </parameters>
    </callback>
    <callback name="AssistantPageFunc" cname="GtkAssistantPageFunc">
      <return-type type="gint" />
      <parameters>
        <parameter type="gint" name="current_page" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="CListCompareFunc" cname="GtkCListCompareFunc">
      <return-type type="Assis" />
    </callback>
    <callback name="CTreeCompareDragFunc" cname="GtkCTreeCompareDragFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="GtkCTree*" name="ctree" />
        <parameter type="GtkCTreeNode*" name="source_node" />
        <parameter type="GtkCTreeNode*" name="new_parent" />
        <parameter type="GtkCTreeNode*" name="new_sibling" />
      </parameters>
    </callback>
    <callback name="CTreeFunc" cname="GtkCTreeFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkCTree*" name="ctree" />
        <parameter type="GtkCTreeNode*" name="node" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="CTreeGNodeFunc" cname="GtkCTreeGNodeFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="GtkCTree*" name="ctree" />
        <parameter type="guint" name="depth" />
        <parameter type="GNode*" name="gnode" />
        <parameter type="GtkCTreeNode*" name="cnode" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="Callback" cname="GtkCallback">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkWidget*" name="widget" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="CallbackMarshal" cname="GtkCallbackMarshal">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkObject*" name="object" />
        <parameter type="gpointer" name="data" />
        <parameter type="guint" name="n_args" />
        <parameter type="GtkArg*" name="args" />
      </parameters>
    </callback>
    <callback name="CellLayoutDataFunc" cname="GtkCellLayoutDataFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkCellLayout*" name="cell_layout" />
        <parameter type="GtkCellRenderer*" name="cell" />
        <parameter type="GtkTreeModel*" name="tree_model" />
        <parameter type="GtkTreeIter*" name="iter" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="ClipboardClearFunc" cname="GtkClipboardClearFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkClipboard*" name="clipboard" />
        <parameter type="gpointer" name="user_data_or_owner" />
      </parameters>
    </callback>
    <callback name="ClipboardGetFunc" cname="GtkClipboardGetFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkClipboard*" name="clipboard" />
        <parameter type="GtkSelectionData*" name="selection_data" />
        <parameter type="guint" name="info" />
        <parameter type="gpointer" name="user_data_or_owner" />
      </parameters>
    </callback>
    <callback name="ClipboardImageReceivedFunc" cname="GtkClipboardImageReceivedFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkClipboard*" name="clipboard" />
        <parameter type="GdkPixbuf*" name="pixbuf" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="ClipboardReceivedFunc" cname="GtkClipboardReceivedFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkClipboard*" name="clipboard" />
        <parameter type="GtkSelectionData*" name="selection_data" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="ClipboardRichTextReceivedFunc" cname="GtkClipboardRichTextReceivedFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkClipboard*" name="clipboard" />
        <parameter type="GdkAtom" name="format" />
        <parameter type="const-guint8*" name="text" />
        <parameter type="gsize" name="length" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="ClipboardTargetsReceivedFunc" cname="GtkClipboardTargetsReceivedFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkClipboard*" name="clipboard" />
        <parameter type="GdkAtom*" name="atoms" />
        <parameter type="gint" name="n_atoms" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="ClipboardTextReceivedFunc" cname="GtkClipboardTextReceivedFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkClipboard*" name="clipboard" />
        <parameter type="const-gchar*" name="text" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="ColorSelectionChangePaletteFunc" cname="GtkColorSelectionChangePaletteFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="const-GdkColor*" name="colors" />
        <parameter type="gint" name="n_colors" />
      </parameters>
    </callback>
    <callback name="ColorSelectionChangePaletteWithScreenFunc" cname="GtkColorSelectionChangePaletteWithScreenFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GdkScreen*" name="screen" />
        <parameter type="const-GdkColor*" name="colors" />
        <parameter type="gint" name="n_colors" />
      </parameters>
    </callback>
    <callback name="DestroyNotify" cname="GtkDestroyNotify">
      <return-type type="void" />
      <parameters>
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="EntryCompletionMatchFunc" cname="GtkEntryCompletionMatchFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="GtkEntryCompletion*" name="completion" />
        <parameter type="const-gchar*" name="key" />
        <parameter type="GtkTreeIter*" name="iter" />
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <callback name="FileFilterFunc" cname="GtkFileFilterFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="const-GtkFileFilterInfo*" name="filter_info" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="FileSystemCreateFolderCallback" cname="GtkFileSystemCreateFolderCallback">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkFileSystemHandle*" name="handle" />
        <parameter type="const-GtkFilePath*" name="path" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="FileSystemGetFolderCallback" cname="GtkFileSystemGetFolderCallback">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkFileSystemHandle*" name="handle" />
        <parameter type="GtkFileFolder*" name="folder" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="FileSystemGetInfoCallback" cname="GtkFileSystemGetInfoCallback">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkFileSystemHandle*" name="handle" />
        <parameter type="const-GtkFileInfo*" name="file_info" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="FileSystemVolumeMountCallback" cname="GtkFileSystemVolumeMountCallback">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkFileSystemHandle*" name="handle" />
        <parameter type="GtkFileSystemVolume*" name="volume" />
        <parameter type="const-GError*" name="error" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="Function" cname="GtkFunction">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="IconViewForeachFunc" cname="GtkIconViewForeachFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkIconView*" name="icon_view" />
        <parameter type="GtkTreePath*" name="path" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="ItemFactoryCallback" cname="GtkItemFactoryCallback">
      <return-type type="void" />
    </callback>
    <callback name="ItemFactoryCallback1" cname="GtkItemFactoryCallback1">
      <return-type type="void" />
      <parameters>
        <parameter type="gpointer" name="callback_data" />
        <parameter type="guint" name="callback_action" />
        <parameter type="GtkWidget*" name="widget" />
      </parameters>
    </callback>
    <callback name="ItemFactoryCallback2" cname="GtkItemFactoryCallback2">
      <return-type type="void" />
    </callback>
    <callback name="KeySnoopFunc" cname="GtkKeySnoopFunc">
      <return-type type="gint" />
      <parameters>
        <parameter type="GtkWidget*" name="grab_widget" />
        <parameter type="GdkEventKey*" name="event" />
        <parameter type="gpointer" name="func_data" />
      </parameters>
    </callback>
    <callback name="LinkButtonUriFunc" cname="GtkLinkButtonUriFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkLinkButton*" name="button" />
        <parameter type="const-gchar*" name="link" />
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <callback name="MenuCallback" cname="GtkMenuCallback">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkWidget*" name="widget" />
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <callback name="MenuDetachFunc" cname="GtkMenuDetachFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkWidget*" name="attach_widget" />
        <parameter type="GtkMenu*" name="menu" />
      </parameters>
    </callback>
    <callback name="MenuPositionFunc" cname="GtkMenuPositionFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkMenu*" name="menu" />
        <parameter type="gint*" name="x" />
        <parameter type="gint*" name="y" />
        <parameter type="gboolean*" name="push_in" />
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <callback name="ModuleDisplayInitFunc" cname="GtkModuleDisplayInitFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GdkDisplay*" name="display" />
      </parameters>
    </callback>
    <callback name="ModuleInitFunc" cname="GtkModuleInitFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="gint*" name="argc" />
        <parameter type="gchar***" name="argv" />
      </parameters>
    </callback>
    <callback name="NotebookWindowCreationFunc" cname="GtkNotebookWindowCreationFunc">
      <return-type type="GtkNotebook*" />
      <parameters>
        <parameter type="GtkNotebook*" name="source" />
        <parameter type="GtkWidget*" name="page" />
        <parameter type="gint" name="x" />
        <parameter type="gint" name="y" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="PageSetupDoneFunc" cname="GtkPageSetupDoneFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkPageSetup*" name="page_setup" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="PrintFunc" cname="GtkPrintFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="gpointer" name="func_data" />
        <parameter type="const-gchar*" name="str" />
      </parameters>
    </callback>
    <callback name="PrintSettingsFunc" cname="GtkPrintSettingsFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="const-gchar*" name="key" />
        <parameter type="const-gchar*" name="value" />
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <callback name="RcPropertyParser" cname="GtkRcPropertyParser">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="const-GParamSpec*" name="pspec" />
        <parameter type="const-GString*" name="rc_string" />
        <parameter type="GValue*" name="property_value" />
      </parameters>
    </callback>
    <callback name="RecentFilterFunc" cname="GtkRecentFilterFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="const-GtkRecentFilterInfo*" name="filter_info" />
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <callback name="RecentSortFunc" cname="GtkRecentSortFunc">
      <return-type type="gint" />
      <parameters>
        <parameter type="GtkRecentInfo*" name="a" />
        <parameter type="GtkRecentInfo*" name="b" />
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <callback name="SignalFunc" cname="GtkSignalFunc">
      <return-type type="void" />
    </callback>
    <callback name="TextBufferDeserializeFunc" cname="GtkTextBufferDeserializeFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="GtkTextBuffer*" name="register_buffer" />
        <parameter type="GtkTextBuffer*" name="content_buffer" />
        <parameter type="GtkTextIter*" name="iter" />
        <parameter type="const-guint8*" name="data" />
        <parameter type="gsize" name="length" />
        <parameter type="gboolean" name="create_tags" />
        <parameter type="gpointer" name="user_data" />
        <parameter type="GError**" name="error" />
      </parameters>
    </callback>
    <callback name="TextBufferSerializeFunc" cname="GtkTextBufferSerializeFunc">
      <return-type type="guint8*" />
      <parameters>
        <parameter type="GtkTextBuffer*" name="register_buffer" />
        <parameter type="GtkTextBuffer*" name="content_buffer" />
        <parameter type="const-GtkTextIter*" name="start" />
        <parameter type="const-GtkTextIter*" name="end" />
        <parameter type="gsize*" name="length" />
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <callback name="TextCharPredicate" cname="GtkTextCharPredicate">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="gunichar" name="ch" />
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <callback name="TextFunction" cname="GtkTextFunction">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkOldEditable*" name="editable" />
        <parameter type="guint32" name="time_" />
      </parameters>
    </callback>
    <callback name="TextTagTableForeach" cname="GtkTextTagTableForeach">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkTextTag*" name="tag" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="TranslateFunc" cname="GtkTranslateFunc">
      <return-type type="gchar*" />
      <parameters>
        <parameter type="const-gchar*" name="path" />
        <parameter type="gpointer" name="func_data" />
      </parameters>
    </callback>
    <callback name="TreeCellDataFunc" cname="GtkTreeCellDataFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkTreeViewColumn*" name="tree_column" />
        <parameter type="GtkCellRenderer*" name="cell" />
        <parameter type="GtkTreeModel*" name="tree_model" />
        <parameter type="GtkTreeIter*" name="iter" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="TreeDestroyCountFunc" cname="GtkTreeDestroyCountFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkTreeView*" name="tree_view" />
        <parameter type="GtkTreePath*" name="path" />
        <parameter type="gint" name="children" />
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <callback name="TreeIterCompareFunc" cname="GtkTreeIterCompareFunc">
      <return-type type="gint" />
      <parameters>
        <parameter type="GtkTreeModel*" name="model" />
        <parameter type="GtkTreeIter*" name="a" />
        <parameter type="GtkTreeIter*" name="b" />
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <callback name="TreeModelFilterModifyFunc" cname="GtkTreeModelFilterModifyFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkTreeModel*" name="model" />
        <parameter type="GtkTreeIter*" name="iter" />
        <parameter type="GValue*" name="value" />
        <parameter type="gint" name="column" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="TreeModelFilterVisibleFunc" cname="GtkTreeModelFilterVisibleFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="GtkTreeModel*" name="model" />
        <parameter type="GtkTreeIter*" name="iter" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="TreeModelForeachFunc" cname="GtkTreeModelForeachFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="GtkTreeModel*" name="model" />
        <parameter type="GtkTreePath*" name="path" />
        <parameter type="GtkTreeIter*" name="iter" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="TreeSelectionForeachFunc" cname="GtkTreeSelectionForeachFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkTreeModel*" name="model" />
        <parameter type="GtkTreePath*" name="path" />
        <parameter type="GtkTreeIter*" name="iter" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="TreeSelectionFunc" cname="GtkTreeSelectionFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="GtkTreeSelection*" name="selection" />
        <parameter type="GtkTreeModel*" name="model" />
        <parameter type="GtkTreePath*" name="path" />
        <parameter type="gboolean" name="path_currently_selected" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="TreeViewColumnDropFunc" cname="GtkTreeViewColumnDropFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="GtkTreeView*" name="tree_view" />
        <parameter type="GtkTreeViewColumn*" name="column" />
        <parameter type="GtkTreeViewColumn*" name="prev_column" />
        <parameter type="GtkTreeViewColumn*" name="next_column" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="TreeViewMappingFunc" cname="GtkTreeViewMappingFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkTreeView*" name="tree_view" />
        <parameter type="GtkTreePath*" name="path" />
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <callback name="TreeViewRowSeparatorFunc" cname="GtkTreeViewRowSeparatorFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="GtkTreeModel*" name="model" />
        <parameter type="GtkTreeIter*" name="iter" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="TreeViewSearchEqualFunc" cname="GtkTreeViewSearchEqualFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="GtkTreeModel*" name="model" />
        <parameter type="gint" name="column" />
        <parameter type="const-gchar*" name="key" />
        <parameter type="GtkTreeIter*" name="iter" />
        <parameter type="gpointer" name="search_data" />
      </parameters>
    </callback>
    <callback name="TreeViewSearchPositionFunc" cname="GtkTreeViewSearchPositionFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkTreeView*" name="tree_view" />
        <parameter type="GtkWidget*" name="search_dialog" />
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <callback name="WindowKeysForeachFunc" cname="GtkWindowKeysForeachFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkWindow*" name="window" />
        <parameter type="guint" name="keyval" />
        <parameter type="GdkModifierType" name="modifiers" />
        <parameter type="gboolean" name="is_mnemonic" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <interface name="CellEditable" cname="GtkCellEditable">
      <virtual_method name="EditingDone" cname="editing_done">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellEditable*" name="cell_editable" />
        </parameters>
      </virtual_method>
      <virtual_method name="RemoveWidget" cname="remove_widget">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellEditable*" name="cell_editable" />
        </parameters>
      </virtual_method>
      <virtual_method name="StartEditing" cname="start_editing">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellEditable*" name="cell_editable" />
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </virtual_method>
      <method name="EditingDone" cname="gtk_cell_editable_editing_done">
        <return-type type="void" />
      </method>
      <method name="GetType" cname="gtk_cell_editable_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="RemoveWidget" cname="gtk_cell_editable_remove_widget">
        <return-type type="void" />
      </method>
      <method name="StartEditing" cname="gtk_cell_editable_start_editing">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </method>
    </interface>
    <interface name="CellLayout" cname="GtkCellLayout">
      <virtual_method name="PackStart" cname="pack_start">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellLayout*" name="cell_layout" />
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter type="gboolean" name="expand" />
        </parameters>
      </virtual_method>
      <virtual_method name="PackEnd" cname="pack_end">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellLayout*" name="cell_layout" />
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter type="gboolean" name="expand" />
        </parameters>
      </virtual_method>
      <virtual_method name="Clear" cname="clear">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellLayout*" name="cell_layout" />
        </parameters>
      </virtual_method>
      <virtual_method name="AddAttribute" cname="add_attribute">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellLayout*" name="cell_layout" />
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter type="const-gchar*" name="attribute" />
          <parameter type="gint" name="column" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetCellDataFunc" cname="set_cell_data_func">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellLayout*" name="cell_layout" />
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter type="GtkCellLayoutDataFunc" name="func" />
          <parameter type="gpointer" name="func_data" />
          <parameter type="GDestroyNotify" name="destroy" />
        </parameters>
      </virtual_method>
      <virtual_method name="ClearAttributes" cname="clear_attributes">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellLayout*" name="cell_layout" />
          <parameter type="GtkCellRenderer*" name="cell" />
        </parameters>
      </virtual_method>
      <virtual_method name="Reorder" cname="reorder">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellLayout*" name="cell_layout" />
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter type="gint" name="position" />
        </parameters>
      </virtual_method>
      <method name="AddAttribute" cname="gtk_cell_layout_add_attribute">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter type="const-gchar*" name="attribute" />
          <parameter type="gint" name="column" />
        </parameters>
      </method>
      <method name="Clear" cname="gtk_cell_layout_clear">
        <return-type type="void" />
      </method>
      <method name="ClearAttributes" cname="gtk_cell_layout_clear_attributes">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_cell_layout_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="PackEnd" cname="gtk_cell_layout_pack_end">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter type="gboolean" name="expand" />
        </parameters>
      </method>
      <method name="PackStart" cname="gtk_cell_layout_pack_start">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter type="gboolean" name="expand" />
        </parameters>
      </method>
      <method name="Reorder" cname="gtk_cell_layout_reorder">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="SetAttributes" cname="gtk_cell_layout_set_attributes">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="SetCellDataFunc" cname="gtk_cell_layout_set_cell_data_func">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter type="GtkCellLayoutDataFunc" name="func" />
          <parameter type="gpointer" name="func_data" />
          <parameter type="GDestroyNotify" name="destroy" />
        </parameters>
      </method>
    </interface>
    <interface name="Editable" cname="GtkEditable">
      <virtual_method name="InsertText" cname="insert_text">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkEditable*" name="editable" />
          <parameter type="const-gchar*" name="text" />
          <parameter type="gint" name="length" />
          <parameter type="gint*" name="position" />
        </parameters>
      </virtual_method>
      <virtual_method name="DeleteText" cname="delete_text">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkEditable*" name="editable" />
          <parameter type="gint" name="start_pos" />
          <parameter type="gint" name="end_pos" />
        </parameters>
      </virtual_method>
      <virtual_method name="Changed" cname="changed">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkEditable*" name="editable" />
        </parameters>
      </virtual_method>
      <virtual_method name="DoInsertText" cname="do_insert_text">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkEditable*" name="editable" />
          <parameter type="const-gchar*" name="text" />
          <parameter type="gint" name="length" />
          <parameter type="gint*" name="position" />
        </parameters>
      </virtual_method>
      <virtual_method name="DoDeleteText" cname="do_delete_text">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkEditable*" name="editable" />
          <parameter type="gint" name="start_pos" />
          <parameter type="gint" name="end_pos" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetChars" cname="get_chars">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="GtkEditable*" name="editable" />
          <parameter type="gint" name="start_pos" />
          <parameter type="gint" name="end_pos" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetSelectionBounds" cname="set_selection_bounds">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkEditable*" name="editable" />
          <parameter type="gint" name="start_pos" />
          <parameter type="gint" name="end_pos" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetSelectionBounds" cname="get_selection_bounds">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkEditable*" name="editable" />
          <parameter type="gint*" name="start_pos" />
          <parameter type="gint*" name="end_pos" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetPosition" cname="set_position">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkEditable*" name="editable" />
          <parameter type="gint" name="position" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetPosition" cname="get_position">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkEditable*" name="editable" />
        </parameters>
      </virtual_method>
      <method name="CopyClipboard" cname="gtk_editable_copy_clipboard">
        <return-type type="void" />
      </method>
      <method name="CutClipboard" cname="gtk_editable_cut_clipboard">
        <return-type type="void" />
      </method>
      <method name="DeleteSelection" cname="gtk_editable_delete_selection">
        <return-type type="void" />
      </method>
      <method name="DeleteText" cname="gtk_editable_delete_text">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="start_pos" />
          <parameter type="gint" name="end_pos" />
        </parameters>
      </method>
      <method name="GetChars" cname="gtk_editable_get_chars">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="gint" name="start_pos" />
          <parameter type="gint" name="end_pos" />
        </parameters>
      </method>
      <method name="GetEditable" cname="gtk_editable_get_editable">
        <return-type type="gboolean" />
      </method>
      <method name="GetPosition" cname="gtk_editable_get_position">
        <return-type type="gint" />
      </method>
      <method name="GetSelectionBounds" cname="gtk_editable_get_selection_bounds">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint*" name="start" />
          <parameter type="gint*" name="end" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_editable_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="InsertText" cname="gtk_editable_insert_text">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="new_text" />
          <parameter type="gint" name="new_text_length" />
          <parameter type="gint*" name="position" />
        </parameters>
      </method>
      <method name="PasteClipboard" cname="gtk_editable_paste_clipboard">
        <return-type type="void" />
      </method>
      <method name="SelectRegion" cname="gtk_editable_select_region">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="start" />
          <parameter type="gint" name="end" />
        </parameters>
      </method>
      <method name="SetEditable" cname="gtk_editable_set_editable">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="is_editable" />
        </parameters>
      </method>
      <method name="SetPosition" cname="gtk_editable_set_position">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="position" />
        </parameters>
      </method>
    </interface>
    <interface name="FileFolder" cname="GtkFileFolder">
      <virtual_method name="GetInfo" cname="get_info">
        <return-type type="GtkFileInfo*" />
        <parameters>
          <parameter type="GtkFileFolder*" name="folder" />
          <parameter type="const-GtkFilePath*" name="path" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="ListChildren" cname="list_children">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkFileFolder*" name="folder" />
          <parameter type="GSList**" name="children" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="Deleted" cname="deleted">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFileFolder*" name="monitor" />
        </parameters>
      </virtual_method>
      <virtual_method name="FilesAdded" cname="files_added">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFileFolder*" name="monitor" />
          <parameter type="GSList*" name="paths" />
        </parameters>
      </virtual_method>
      <virtual_method name="FilesChanged" cname="files_changed">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFileFolder*" name="monitor" />
          <parameter type="GSList*" name="paths" />
        </parameters>
      </virtual_method>
      <virtual_method name="FilesRemoved" cname="files_removed">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFileFolder*" name="monitor" />
          <parameter type="GSList*" name="paths" />
        </parameters>
      </virtual_method>
      <virtual_method name="IsFinishedLoading" cname="is_finished_loading">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkFileFolder*" name="folder" />
        </parameters>
      </virtual_method>
      <virtual_method name="FinishedLoading" cname="finished_loading">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFileFolder*" name="folder" />
        </parameters>
      </virtual_method>
      <method name="GetInfo" cname="gtk_file_folder_get_info">
        <return-type type="GtkFileInfo*" />
        <parameters>
          <parameter type="const-GtkFilePath*" name="path" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_file_folder_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="IsFinishedLoading" cname="gtk_file_folder_is_finished_loading">
        <return-type type="gboolean" />
      </method>
      <method name="ListChildren" cname="gtk_file_folder_list_children">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GSList**" name="children" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
    </interface>
    <interface name="FileSystem" cname="GtkFileSystem">
      <virtual_method name="ListVolumes" cname="list_volumes">
        <return-type type="GSList*" />
        <parameters>
          <parameter type="GtkFileSystem*" name="file_system" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetVolumeForPath" cname="get_volume_for_path">
        <return-type type="GtkFileSystemVolume*" />
        <parameters>
          <parameter type="GtkFileSystem*" name="file_system" />
          <parameter type="const-GtkFilePath*" name="path" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetFolder" cname="get_folder">
        <return-type type="GtkFileSystemHandle*" />
        <parameters>
          <parameter type="GtkFileSystem*" name="file_system" />
          <parameter type="const-GtkFilePath*" name="path" />
          <parameter type="GtkFileInfoType" name="types" />
          <parameter type="GtkFileSystemGetFolderCallback" name="callback" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetInfo" cname="get_info">
        <return-type type="GtkFileSystemHandle*" />
        <parameters>
          <parameter type="GtkFileSystem*" name="file_system" />
          <parameter type="const-GtkFilePath*" name="path" />
          <parameter type="GtkFileInfoType" name="types" />
          <parameter type="GtkFileSystemGetInfoCallback" name="callback" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </virtual_method>
      <virtual_method name="CreateFolder" cname="create_folder">
        <return-type type="GtkFileSystemHandle*" />
        <parameters>
          <parameter type="GtkFileSystem*" name="file_system" />
          <parameter type="const-GtkFilePath*" name="path" />
          <parameter type="GtkFileSystemCreateFolderCallback" name="callback" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </virtual_method>
      <virtual_method name="CancelOperation" cname="cancel_operation">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFileSystemHandle*" name="handle" />
        </parameters>
      </virtual_method>
      <virtual_method name="VolumeFree" cname="volume_free">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFileSystem*" name="file_system" />
          <parameter type="GtkFileSystemVolume*" name="volume" />
        </parameters>
      </virtual_method>
      <virtual_method name="VolumeGetBasePath" cname="volume_get_base_path">
        <return-type type="GtkFilePath*" />
        <parameters>
          <parameter type="GtkFileSystem*" name="file_system" />
          <parameter type="GtkFileSystemVolume*" name="volume" />
        </parameters>
      </virtual_method>
      <virtual_method name="VolumeGetIsMounted" cname="volume_get_is_mounted">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkFileSystem*" name="file_system" />
          <parameter type="GtkFileSystemVolume*" name="volume" />
        </parameters>
      </virtual_method>
      <virtual_method name="VolumeMount" cname="volume_mount">
        <return-type type="GtkFileSystemHandle*" />
        <parameters>
          <parameter type="GtkFileSystem*" name="file_system" />
          <parameter type="GtkFileSystemVolume*" name="volume" />
          <parameter type="GtkFileSystemVolumeMountCallback" name="callback" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </virtual_method>
      <virtual_method name="VolumeGetDisplayName" cname="volume_get_display_name">
        <return-type type="char*" />
        <parameters>
          <parameter type="GtkFileSystem*" name="file_system" />
          <parameter type="GtkFileSystemVolume*" name="volume" />
        </parameters>
      </virtual_method>
      <virtual_method name="VolumeGetIconName" cname="volume_get_icon_name">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="GtkFileSystem*" name="file_system" />
          <parameter type="GtkFileSystemVolume*" name="volume" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetParent" cname="get_parent">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkFileSystem*" name="file_system" />
          <parameter type="const-GtkFilePath*" name="path" />
          <parameter type="GtkFilePath**" name="parent" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="MakePath" cname="make_path">
        <return-type type="GtkFilePath*" />
        <parameters>
          <parameter type="GtkFileSystem*" name="file_system" />
          <parameter type="const-GtkFilePath*" name="base_path" />
          <parameter type="const-gchar*" name="display_name" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="Parse" cname="parse">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkFileSystem*" name="file_system" />
          <parameter type="const-GtkFilePath*" name="base_path" />
          <parameter type="const-gchar*" name="str" />
          <parameter type="GtkFilePath**" name="folder" />
          <parameter type="gchar**" name="file_part" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="PathToUri" cname="path_to_uri">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="GtkFileSystem*" name="file_system" />
          <parameter type="const-GtkFilePath*" name="path" />
        </parameters>
      </virtual_method>
      <virtual_method name="PathToFilename" cname="path_to_filename">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="GtkFileSystem*" name="file_system" />
          <parameter type="const-GtkFilePath*" name="path" />
        </parameters>
      </virtual_method>
      <virtual_method name="UriToPath" cname="uri_to_path">
        <return-type type="GtkFilePath*" />
        <parameters>
          <parameter type="GtkFileSystem*" name="file_system" />
          <parameter type="const-gchar*" name="uri" />
        </parameters>
      </virtual_method>
      <virtual_method name="FilenameToPath" cname="filename_to_path">
        <return-type type="GtkFilePath*" />
        <parameters>
          <parameter type="GtkFileSystem*" name="file_system" />
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </virtual_method>
      <virtual_method name="InsertBookmark" cname="insert_bookmark">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkFileSystem*" name="file_system" />
          <parameter type="const-GtkFilePath*" name="path" />
          <parameter type="gint" name="position" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="RemoveBookmark" cname="remove_bookmark">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkFileSystem*" name="file_system" />
          <parameter type="const-GtkFilePath*" name="path" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="ListBookmarks" cname="list_bookmarks">
        <return-type type="GSList*" />
        <parameters>
          <parameter type="GtkFileSystem*" name="file_system" />
        </parameters>
      </virtual_method>
      <virtual_method name="VolumesChanged" cname="volumes_changed">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFileSystem*" name="file_system" />
        </parameters>
      </virtual_method>
      <virtual_method name="BookmarksChanged" cname="bookmarks_changed">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFileSystem*" name="file_system" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetBookmarkLabel" cname="get_bookmark_label">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="GtkFileSystem*" name="file_system" />
          <parameter type="const-GtkFilePath*" name="path" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetBookmarkLabel" cname="set_bookmark_label">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFileSystem*" name="file_system" />
          <parameter type="const-GtkFilePath*" name="path" />
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </virtual_method>
      <method name="CancelOperation" cname="gtk_file_system_cancel_operation" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFileSystemHandle*" name="handle" />
        </parameters>
      </method>
      <method name="Create" cname="gtk_file_system_create" shared="true">
        <return-type type="GtkFileSystem*" />
        <parameters>
          <parameter type="const-char*" name="file_system_name" />
        </parameters>
      </method>
      <method name="CreateFolder" cname="gtk_file_system_create_folder">
        <return-type type="GtkFileSystemHandle*" />
        <parameters>
          <parameter type="const-GtkFilePath*" name="path" />
          <parameter type="GtkFileSystemCreateFolderCallback" name="callback" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="ErrorQuark" cname="gtk_file_system_error_quark" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="FilenameToPath" cname="gtk_file_system_filename_to_path">
        <return-type type="GtkFilePath*" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
        </parameters>
      </method>
      <method name="GetBookmarkLabel" cname="gtk_file_system_get_bookmark_label">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-GtkFilePath*" name="path" />
        </parameters>
      </method>
      <method name="GetFolder" cname="gtk_file_system_get_folder">
        <return-type type="GtkFileSystemHandle*" />
        <parameters>
          <parameter type="const-GtkFilePath*" name="path" />
          <parameter type="GtkFileInfoType" name="types" />
          <parameter type="GtkFileSystemGetFolderCallback" name="callback" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="GetInfo" cname="gtk_file_system_get_info">
        <return-type type="GtkFileSystemHandle*" />
        <parameters>
          <parameter type="const-GtkFilePath*" name="path" />
          <parameter type="GtkFileInfoType" name="types" />
          <parameter type="GtkFileSystemGetInfoCallback" name="callback" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="GetParent" cname="gtk_file_system_get_parent">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GtkFilePath*" name="path" />
          <parameter type="GtkFilePath**" name="parent" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_file_system_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVolumeForPath" cname="gtk_file_system_get_volume_for_path">
        <return-type type="GtkFileSystemVolume*" />
        <parameters>
          <parameter type="const-GtkFilePath*" name="path" />
        </parameters>
      </method>
      <method name="InsertBookmark" cname="gtk_file_system_insert_bookmark">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GtkFilePath*" name="path" />
          <parameter type="gint" name="position" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ListBookmarks" cname="gtk_file_system_list_bookmarks">
        <return-type type="GSList*" />
      </method>
      <method name="ListVolumes" cname="gtk_file_system_list_volumes">
        <return-type type="GSList*" />
      </method>
      <method name="MakePath" cname="gtk_file_system_make_path">
        <return-type type="GtkFilePath*" />
        <parameters>
          <parameter type="const-GtkFilePath*" name="base_path" />
          <parameter type="const-gchar*" name="display_name" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="Parse" cname="gtk_file_system_parse">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GtkFilePath*" name="base_path" />
          <parameter type="const-gchar*" name="str" />
          <parameter type="GtkFilePath**" name="folder" />
          <parameter type="gchar**" name="file_part" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="PathIsLocal" cname="gtk_file_system_path_is_local">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GtkFilePath*" name="path" />
        </parameters>
      </method>
      <method name="PathToFilename" cname="gtk_file_system_path_to_filename">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-GtkFilePath*" name="path" />
        </parameters>
      </method>
      <method name="PathToUri" cname="gtk_file_system_path_to_uri">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-GtkFilePath*" name="path" />
        </parameters>
      </method>
      <method name="RemoveBookmark" cname="gtk_file_system_remove_bookmark">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GtkFilePath*" name="path" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="SetBookmarkLabel" cname="gtk_file_system_set_bookmark_label">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GtkFilePath*" name="path" />
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </method>
      <method name="UriToPath" cname="gtk_file_system_uri_to_path">
        <return-type type="GtkFilePath*" />
        <parameters>
          <parameter type="const-gchar*" name="uri" />
        </parameters>
      </method>
    </interface>
    <interface name="PrintOperationPreview" cname="GtkPrintOperationPreview">
      <virtual_method name="Ready" cname="ready">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPrintOperationPreview*" name="preview" />
          <parameter type="GtkPrintContext*" name="context" />
        </parameters>
      </virtual_method>
      <virtual_method name="GotPageSize" cname="got_page_size">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPrintOperationPreview*" name="preview" />
          <parameter type="GtkPrintContext*" name="context" />
          <parameter type="GtkPageSetup*" name="page_setup" />
        </parameters>
      </virtual_method>
      <virtual_method name="RenderPage" cname="render_page">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPrintOperationPreview*" name="preview" />
          <parameter type="gint" name="page_nr" />
        </parameters>
      </virtual_method>
      <virtual_method name="IsSelected" cname="is_selected">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkPrintOperationPreview*" name="preview" />
          <parameter type="gint" name="page_nr" />
        </parameters>
      </virtual_method>
      <virtual_method name="EndPreview" cname="end_preview">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPrintOperationPreview*" name="preview" />
        </parameters>
      </virtual_method>
      <method name="EndPreview" cname="gtk_print_operation_preview_end_preview">
        <return-type type="void" />
      </method>
      <method name="GetType" cname="gtk_print_operation_preview_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="IsSelected" cname="gtk_print_operation_preview_is_selected">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="page_nr" />
        </parameters>
      </method>
      <method name="RenderPage" cname="gtk_print_operation_preview_render_page">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="page_nr" />
        </parameters>
      </method>
    </interface>
    <interface name="RecentChooser" cname="GtkRecentChooser">
      <virtual_method name="SetCurrentUri" cname="set_current_uri">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkRecentChooser*" name="chooser" />
          <parameter type="const-gchar*" name="uri" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetCurrentUri" cname="get_current_uri">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="GtkRecentChooser*" name="chooser" />
        </parameters>
      </virtual_method>
      <virtual_method name="SelectUri" cname="select_uri">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkRecentChooser*" name="chooser" />
          <parameter type="const-gchar*" name="uri" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="UnselectUri" cname="unselect_uri">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRecentChooser*" name="chooser" />
          <parameter type="const-gchar*" name="uri" />
        </parameters>
      </virtual_method>
      <virtual_method name="SelectAll" cname="select_all">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRecentChooser*" name="chooser" />
        </parameters>
      </virtual_method>
      <virtual_method name="UnselectAll" cname="unselect_all">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRecentChooser*" name="chooser" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetItems" cname="get_items">
        <return-type type="GList*" />
        <parameters>
          <parameter type="GtkRecentChooser*" name="chooser" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetRecentManager" cname="get_recent_manager">
        <return-type type="GtkRecentManager*" />
        <parameters>
          <parameter type="GtkRecentChooser*" name="chooser" />
        </parameters>
      </virtual_method>
      <virtual_method name="AddFilter" cname="add_filter">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRecentChooser*" name="chooser" />
          <parameter type="GtkRecentFilter*" name="filter" />
        </parameters>
      </virtual_method>
      <virtual_method name="RemoveFilter" cname="remove_filter">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRecentChooser*" name="chooser" />
          <parameter type="GtkRecentFilter*" name="filter" />
        </parameters>
      </virtual_method>
      <virtual_method name="ListFilters" cname="list_filters">
        <return-type type="GSList*" />
        <parameters>
          <parameter type="GtkRecentChooser*" name="chooser" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetSortFunc" cname="set_sort_func">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRecentChooser*" name="chooser" />
          <parameter type="GtkRecentSortFunc" name="sort_func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GDestroyNotify" name="destroy" />
        </parameters>
      </virtual_method>
      <virtual_method name="ItemActivated" cname="item_activated">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRecentChooser*" name="chooser" />
        </parameters>
      </virtual_method>
      <virtual_method name="SelectionChanged" cname="selection_changed">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRecentChooser*" name="chooser" />
        </parameters>
      </virtual_method>
      <method name="AddFilter" cname="gtk_recent_chooser_add_filter">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRecentFilter*" name="filter" />
        </parameters>
      </method>
      <method name="ErrorQuark" cname="gtk_recent_chooser_error_quark" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="GetCurrentItem" cname="gtk_recent_chooser_get_current_item">
        <return-type type="GtkRecentInfo*" />
      </method>
      <method name="GetCurrentUri" cname="gtk_recent_chooser_get_current_uri">
        <return-type type="gchar*" />
      </method>
      <method name="GetFilter" cname="gtk_recent_chooser_get_filter">
        <return-type type="GtkRecentFilter*" />
      </method>
      <method name="GetItems" cname="gtk_recent_chooser_get_items">
        <return-type type="GList*" />
      </method>
      <method name="GetLimit" cname="gtk_recent_chooser_get_limit">
        <return-type type="gint" />
      </method>
      <method name="GetLocalOnly" cname="gtk_recent_chooser_get_local_only">
        <return-type type="gboolean" />
      </method>
      <method name="GetSelectMultiple" cname="gtk_recent_chooser_get_select_multiple">
        <return-type type="gboolean" />
      </method>
      <method name="GetShowIcons" cname="gtk_recent_chooser_get_show_icons">
        <return-type type="gboolean" />
      </method>
      <method name="GetShowNotFound" cname="gtk_recent_chooser_get_show_not_found">
        <return-type type="gboolean" />
      </method>
      <method name="GetShowNumbers" cname="gtk_recent_chooser_get_show_numbers">
        <return-type type="gboolean" />
      </method>
      <method name="GetShowPrivate" cname="gtk_recent_chooser_get_show_private">
        <return-type type="gboolean" />
      </method>
      <method name="GetShowTips" cname="gtk_recent_chooser_get_show_tips">
        <return-type type="gboolean" />
      </method>
      <method name="GetSortType" cname="gtk_recent_chooser_get_sort_type">
        <return-type type="GtkRecentSortType" />
      </method>
      <method name="GetType" cname="gtk_recent_chooser_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUris" cname="gtk_recent_chooser_get_uris">
        <return-type type="gchar**" />
        <parameters>
          <parameter type="gsize*" name="length" />
        </parameters>
      </method>
      <method name="ListFilters" cname="gtk_recent_chooser_list_filters">
        <return-type type="GSList*" />
      </method>
      <method name="RemoveFilter" cname="gtk_recent_chooser_remove_filter">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRecentFilter*" name="filter" />
        </parameters>
      </method>
      <method name="SelectAll" cname="gtk_recent_chooser_select_all">
        <return-type type="void" />
      </method>
      <method name="SelectUri" cname="gtk_recent_chooser_select_uri">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="uri" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="SetCurrentUri" cname="gtk_recent_chooser_set_current_uri">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="uri" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="SetFilter" cname="gtk_recent_chooser_set_filter">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRecentFilter*" name="filter" />
        </parameters>
      </method>
      <method name="SetLimit" cname="gtk_recent_chooser_set_limit">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="limit" />
        </parameters>
      </method>
      <method name="SetLocalOnly" cname="gtk_recent_chooser_set_local_only">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="local_only" />
        </parameters>
      </method>
      <method name="SetSelectMultiple" cname="gtk_recent_chooser_set_select_multiple">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="select_multiple" />
        </parameters>
      </method>
      <method name="SetShowIcons" cname="gtk_recent_chooser_set_show_icons">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="show_icons" />
        </parameters>
      </method>
      <method name="SetShowNotFound" cname="gtk_recent_chooser_set_show_not_found">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="show_not_found" />
        </parameters>
      </method>
      <method name="SetShowNumbers" cname="gtk_recent_chooser_set_show_numbers">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="show_numbers" />
        </parameters>
      </method>
      <method name="SetShowPrivate" cname="gtk_recent_chooser_set_show_private">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="show_private" />
        </parameters>
      </method>
      <method name="SetShowTips" cname="gtk_recent_chooser_set_show_tips">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="show_tips" />
        </parameters>
      </method>
      <method name="SetSortFunc" cname="gtk_recent_chooser_set_sort_func">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRecentSortFunc" name="sort_func" />
          <parameter type="gpointer" name="sort_data" />
          <parameter type="GDestroyNotify" name="data_destroy" />
        </parameters>
      </method>
      <method name="SetSortType" cname="gtk_recent_chooser_set_sort_type">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRecentSortType" name="sort_type" />
        </parameters>
      </method>
      <method name="UnselectAll" cname="gtk_recent_chooser_unselect_all">
        <return-type type="void" />
      </method>
      <method name="UnselectUri" cname="gtk_recent_chooser_unselect_uri">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="uri" />
        </parameters>
      </method>
    </interface>
    <interface name="TreeDragDest" cname="GtkTreeDragDest">
      <virtual_method name="DragDataReceived" cname="drag_data_received">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeDragDest*" name="drag_dest" />
          <parameter type="GtkTreePath*" name="dest" />
          <parameter type="GtkSelectionData*" name="selection_data" />
        </parameters>
      </virtual_method>
      <virtual_method name="RowDropPossible" cname="row_drop_possible">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeDragDest*" name="drag_dest" />
          <parameter type="GtkTreePath*" name="dest_path" />
          <parameter type="GtkSelectionData*" name="selection_data" />
        </parameters>
      </virtual_method>
      <method name="DragDataReceived" cname="gtk_tree_drag_dest_drag_data_received">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreePath*" name="dest" />
          <parameter type="GtkSelectionData*" name="selection_data" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_tree_drag_dest_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="RowDropPossible" cname="gtk_tree_drag_dest_row_drop_possible">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreePath*" name="dest_path" />
          <parameter type="GtkSelectionData*" name="selection_data" />
        </parameters>
      </method>
    </interface>
    <interface name="TreeDragSource" cname="GtkTreeDragSource">
      <virtual_method name="RowDraggable" cname="row_draggable">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeDragSource*" name="drag_source" />
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </virtual_method>
      <virtual_method name="DragDataGet" cname="drag_data_get">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeDragSource*" name="drag_source" />
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkSelectionData*" name="selection_data" />
        </parameters>
      </virtual_method>
      <virtual_method name="DragDataDelete" cname="drag_data_delete">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeDragSource*" name="drag_source" />
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </virtual_method>
      <method name="DragDataDelete" cname="gtk_tree_drag_source_drag_data_delete">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
      <method name="DragDataGet" cname="gtk_tree_drag_source_drag_data_get">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkSelectionData*" name="selection_data" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_tree_drag_source_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="RowDraggable" cname="gtk_tree_drag_source_row_draggable">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
    </interface>
    <interface name="TreeModel" cname="GtkTreeModel">
      <virtual_method name="RowChanged" cname="row_changed">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </virtual_method>
      <virtual_method name="RowInserted" cname="row_inserted">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </virtual_method>
      <virtual_method name="RowHasChildToggled" cname="row_has_child_toggled">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </virtual_method>
      <virtual_method name="RowDeleted" cname="row_deleted">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </virtual_method>
      <virtual_method name="RowsReordered" cname="rows_reordered">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="gint*" name="new_order" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetFlags" cname="get_flags">
        <return-type type="GtkTreeModelFlags" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetNColumns" cname="get_n_columns">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetColumnType" cname="get_column_type">
        <return-type type="GType" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="gint" name="index_" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetIter" cname="get_iter">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetPath" cname="get_path">
        <return-type type="GtkTreePath*" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetValue" cname="get_value">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="gint" name="column" />
          <parameter type="GValue*" name="value" />
        </parameters>
      </virtual_method>
      <virtual_method name="IterNext" cname="iter_next">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </virtual_method>
      <virtual_method name="IterChildren" cname="iter_children">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="parent" />
        </parameters>
      </virtual_method>
      <virtual_method name="IterHasChild" cname="iter_has_child">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </virtual_method>
      <virtual_method name="IterNChildren" cname="iter_n_children">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </virtual_method>
      <virtual_method name="IterNthChild" cname="iter_nth_child">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="parent" />
          <parameter type="gint" name="n" />
        </parameters>
      </virtual_method>
      <virtual_method name="IterParent" cname="iter_parent">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="child" />
        </parameters>
      </virtual_method>
      <virtual_method name="RefNode" cname="ref_node">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </virtual_method>
      <virtual_method name="UnrefNode" cname="unref_node">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </virtual_method>
      <method name="Foreach" cname="gtk_tree_model_foreach">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeModelForeachFunc" name="func" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="Get" cname="gtk_tree_model_get">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="GetColumnType" cname="gtk_tree_model_get_column_type">
        <return-type type="GType" />
        <parameters>
          <parameter type="gint" name="index_" />
        </parameters>
      </method>
      <method name="GetFlags" cname="gtk_tree_model_get_flags">
        <return-type type="GtkTreeModelFlags" />
      </method>
      <method name="GetIter" cname="gtk_tree_model_get_iter">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
      <method name="GetIterFirst" cname="gtk_tree_model_get_iter_first">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="GetIterFromString" cname="gtk_tree_model_get_iter_from_string">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="const-gchar*" name="path_string" />
        </parameters>
      </method>
      <method name="GetNColumns" cname="gtk_tree_model_get_n_columns">
        <return-type type="gint" />
      </method>
      <method name="GetPath" cname="gtk_tree_model_get_path">
        <return-type type="GtkTreePath*" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="GetStringFromIter" cname="gtk_tree_model_get_string_from_iter">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_tree_model_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetValist" cname="gtk_tree_model_get_valist">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="va_list" name="var_args" />
        </parameters>
      </method>
      <method name="GetValue" cname="gtk_tree_model_get_value">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="gint" name="column" />
          <parameter type="GValue*" name="value" />
        </parameters>
      </method>
      <method name="IterChildren" cname="gtk_tree_model_iter_children">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="parent" />
        </parameters>
      </method>
      <method name="IterHasChild" cname="gtk_tree_model_iter_has_child">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="IterNChildren" cname="gtk_tree_model_iter_n_children">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="IterNext" cname="gtk_tree_model_iter_next">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="IterNthChild" cname="gtk_tree_model_iter_nth_child">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="parent" />
          <parameter type="gint" name="n" />
        </parameters>
      </method>
      <method name="IterParent" cname="gtk_tree_model_iter_parent">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="child" />
        </parameters>
      </method>
      <method name="RefNode" cname="gtk_tree_model_ref_node">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="RowChanged" cname="gtk_tree_model_row_changed">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="RowDeleted" cname="gtk_tree_model_row_deleted">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
      <method name="RowHasChildToggled" cname="gtk_tree_model_row_has_child_toggled">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="RowInserted" cname="gtk_tree_model_row_inserted">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="RowsReordered" cname="gtk_tree_model_rows_reordered">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="gint*" name="new_order" />
        </parameters>
      </method>
      <method name="UnrefNode" cname="gtk_tree_model_unref_node">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
    </interface>
    <interface name="TreeSortable" cname="GtkTreeSortable">
      <virtual_method name="SortColumnChanged" cname="sort_column_changed">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeSortable*" name="sortable" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetSortColumnId" cname="get_sort_column_id">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeSortable*" name="sortable" />
          <parameter type="gint*" name="sort_column_id" />
          <parameter type="GtkSortType*" name="order" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetSortColumnId" cname="set_sort_column_id">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeSortable*" name="sortable" />
          <parameter type="gint" name="sort_column_id" />
          <parameter type="GtkSortType" name="order" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetSortFunc" cname="set_sort_func">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeSortable*" name="sortable" />
          <parameter type="gint" name="sort_column_id" />
          <parameter type="GtkTreeIterCompareFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetDefaultSortFunc" cname="set_default_sort_func">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeSortable*" name="sortable" />
          <parameter type="GtkTreeIterCompareFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </virtual_method>
      <virtual_method name="HasDefaultSortFunc" cname="has_default_sort_func">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeSortable*" name="sortable" />
        </parameters>
      </virtual_method>
      <method name="GetSortColumnId" cname="gtk_tree_sortable_get_sort_column_id">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint*" name="sort_column_id" />
          <parameter type="GtkSortType*" name="order" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_tree_sortable_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="HasDefaultSortFunc" cname="gtk_tree_sortable_has_default_sort_func">
        <return-type type="gboolean" />
      </method>
      <method name="SetDefaultSortFunc" cname="gtk_tree_sortable_set_default_sort_func">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIterCompareFunc" name="sort_func" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="SetSortColumnId" cname="gtk_tree_sortable_set_sort_column_id">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="sort_column_id" />
          <parameter type="GtkSortType" name="order" />
        </parameters>
      </method>
      <method name="SetSortFunc" cname="gtk_tree_sortable_set_sort_func">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="sort_column_id" />
          <parameter type="GtkTreeIterCompareFunc" name="sort_func" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="SortColumnChanged" cname="gtk_tree_sortable_sort_column_changed">
        <return-type type="void" />
      </method>
    </interface>
    <object name="AboutDialog" cname="GtkAboutDialog" parent="GtkDialog">
      <field name="PrivateData" cname="private_data" type="gpointer" />
      <method name="GetArtists" cname="gtk_about_dialog_get_artists">
        <return-type type="const-gchar**" />
      </method>
      <method name="GetAuthors" cname="gtk_about_dialog_get_authors">
        <return-type type="const-gchar**" />
      </method>
      <method name="GetComments" cname="gtk_about_dialog_get_comments">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetCopyright" cname="gtk_about_dialog_get_copyright">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetDocumenters" cname="gtk_about_dialog_get_documenters">
        <return-type type="const-gchar**" />
      </method>
      <method name="GetLicense" cname="gtk_about_dialog_get_license">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetLogo" cname="gtk_about_dialog_get_logo">
        <return-type type="GdkPixbuf*" />
      </method>
      <method name="GetLogoIconName" cname="gtk_about_dialog_get_logo_icon_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetName" cname="gtk_about_dialog_get_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetTranslatorCredits" cname="gtk_about_dialog_get_translator_credits">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gtk_about_dialog_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVersion" cname="gtk_about_dialog_get_version">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetWebsite" cname="gtk_about_dialog_get_website">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetWebsiteLabel" cname="gtk_about_dialog_get_website_label">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetWrapLicense" cname="gtk_about_dialog_get_wrap_license">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gtk_about_dialog_new" />
      <method name="SetArtists" cname="gtk_about_dialog_set_artists">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar**" name="artists" />
        </parameters>
      </method>
      <method name="SetAuthors" cname="gtk_about_dialog_set_authors">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar**" name="authors" />
        </parameters>
      </method>
      <method name="SetComments" cname="gtk_about_dialog_set_comments">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="comments" />
        </parameters>
      </method>
      <method name="SetCopyright" cname="gtk_about_dialog_set_copyright">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="copyright" />
        </parameters>
      </method>
      <method name="SetDocumenters" cname="gtk_about_dialog_set_documenters">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar**" name="documenters" />
        </parameters>
      </method>
      <method name="SetEmailHook" cname="gtk_about_dialog_set_email_hook" shared="true">
        <return-type type="GtkAboutDialogActivateLinkFunc" />
        <parameters>
          <parameter type="GtkAboutDialogActivateLinkFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="SetLicense" cname="gtk_about_dialog_set_license">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="license" />
        </parameters>
      </method>
      <method name="SetLogo" cname="gtk_about_dialog_set_logo">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixbuf*" name="logo" />
        </parameters>
      </method>
      <method name="SetLogoIconName" cname="gtk_about_dialog_set_logo_icon_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="icon_name" />
        </parameters>
      </method>
      <method name="SetName" cname="gtk_about_dialog_set_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="SetTranslatorCredits" cname="gtk_about_dialog_set_translator_credits">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="translator_credits" />
        </parameters>
      </method>
      <method name="SetUrlHook" cname="gtk_about_dialog_set_url_hook" shared="true">
        <return-type type="GtkAboutDialogActivateLinkFunc" />
        <parameters>
          <parameter type="GtkAboutDialogActivateLinkFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="SetVersion" cname="gtk_about_dialog_set_version">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="version" />
        </parameters>
      </method>
      <method name="SetWebsite" cname="gtk_about_dialog_set_website">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="website" />
        </parameters>
      </method>
      <method name="SetWebsiteLabel" cname="gtk_about_dialog_set_website_label">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="website_label" />
        </parameters>
      </method>
      <method name="SetWrapLicense" cname="gtk_about_dialog_set_wrap_license">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="wrap_license" />
        </parameters>
      </method>
    </object>
    <object name="AccelGroup" cname="GtkAccelGroup" parent="GObject">
      <field name="LockCount" cname="lock_count" type="guint" />
      <field name="ModifierMask" cname="modifier_mask" type="GdkModifierType" />
      <field name="Acceleratables" cname="acceleratables" type="GSList*" />
      <field name="NAccels" cname="n_accels" type="guint" />
      <field name="PrivAccels" cname="priv_accels" type="GtkAccelGroupEntry*" />
      <method name="Activate" cname="gtk_accel_group_activate">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GQuark" name="accel_quark" />
          <parameter type="GObject*" name="acceleratable" />
          <parameter type="guint" name="accel_key" />
          <parameter type="GdkModifierType" name="accel_mods" />
        </parameters>
      </method>
      <method name="Connect" cname="gtk_accel_group_connect">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="accel_key" />
          <parameter type="GdkModifierType" name="accel_mods" />
          <parameter type="GtkAccelFlags" name="accel_flags" />
          <parameter type="GClosure*" name="closure" />
        </parameters>
      </method>
      <method name="ConnectByPath" cname="gtk_accel_group_connect_by_path">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="accel_path" />
          <parameter type="GClosure*" name="closure" />
        </parameters>
      </method>
      <method name="Disconnect" cname="gtk_accel_group_disconnect">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GClosure*" name="closure" />
        </parameters>
      </method>
      <method name="DisconnectKey" cname="gtk_accel_group_disconnect_key">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="accel_key" />
          <parameter type="GdkModifierType" name="accel_mods" />
        </parameters>
      </method>
      <method name="Find" cname="gtk_accel_group_find">
        <return-type type="GtkAccelKey*" />
        <parameters>
          <parameter type="GtkAccelGroupFindFunc" name="find_func" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="FromAccelClosure" cname="gtk_accel_group_from_accel_closure" shared="true">
        <return-type type="GtkAccelGroup*" />
        <parameters>
          <parameter type="GClosure*" name="closure" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_accel_group_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Lock" cname="gtk_accel_group_lock">
        <return-type type="void" />
      </method>
      <constructor cname="gtk_accel_group_new" />
      <method name="Query" cname="gtk_accel_group_query">
        <return-type type="GtkAccelGroupEntry*" />
        <parameters>
          <parameter type="guint" name="accel_key" />
          <parameter type="GdkModifierType" name="accel_mods" />
          <parameter type="guint*" name="n_entries" />
        </parameters>
      </method>
      <method name="Unlock" cname="gtk_accel_group_unlock">
        <return-type type="void" />
      </method>
    </object>
    <object name="AccelLabel" cname="GtkAccelLabel" parent="GtkLabel">
      <field name="GtkReserved" cname="gtk_reserved" type="guint" />
      <field name="AccelPadding" cname="accel_padding" type="guint" />
      <field name="AccelWidget" cname="accel_widget" type="GtkWidget*" />
      <field name="AccelClosure" cname="accel_closure" type="GClosure*" />
      <field name="AccelGroup" cname="accel_group" type="GtkAccelGroup*" />
      <field name="AccelString" cname="accel_string" type="gchar*" />
      <field name="AccelStringWidth" cname="accel_string_width" type="guint16" />
      <method name="GetAccelWidget" cname="gtk_accel_label_get_accel_widget">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetAccelWidth" cname="gtk_accel_label_get_accel_width">
        <return-type type="guint" />
      </method>
      <method name="GetType" cname="gtk_accel_label_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_accel_label_new">
        <parameters>
          <parameter type="const-gchar*" name="string" />
        </parameters>
      </constructor>
      <method name="Refetch" cname="gtk_accel_label_refetch">
        <return-type type="gboolean" />
      </method>
      <method name="SetAccelClosure" cname="gtk_accel_label_set_accel_closure">
        <return-type type="void" />
        <parameters>
          <parameter type="GClosure*" name="accel_closure" />
        </parameters>
      </method>
      <method name="SetAccelWidget" cname="gtk_accel_label_set_accel_widget">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="accel_widget" />
        </parameters>
      </method>
    </object>
    <object name="AccelMap" cname="GtkAccelMap">
      <method name="AddEntry" cname="gtk_accel_map_add_entry" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="accel_path" />
          <parameter type="guint" name="accel_key" />
          <parameter type="GdkModifierType" name="accel_mods" />
        </parameters>
      </method>
      <method name="AddFilter" cname="gtk_accel_map_add_filter" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="filter_pattern" />
        </parameters>
      </method>
      <method name="ChangeEntry" cname="gtk_accel_map_change_entry" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="accel_path" />
          <parameter type="guint" name="accel_key" />
          <parameter type="GdkModifierType" name="accel_mods" />
          <parameter type="gboolean" name="replace" />
        </parameters>
      </method>
      <method name="Foreach" cname="gtk_accel_map_foreach" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="data" />
          <parameter type="GtkAccelMapForeach" name="foreach_func" />
        </parameters>
      </method>
      <method name="ForeachUnfiltered" cname="gtk_accel_map_foreach_unfiltered" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="data" />
          <parameter type="GtkAccelMapForeach" name="foreach_func" />
        </parameters>
      </method>
      <method name="Get" cname="gtk_accel_map_get" shared="true">
        <return-type type="GtkAccelMap*" />
      </method>
      <method name="GetType" cname="gtk_accel_map_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Load" cname="gtk_accel_map_load" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="file_name" />
        </parameters>
      </method>
      <method name="LoadFd" cname="gtk_accel_map_load_fd" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="fd" />
        </parameters>
      </method>
      <method name="LoadScanner" cname="gtk_accel_map_load_scanner" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GScanner*" name="scanner" />
        </parameters>
      </method>
      <method name="LockPath" cname="gtk_accel_map_lock_path" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="accel_path" />
        </parameters>
      </method>
      <method name="LookupEntry" cname="gtk_accel_map_lookup_entry" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="accel_path" />
          <parameter type="GtkAccelKey*" name="key" />
        </parameters>
      </method>
      <method name="Save" cname="gtk_accel_map_save" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="file_name" />
        </parameters>
      </method>
      <method name="SaveFd" cname="gtk_accel_map_save_fd" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="fd" />
        </parameters>
      </method>
      <method name="UnlockPath" cname="gtk_accel_map_unlock_path" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="accel_path" />
        </parameters>
      </method>
    </object>
    <object name="Accessible" cname="GtkAccessible" parent="AtkObject">
      <field name="Widget" cname="widget" type="GtkWidget*" />
      <method name="ConnectWidgetDestroyed" cname="gtk_accessible_connect_widget_destroyed">
        <return-type type="void" />
      </method>
      <method name="GetType" cname="gtk_accessible_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <object name="Action" cname="GtkAction" parent="GObject">
      <field name="PrivateData" cname="private_data" type="GtkActionPrivate*" />
      <method name="Activate" cname="gtk_action_activate">
        <return-type type="void" />
      </method>
      <method name="BlockActivateFrom" cname="gtk_action_block_activate_from">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="proxy" />
        </parameters>
      </method>
      <method name="ConnectAccelerator" cname="gtk_action_connect_accelerator">
        <return-type type="void" />
      </method>
      <method name="ConnectProxy" cname="gtk_action_connect_proxy">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="proxy" />
        </parameters>
      </method>
      <method name="CreateIcon" cname="gtk_action_create_icon">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="GtkIconSize" name="icon_size" />
        </parameters>
      </method>
      <method name="CreateMenuItem" cname="gtk_action_create_menu_item">
        <return-type type="GtkWidget*" />
      </method>
      <method name="CreateToolItem" cname="gtk_action_create_tool_item">
        <return-type type="GtkWidget*" />
      </method>
      <method name="DisconnectAccelerator" cname="gtk_action_disconnect_accelerator">
        <return-type type="void" />
      </method>
      <method name="DisconnectProxy" cname="gtk_action_disconnect_proxy">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="proxy" />
        </parameters>
      </method>
      <method name="GetAccelClosure" cname="gtk_action_get_accel_closure">
        <return-type type="GClosure*" />
      </method>
      <method name="GetAccelPath" cname="gtk_action_get_accel_path">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetName" cname="gtk_action_get_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetProxies" cname="gtk_action_get_proxies">
        <return-type type="GSList*" />
      </method>
      <method name="GetSensitive" cname="gtk_action_get_sensitive">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_action_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVisible" cname="gtk_action_get_visible">
        <return-type type="gboolean" />
      </method>
      <method name="IsSensitive" cname="gtk_action_is_sensitive">
        <return-type type="gboolean" />
      </method>
      <method name="IsVisible" cname="gtk_action_is_visible">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gtk_action_new">
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="const-gchar*" name="label" />
          <parameter type="const-gchar*" name="tooltip" />
          <parameter type="const-gchar*" name="stock_id" />
        </parameters>
      </constructor>
      <method name="SetAccelGroup" cname="gtk_action_set_accel_group">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAccelGroup*" name="accel_group" />
        </parameters>
      </method>
      <method name="SetAccelPath" cname="gtk_action_set_accel_path">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="accel_path" />
        </parameters>
      </method>
      <method name="SetSensitive" cname="gtk_action_set_sensitive">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="sensitive" />
        </parameters>
      </method>
      <method name="SetVisible" cname="gtk_action_set_visible">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="visible" />
        </parameters>
      </method>
      <method name="UnblockActivateFrom" cname="gtk_action_unblock_activate_from">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="proxy" />
        </parameters>
      </method>
    </object>
    <object name="ActionGroup" cname="GtkActionGroup" parent="GObject">
      <field name="PrivateData" cname="private_data" type="GtkActionGroupPrivate*" />
      <method name="AddAction" cname="gtk_action_group_add_action">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAction*" name="action" />
        </parameters>
      </method>
      <method name="AddActionWithAccel" cname="gtk_action_group_add_action_with_accel">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAction*" name="action" />
          <parameter type="const-gchar*" name="accelerator" />
        </parameters>
      </method>
      <method name="AddActions" cname="gtk_action_group_add_actions">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GtkActionEntry*" name="entries" />
          <parameter type="guint" name="n_entries" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="AddActionsFull" cname="gtk_action_group_add_actions_full">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GtkActionEntry*" name="entries" />
          <parameter type="guint" name="n_entries" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="AddRadioActions" cname="gtk_action_group_add_radio_actions">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GtkRadioActionEntry*" name="entries" />
          <parameter type="guint" name="n_entries" />
          <parameter type="gint" name="value" />
          <parameter type="GCallback" name="on_change" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="AddRadioActionsFull" cname="gtk_action_group_add_radio_actions_full">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GtkRadioActionEntry*" name="entries" />
          <parameter type="guint" name="n_entries" />
          <parameter type="gint" name="value" />
          <parameter type="GCallback" name="on_change" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="AddToggleActions" cname="gtk_action_group_add_toggle_actions">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GtkToggleActionEntry*" name="entries" />
          <parameter type="guint" name="n_entries" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="AddToggleActionsFull" cname="gtk_action_group_add_toggle_actions_full">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GtkToggleActionEntry*" name="entries" />
          <parameter type="guint" name="n_entries" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="GetAction" cname="gtk_action_group_get_action">
        <return-type type="GtkAction*" />
        <parameters>
          <parameter type="const-gchar*" name="action_name" />
        </parameters>
      </method>
      <method name="GetName" cname="gtk_action_group_get_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetSensitive" cname="gtk_action_group_get_sensitive">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_action_group_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVisible" cname="gtk_action_group_get_visible">
        <return-type type="gboolean" />
      </method>
      <method name="ListActions" cname="gtk_action_group_list_actions">
        <return-type type="GList*" />
      </method>
      <constructor cname="gtk_action_group_new">
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </constructor>
      <method name="RemoveAction" cname="gtk_action_group_remove_action">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAction*" name="action" />
        </parameters>
      </method>
      <method name="SetSensitive" cname="gtk_action_group_set_sensitive">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="sensitive" />
        </parameters>
      </method>
      <method name="SetTranslateFunc" cname="gtk_action_group_set_translate_func">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTranslateFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="notify" />
        </parameters>
      </method>
      <method name="SetTranslationDomain" cname="gtk_action_group_set_translation_domain">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="domain" />
        </parameters>
      </method>
      <method name="SetVisible" cname="gtk_action_group_set_visible">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="visible" />
        </parameters>
      </method>
      <method name="TranslateString" cname="gtk_action_group_translate_string">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="const-gchar*" name="string" />
        </parameters>
      </method>
    </object>
    <object name="Adjustment" cname="GtkAdjustment" parent="GtkObject">
      <field name="Lower" cname="lower" type="gdouble" />
      <field name="Upper" cname="upper" type="gdouble" />
      <field name="Value" cname="value" type="gdouble" />
      <field name="StepIncrement" cname="step_increment" type="gdouble" />
      <field name="PageIncrement" cname="page_increment" type="gdouble" />
      <field name="PageSize" cname="page_size" type="gdouble" />
      <method name="Changed" cname="gtk_adjustment_changed">
        <return-type type="void" />
      </method>
      <method name="ClampPage" cname="gtk_adjustment_clamp_page">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="lower" />
          <parameter type="gdouble" name="upper" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_adjustment_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetValue" cname="gtk_adjustment_get_value">
        <return-type type="gdouble" />
      </method>
      <constructor cname="gtk_adjustment_new">
        <parameters>
          <parameter type="gdouble" name="value" />
          <parameter type="gdouble" name="lower" />
          <parameter type="gdouble" name="upper" />
          <parameter type="gdouble" name="step_increment" />
          <parameter type="gdouble" name="page_increment" />
          <parameter type="gdouble" name="page_size" />
        </parameters>
      </constructor>
      <method name="SetValue" cname="gtk_adjustment_set_value">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="value" />
        </parameters>
      </method>
      <method name="ValueChanged" cname="gtk_adjustment_value_changed">
        <return-type type="void" />
      </method>
    </object>
    <object name="Alignment" cname="GtkAlignment" parent="GtkBin">
      <field name="Xalign" cname="xalign" type="gfloat" />
      <field name="Yalign" cname="yalign" type="gfloat" />
      <field name="Xscale" cname="xscale" type="gfloat" />
      <field name="Yscale" cname="yscale" type="gfloat" />
      <method name="GetPadding" cname="gtk_alignment_get_padding">
        <return-type type="void" />
        <parameters>
          <parameter type="guint*" name="padding_top" />
          <parameter type="guint*" name="padding_bottom" />
          <parameter type="guint*" name="padding_left" />
          <parameter type="guint*" name="padding_right" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_alignment_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_alignment_new">
        <parameters>
          <parameter type="gfloat" name="xalign" />
          <parameter type="gfloat" name="yalign" />
          <parameter type="gfloat" name="xscale" />
          <parameter type="gfloat" name="yscale" />
        </parameters>
      </constructor>
      <method name="Set" cname="gtk_alignment_set">
        <return-type type="void" />
        <parameters>
          <parameter type="gfloat" name="xalign" />
          <parameter type="gfloat" name="yalign" />
          <parameter type="gfloat" name="xscale" />
          <parameter type="gfloat" name="yscale" />
        </parameters>
      </method>
      <method name="SetPadding" cname="gtk_alignment_set_padding">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="padding_top" />
          <parameter type="guint" name="padding_bottom" />
          <parameter type="guint" name="padding_left" />
          <parameter type="guint" name="padding_right" />
        </parameters>
      </method>
    </object>
    <object name="Arrow" cname="GtkArrow" parent="GtkMisc">
      <field name="ArrowType" cname="arrow_type" type="gint16" />
      <field name="ShadowType" cname="shadow_type" type="gint16" />
      <method name="GetType" cname="gtk_arrow_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_arrow_new">
        <parameters>
          <parameter type="GtkArrowType" name="arrow_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
        </parameters>
      </constructor>
      <method name="Set" cname="gtk_arrow_set">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkArrowType" name="arrow_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
        </parameters>
      </method>
    </object>
    <object name="AspectFrame" cname="GtkAspectFrame" parent="GtkFrame">
      <field name="Xalign" cname="xalign" type="gfloat" />
      <field name="Yalign" cname="yalign" type="gfloat" />
      <field name="Ratio" cname="ratio" type="gfloat" />
      <field name="ObeyChild" cname="obey_child" type="gboolean" />
      <field name="CenterAllocation" cname="center_allocation" type="GtkAllocation" />
      <method name="GetType" cname="gtk_aspect_frame_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_aspect_frame_new">
        <parameters>
          <parameter type="const-gchar*" name="label" />
          <parameter type="gfloat" name="xalign" />
          <parameter type="gfloat" name="yalign" />
          <parameter type="gfloat" name="ratio" />
          <parameter type="gboolean" name="obey_child" />
        </parameters>
      </constructor>
      <method name="Set" cname="gtk_aspect_frame_set">
        <return-type type="void" />
        <parameters>
          <parameter type="gfloat" name="xalign" />
          <parameter type="gfloat" name="yalign" />
          <parameter type="gfloat" name="ratio" />
          <parameter type="gboolean" name="obey_child" />
        </parameters>
      </method>
    </object>
    <object name="Assistant" cname="GtkAssistant" parent="GtkWindow">
      <field name="Cancel" cname="cancel" type="GtkWidget*" />
      <field name="Forward" cname="forward" type="GtkWidget*" />
      <field name="Back" cname="back" type="GtkWidget*" />
      <field name="Apply" cname="apply" type="GtkWidget*" />
      <field name="Close" cname="close" type="GtkWidget*" />
      <field name="Last" cname="last" type="GtkWidget*" />
      <field name="Priv" cname="priv" type="GtkAssistantPrivate*" />
      <method name="AddActionWidget" cname="gtk_assistant_add_action_widget">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
        </parameters>
      </method>
      <method name="AppendPage" cname="gtk_assistant_append_page">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkWidget*" name="page" />
        </parameters>
      </method>
      <method name="GetCurrentPage" cname="gtk_assistant_get_current_page">
        <return-type type="gint" />
      </method>
      <method name="GetNPages" cname="gtk_assistant_get_n_pages">
        <return-type type="gint" />
      </method>
      <method name="GetNthPage" cname="gtk_assistant_get_nth_page">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="gint" name="page_num" />
        </parameters>
      </method>
      <method name="GetPageComplete" cname="gtk_assistant_get_page_complete">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="page" />
        </parameters>
      </method>
      <method name="GetPageHeaderImage" cname="gtk_assistant_get_page_header_image">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="GtkWidget*" name="page" />
        </parameters>
      </method>
      <method name="GetPageSideImage" cname="gtk_assistant_get_page_side_image">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="GtkWidget*" name="page" />
        </parameters>
      </method>
      <method name="GetPageTitle" cname="gtk_assistant_get_page_title">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="GtkWidget*" name="page" />
        </parameters>
      </method>
      <method name="GetPageType" cname="gtk_assistant_get_page_type">
        <return-type type="GtkAssistantPageType" />
        <parameters>
          <parameter type="GtkWidget*" name="page" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_assistant_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="InsertPage" cname="gtk_assistant_insert_page">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkWidget*" name="page" />
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <constructor cname="gtk_assistant_new" />
      <method name="PrependPage" cname="gtk_assistant_prepend_page">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkWidget*" name="page" />
        </parameters>
      </method>
      <method name="RemoveActionWidget" cname="gtk_assistant_remove_action_widget">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
        </parameters>
      </method>
      <method name="SetCurrentPage" cname="gtk_assistant_set_current_page">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="page_num" />
        </parameters>
      </method>
      <method name="SetForwardPageFunc" cname="gtk_assistant_set_forward_page_func">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAssistantPageFunc" name="page_func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="SetPageComplete" cname="gtk_assistant_set_page_complete">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="page" />
          <parameter type="gboolean" name="complete" />
        </parameters>
      </method>
      <method name="SetPageHeaderImage" cname="gtk_assistant_set_page_header_image">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="page" />
          <parameter type="GdkPixbuf*" name="pixbuf" />
        </parameters>
      </method>
      <method name="SetPageSideImage" cname="gtk_assistant_set_page_side_image">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="page" />
          <parameter type="GdkPixbuf*" name="pixbuf" />
        </parameters>
      </method>
      <method name="SetPageTitle" cname="gtk_assistant_set_page_title">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="page" />
          <parameter type="const-gchar*" name="title" />
        </parameters>
      </method>
      <method name="SetPageType" cname="gtk_assistant_set_page_type">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="page" />
          <parameter type="GtkAssistantPageType" name="type" />
        </parameters>
      </method>
      <method name="UpdateButtonsState" cname="gtk_assistant_update_buttons_state">
        <return-type type="void" />
      </method>
    </object>
    <object name="Bin" cname="GtkBin" parent="GtkContainer">
      <field name="Child" cname="child" type="GtkWidget*" />
      <method name="GetChild" cname="gtk_bin_get_child">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetType" cname="gtk_bin_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <object name="Box" cname="GtkBox" parent="GtkContainer">
      <field name="Children" cname="children" type="GList*" access="public" />
      <field name="Spacing" cname="spacing" type="gint16" access="public" />
      <field name="Homogeneous" cname="homogeneous" bits="1" type="guint" access="public" />
      <method name="GetHomogeneous" cname="gtk_box_get_homogeneous">
        <return-type type="gboolean" />
      </method>
      <method name="GetSpacing" cname="gtk_box_get_spacing">
        <return-type type="gint" />
      </method>
      <method name="GetType" cname="gtk_box_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="PackEnd" cname="gtk_box_pack_end">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="gboolean" name="expand" />
          <parameter type="gboolean" name="fill" />
          <parameter type="guint" name="padding" />
        </parameters>
      </method>
      <method name="PackEndDefaults" cname="gtk_box_pack_end_defaults">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="PackStart" cname="gtk_box_pack_start">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="gboolean" name="expand" />
          <parameter type="gboolean" name="fill" />
          <parameter type="guint" name="padding" />
        </parameters>
      </method>
      <method name="PackStartDefaults" cname="gtk_box_pack_start_defaults">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="QueryChildPacking" cname="gtk_box_query_child_packing">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="gboolean*" name="expand" />
          <parameter type="gboolean*" name="fill" />
          <parameter type="guint*" name="padding" />
          <parameter type="GtkPackType*" name="pack_type" />
        </parameters>
      </method>
      <method name="ReorderChild" cname="gtk_box_reorder_child">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="SetChildPacking" cname="gtk_box_set_child_packing">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="gboolean" name="expand" />
          <parameter type="gboolean" name="fill" />
          <parameter type="guint" name="padding" />
          <parameter type="GtkPackType" name="pack_type" />
        </parameters>
      </method>
      <method name="SetHomogeneous" cname="gtk_box_set_homogeneous">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="homogeneous" />
        </parameters>
      </method>
      <method name="SetSpacing" cname="gtk_box_set_spacing">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="spacing" />
        </parameters>
      </method>
    </object>
    <object name="Button" cname="GtkButton" parent="GtkBin">
      <field name="EventWindow" cname="event_window" type="GdkWindow*" />
      <field name="LabelText" cname="label_text" type="gchar*" />
      <field name="ActivateTimeout" cname="activate_timeout" type="guint" />
      <field name="Constructed" cname="constructed" bits="1" type="guint" />
      <field name="InButton" cname="in_button" bits="1" type="guint" />
      <field name="ButtonDown" cname="button_down" bits="1" type="guint" />
      <field name="Relief" cname="relief" bits="2" type="guint" />
      <field name="UseUnderline" cname="use_underline" bits="1" type="guint" />
      <field name="UseStock" cname="use_stock" bits="1" type="guint" />
      <field name="Depressed" cname="depressed" bits="1" type="guint" />
      <field name="DepressOnActivate" cname="depress_on_activate" bits="1" type="guint" />
      <field name="FocusOnClick" cname="focus_on_click" bits="1" type="guint" />
      <method name="Clicked" cname="gtk_button_clicked">
        <return-type type="void" />
      </method>
      <method name="Enter" cname="gtk_button_enter">
        <return-type type="void" />
      </method>
      <method name="GetAlignment" cname="gtk_button_get_alignment">
        <return-type type="void" />
        <parameters>
          <parameter type="gfloat*" name="xalign" />
          <parameter type="gfloat*" name="yalign" />
        </parameters>
      </method>
      <method name="GetFocusOnClick" cname="gtk_button_get_focus_on_click">
        <return-type type="gboolean" />
      </method>
      <method name="GetImage" cname="gtk_button_get_image">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetImagePosition" cname="gtk_button_get_image_position">
        <return-type type="GtkPositionType" />
      </method>
      <method name="GetLabel" cname="gtk_button_get_label">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetRelief" cname="gtk_button_get_relief">
        <return-type type="GtkReliefStyle" />
      </method>
      <method name="GetType" cname="gtk_button_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUseStock" cname="gtk_button_get_use_stock">
        <return-type type="gboolean" />
      </method>
      <method name="GetUseUnderline" cname="gtk_button_get_use_underline">
        <return-type type="gboolean" />
      </method>
      <method name="Leave" cname="gtk_button_leave">
        <return-type type="void" />
      </method>
      <constructor cname="gtk_button_new" />
      <constructor cname="gtk_button_new_from_stock">
        <parameters>
          <parameter type="const-gchar*" name="stock_id" />
        </parameters>
      </constructor>
      <constructor cname="gtk_button_new_with_label">
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <constructor cname="gtk_button_new_with_mnemonic">
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <method name="Pressed" cname="gtk_button_pressed">
        <return-type type="void" />
      </method>
      <method name="Released" cname="gtk_button_released">
        <return-type type="void" />
      </method>
      <method name="SetAlignment" cname="gtk_button_set_alignment">
        <return-type type="void" />
        <parameters>
          <parameter type="gfloat" name="xalign" />
          <parameter type="gfloat" name="yalign" />
        </parameters>
      </method>
      <method name="SetFocusOnClick" cname="gtk_button_set_focus_on_click">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="focus_on_click" />
        </parameters>
      </method>
      <method name="SetImage" cname="gtk_button_set_image">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="image" />
        </parameters>
      </method>
      <method name="SetImagePosition" cname="gtk_button_set_image_position">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPositionType" name="position" />
        </parameters>
      </method>
      <method name="SetLabel" cname="gtk_button_set_label">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </method>
      <method name="SetRelief" cname="gtk_button_set_relief">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkReliefStyle" name="newstyle" />
        </parameters>
      </method>
      <method name="SetUseStock" cname="gtk_button_set_use_stock">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="use_stock" />
        </parameters>
      </method>
      <method name="SetUseUnderline" cname="gtk_button_set_use_underline">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="use_underline" />
        </parameters>
      </method>
    </object>
    <object name="ButtonBox" cname="GtkButtonBox" parent="GtkBox">
      <field name="ChildMinWidth" cname="child_min_width" type="gint" />
      <field name="ChildMinHeight" cname="child_min_height" type="gint" />
      <field name="ChildIpadX" cname="child_ipad_x" type="gint" />
      <field name="ChildIpadY" cname="child_ipad_y" type="gint" />
      <field name="LayoutStyle" cname="layout_style" type="GtkButtonBoxStyle" />
      <method name="GetChildIpadding" cname="gtk_button_box_get_child_ipadding" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="ipad_x" />
          <parameter type="gint*" name="ipad_y" />
        </parameters>
      </method>
      <method name="GetChildSecondary" cname="gtk_button_box_get_child_secondary">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
        </parameters>
      </method>
      <method name="GetChildSize" cname="gtk_button_box_get_child_size" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="min_width" />
          <parameter type="gint*" name="min_height" />
        </parameters>
      </method>
      <method name="GetLayout" cname="gtk_button_box_get_layout">
        <return-type type="GtkButtonBoxStyle" />
      </method>
      <method name="GetType" cname="gtk_button_box_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="SetChildIpadding" cname="gtk_button_box_set_child_ipadding" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="ipad_x" />
          <parameter type="gint" name="ipad_y" />
        </parameters>
      </method>
      <method name="SetChildSecondary" cname="gtk_button_box_set_child_secondary">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="gboolean" name="is_secondary" />
        </parameters>
      </method>
      <method name="SetChildSize" cname="gtk_button_box_set_child_size" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="min_width" />
          <parameter type="gint" name="min_height" />
        </parameters>
      </method>
      <method name="SetLayout" cname="gtk_button_box_set_layout">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkButtonBoxStyle" name="layout_style" />
        </parameters>
      </method>
    </object>
    <object name="Calendar" cname="GtkCalendar" parent="GtkWidget">
      <field name="HeaderStyle" cname="header_style" type="GtkStyle*" />
      <field name="LabelStyle" cname="label_style" type="GtkStyle*" />
      <field name="Month" cname="month" type="gint" />
      <field name="Year" cname="year" type="gint" />
      <field name="SelectedDay" cname="selected_day" type="gint" />
      <field name="DayMonth" cname="day_month" array_len="6][7" type="gint" />
      <field name="Day" cname="day" array_len="6][7" type="gint" />
      <field name="NumMarkedDates" cname="num_marked_dates" type="gint" />
      <field name="MarkedDate" cname="marked_date" array_len="31" type="gint" />
      <field name="DisplayFlags" cname="display_flags" type="GtkCalendarDisplayOptions" />
      <field name="MarkedDateColor" cname="marked_date_color" array_len="31" type="GdkColor" />
      <field name="Gc" cname="gc" type="GdkGC*" />
      <field name="XorGc" cname="xor_gc" type="GdkGC*" />
      <field name="FocusRow" cname="focus_row" type="gint" />
      <field name="FocusCol" cname="focus_col" type="gint" />
      <field name="HighlightRow" cname="highlight_row" type="gint" />
      <field name="HighlightCol" cname="highlight_col" type="gint" />
      <field name="Priv" cname="priv" type="GtkCalendarPrivate*" />
      <field name="GrowSpace" cname="grow_space" array_len="32" type="gchar" />
      <callback cname="_gtk_reserved1">
        <return-type type="void" />
        <parameters>
          <parameter type="void" name="arg1" />
        </parameters>
      </callback>
      <callback cname="_gtk_reserved2">
        <return-type type="void" />
        <parameters>
          <parameter type="void" name="arg1" />
        </parameters>
      </callback>
      <callback cname="_gtk_reserved3">
        <return-type type="void" />
        <parameters>
          <parameter type="void" name="arg1" />
        </parameters>
      </callback>
      <callback cname="_gtk_reserved4">
        <return-type type="void" />
        <parameters>
          <parameter type="void" name="arg1" />
        </parameters>
      </callback>
      <method name="ClearMarks" cname="gtk_calendar_clear_marks">
        <return-type type="void" />
      </method>
      <method name="DisplayOptions" cname="gtk_calendar_display_options" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCalendarDisplayOptions" name="flags" />
        </parameters>
      </method>
      <method name="Freeze" cname="gtk_calendar_freeze" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="GetDate" cname="gtk_calendar_get_date">
        <return-type type="void" />
        <parameters>
          <parameter type="guint*" name="year" />
          <parameter type="guint*" name="month" />
          <parameter type="guint*" name="day" />
        </parameters>
      </method>
      <method name="GetDisplayOptions" cname="gtk_calendar_get_display_options">
        <return-type type="GtkCalendarDisplayOptions" />
      </method>
      <method name="GetType" cname="gtk_calendar_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="MarkDay" cname="gtk_calendar_mark_day">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="day" />
        </parameters>
      </method>
      <constructor cname="gtk_calendar_new" />
      <method name="SelectDay" cname="gtk_calendar_select_day">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="day" />
        </parameters>
      </method>
      <method name="SelectMonth" cname="gtk_calendar_select_month">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="month" />
          <parameter type="guint" name="year" />
        </parameters>
      </method>
      <method name="SetDisplayOptions" cname="gtk_calendar_set_display_options">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCalendarDisplayOptions" name="flags" />
        </parameters>
      </method>
      <method name="Thaw" cname="gtk_calendar_thaw" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="UnmarkDay" cname="gtk_calendar_unmark_day">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="day" />
        </parameters>
      </method>
    </object>
    <object name="CellRenderer" cname="GtkCellRenderer" parent="GtkObject">
      <field name="Xalign" cname="xalign" type="gfloat" />
      <field name="Yalign" cname="yalign" type="gfloat" />
      <field name="Width" cname="width" type="gint" />
      <field name="Height" cname="height" type="gint" />
      <field name="Xpad" cname="xpad" type="guint16" />
      <field name="Ypad" cname="ypad" type="guint16" />
      <field name="Mode" cname="mode" bits="2" type="guint" />
      <field name="Visible" cname="visible" bits="1" type="guint" />
      <field name="IsExpander" cname="is_expander" bits="1" type="guint" />
      <field name="IsExpanded" cname="is_expanded" bits="1" type="guint" />
      <field name="CellBackgroundSet" cname="cell_background_set" bits="1" type="guint" />
      <field name="Sensitive" cname="sensitive" bits="1" type="guint" />
      <field name="Editing" cname="editing" bits="1" type="guint" />
      <method name="Activate" cname="gtk_cell_renderer_activate">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="path" />
          <parameter type="GdkRectangle*" name="background_area" />
          <parameter type="GdkRectangle*" name="cell_area" />
          <parameter type="GtkCellRendererState" name="flags" />
        </parameters>
      </method>
      <method name="EditingCanceled" cname="gtk_cell_renderer_editing_canceled" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="GetFixedSize" cname="gtk_cell_renderer_get_fixed_size">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="height" />
        </parameters>
      </method>
      <method name="GetSize" cname="gtk_cell_renderer_get_size">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkRectangle*" name="cell_area" />
          <parameter type="gint*" name="x_offset" />
          <parameter type="gint*" name="y_offset" />
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="height" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_cell_renderer_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Render" cname="gtk_cell_renderer_render">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkRectangle*" name="background_area" />
          <parameter type="GdkRectangle*" name="cell_area" />
          <parameter type="GdkRectangle*" name="expose_area" />
          <parameter type="GtkCellRendererState" name="flags" />
        </parameters>
      </method>
      <method name="SetFixedSize" cname="gtk_cell_renderer_set_fixed_size">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="StartEditing" cname="gtk_cell_renderer_start_editing">
        <return-type type="GtkCellEditable*" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="path" />
          <parameter type="GdkRectangle*" name="background_area" />
          <parameter type="GdkRectangle*" name="cell_area" />
          <parameter type="GtkCellRendererState" name="flags" />
        </parameters>
      </method>
      <method name="StopEditing" cname="gtk_cell_renderer_stop_editing">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="canceled" />
        </parameters>
      </method>
    </object>
    <object name="CellRendererAccel" cname="GtkCellRendererAccel" parent="GtkCellRendererText">
      <field name="AccelKey" cname="accel_key" type="guint" />
      <field name="AccelMods" cname="accel_mods" type="GdkModifierType" />
      <field name="Keycode" cname="keycode" type="guint" />
      <field name="AccelMode" cname="accel_mode" type="GtkCellRendererAccelMode" />
      <field name="EditWidget" cname="edit_widget" type="GtkWidget*" />
      <field name="GrabWidget" cname="grab_widget" type="GtkWidget*" />
      <field name="SizingLabel" cname="sizing_label" type="GtkWidget*" />
      <method name="GetType" cname="gtk_cell_renderer_accel_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_cell_renderer_accel_new" />
    </object>
    <object name="CellRendererCombo" cname="GtkCellRendererCombo" parent="GtkCellRendererText">
      <field name="Model" cname="model" type="GtkTreeModel*" />
      <field name="TextColumn" cname="text_column" type="gint" />
      <field name="HasEntry" cname="has_entry" type="gboolean" />
      <field name="FocusOutId" cname="focus_out_id" type="guint" />
      <method name="GetType" cname="gtk_cell_renderer_combo_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_cell_renderer_combo_new" />
    </object>
    <object name="CellRendererPixbuf" cname="GtkCellRendererPixbuf" parent="GtkCellRenderer">
      <field name="Pixbuf" cname="pixbuf" type="GdkPixbuf*" />
      <field name="PixbufExpanderOpen" cname="pixbuf_expander_open" type="GdkPixbuf*" />
      <field name="PixbufExpanderClosed" cname="pixbuf_expander_closed" type="GdkPixbuf*" />
      <method name="GetType" cname="gtk_cell_renderer_pixbuf_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_cell_renderer_pixbuf_new" />
    </object>
    <object name="CellRendererProgress" cname="GtkCellRendererProgress" parent="GtkCellRenderer">
      <field name="Priv" cname="priv" type="GtkCellRendererProgressPrivate*" />
      <method name="GetType" cname="gtk_cell_renderer_progress_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_cell_renderer_progress_new" />
    </object>
    <object name="CellRendererSpin" cname="GtkCellRendererSpin" parent="GtkCellRendererText">
      <method name="GetType" cname="gtk_cell_renderer_spin_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_cell_renderer_spin_new" />
    </object>
    <object name="CellRendererText" cname="GtkCellRendererText" parent="GtkCellRenderer">
      <field name="Text" cname="text" type="gchar*" />
      <field name="Font" cname="font" type="PangoFontDescription*" />
      <field name="FontScale" cname="font_scale" type="gdouble" />
      <field name="Foreground" cname="foreground" type="PangoColor" />
      <field name="Background" cname="background" type="PangoColor" />
      <field name="ExtraAttrs" cname="extra_attrs" type="PangoAttrList*" />
      <field name="UnderlineStyle" cname="underline_style" type="PangoUnderline" />
      <field name="Rise" cname="rise" type="gint" />
      <field name="FixedHeightRows" cname="fixed_height_rows" type="gint" />
      <field name="Strikethrough" cname="strikethrough" bits="1" type="guint" />
      <field name="Editable" cname="editable" bits="1" type="guint" />
      <field name="ScaleSet" cname="scale_set" bits="1" type="guint" />
      <field name="ForegroundSet" cname="foreground_set" bits="1" type="guint" />
      <field name="BackgroundSet" cname="background_set" bits="1" type="guint" />
      <field name="UnderlineSet" cname="underline_set" bits="1" type="guint" />
      <field name="RiseSet" cname="rise_set" bits="1" type="guint" />
      <field name="StrikethroughSet" cname="strikethrough_set" bits="1" type="guint" />
      <field name="EditableSet" cname="editable_set" bits="1" type="guint" />
      <field name="CalcFixedHeight" cname="calc_fixed_height" bits="1" type="guint" />
      <method name="GetType" cname="gtk_cell_renderer_text_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_cell_renderer_text_new" />
      <method name="SetFixedHeightFromFont" cname="gtk_cell_renderer_text_set_fixed_height_from_font">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="number_of_rows" />
        </parameters>
      </method>
    </object>
    <object name="CellRendererToggle" cname="GtkCellRendererToggle" parent="GtkCellRenderer">
      <field name="Active" cname="active" bits="1" type="guint" />
      <field name="Activatable" cname="activatable" bits="1" type="guint" />
      <field name="Radio" cname="radio" bits="1" type="guint" />
      <method name="GetActive" cname="gtk_cell_renderer_toggle_get_active">
        <return-type type="gboolean" />
      </method>
      <method name="GetRadio" cname="gtk_cell_renderer_toggle_get_radio">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_cell_renderer_toggle_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_cell_renderer_toggle_new" />
      <method name="SetActive" cname="gtk_cell_renderer_toggle_set_active">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetRadio" cname="gtk_cell_renderer_toggle_set_radio">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="radio" />
        </parameters>
      </method>
    </object>
    <object name="CellView" cname="GtkCellView" parent="GtkWidget">
      <field name="Priv" cname="priv" type="GtkCellViewPrivate*" />
      <method name="GetCellRenderers" cname="gtk_cell_view_get_cell_renderers">
        <return-type type="GList*" />
      </method>
      <method name="GetDisplayedRow" cname="gtk_cell_view_get_displayed_row">
        <return-type type="GtkTreePath*" />
      </method>
      <method name="GetSizeOfRow" cname="gtk_cell_view_get_size_of_row">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkRequisition*" name="requisition" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_cell_view_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_cell_view_new" />
      <constructor cname="gtk_cell_view_new_with_markup">
        <parameters>
          <parameter type="const-gchar*" name="markup" />
        </parameters>
      </constructor>
      <constructor cname="gtk_cell_view_new_with_pixbuf">
        <parameters>
          <parameter type="GdkPixbuf*" name="pixbuf" />
        </parameters>
      </constructor>
      <constructor cname="gtk_cell_view_new_with_text">
        <parameters>
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </constructor>
      <method name="SetBackgroundColor" cname="gtk_cell_view_set_background_color">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="SetDisplayedRow" cname="gtk_cell_view_set_displayed_row">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
      <method name="SetModel" cname="gtk_cell_view_set_model">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeModel*" name="model" />
        </parameters>
      </method>
    </object>
    <object name="CheckButton" cname="GtkCheckButton" parent="GtkToggleButton">
      <method name="GetType" cname="gtk_check_button_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_check_button_new" />
      <constructor cname="gtk_check_button_new_with_label">
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <constructor cname="gtk_check_button_new_with_mnemonic">
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
    </object>
    <object name="CheckMenuItem" cname="GtkCheckMenuItem" parent="GtkMenuItem">
      <field name="Active" cname="active" bits="1" type="guint" />
      <field name="AlwaysShowToggle" cname="always_show_toggle" bits="1" type="guint" />
      <field name="Inconsistent" cname="inconsistent" bits="1" type="guint" />
      <field name="DrawAsRadio" cname="draw_as_radio" bits="1" type="guint" />
      <method name="GetActive" cname="gtk_check_menu_item_get_active">
        <return-type type="gboolean" />
      </method>
      <method name="GetDrawAsRadio" cname="gtk_check_menu_item_get_draw_as_radio">
        <return-type type="gboolean" />
      </method>
      <method name="GetInconsistent" cname="gtk_check_menu_item_get_inconsistent">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_check_menu_item_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_check_menu_item_new" />
      <constructor cname="gtk_check_menu_item_new_with_label">
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <constructor cname="gtk_check_menu_item_new_with_mnemonic">
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <method name="SetActive" cname="gtk_check_menu_item_set_active">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="is_active" />
        </parameters>
      </method>
      <method name="SetDrawAsRadio" cname="gtk_check_menu_item_set_draw_as_radio">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="draw_as_radio" />
        </parameters>
      </method>
      <method name="SetInconsistent" cname="gtk_check_menu_item_set_inconsistent">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetShowToggle" cname="gtk_check_menu_item_set_show_toggle" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="always" />
        </parameters>
      </method>
      <method name="Toggled" cname="gtk_check_menu_item_toggled">
        <return-type type="void" />
      </method>
    </object>
    <object name="Clipboard" cname="GtkClipboard">
      <method name="Clear" cname="gtk_clipboard_clear">
        <return-type type="void" />
      </method>
      <method name="Get" cname="gtk_clipboard_get" shared="true">
        <return-type type="GtkClipboard*" />
        <parameters>
          <parameter type="GdkAtom" name="selection" />
        </parameters>
      </method>
      <method name="GetDisplay" cname="gtk_clipboard_get_display">
        <return-type type="GdkDisplay*" />
      </method>
      <method name="GetForDisplay" cname="gtk_clipboard_get_for_display" shared="true">
        <return-type type="GtkClipboard*" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="GdkAtom" name="selection" />
        </parameters>
      </method>
      <method name="GetOwner" cname="gtk_clipboard_get_owner">
        <return-type type="GObject*" />
      </method>
      <method name="GetType" cname="gtk_clipboard_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="RequestContents" cname="gtk_clipboard_request_contents">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkAtom" name="target" />
          <parameter type="GtkClipboardReceivedFunc" name="callback" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="RequestImage" cname="gtk_clipboard_request_image">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkClipboardImageReceivedFunc" name="callback" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="RequestRichText" cname="gtk_clipboard_request_rich_text">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextBuffer*" name="buffer" />
          <parameter type="GtkClipboardRichTextReceivedFunc" name="callback" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="RequestTargets" cname="gtk_clipboard_request_targets">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkClipboardTargetsReceivedFunc" name="callback" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="RequestText" cname="gtk_clipboard_request_text">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkClipboardTextReceivedFunc" name="callback" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="SetCanStore" cname="gtk_clipboard_set_can_store">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GtkTargetEntry*" name="targets" />
          <parameter type="gint" name="n_targets" />
        </parameters>
      </method>
      <method name="SetImage" cname="gtk_clipboard_set_image">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixbuf*" name="pixbuf" />
        </parameters>
      </method>
      <method name="SetText" cname="gtk_clipboard_set_text">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
          <parameter type="gint" name="len" />
        </parameters>
      </method>
      <method name="SetWithData" cname="gtk_clipboard_set_with_data">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GtkTargetEntry*" name="targets" />
          <parameter type="guint" name="n_targets" />
          <parameter type="GtkClipboardGetFunc" name="get_func" />
          <parameter type="GtkClipboardClearFunc" name="clear_func" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="SetWithOwner" cname="gtk_clipboard_set_with_owner">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GtkTargetEntry*" name="targets" />
          <parameter type="guint" name="n_targets" />
          <parameter type="GtkClipboardGetFunc" name="get_func" />
          <parameter type="GtkClipboardClearFunc" name="clear_func" />
          <parameter type="GObject*" name="owner" />
        </parameters>
      </method>
      <method name="Store" cname="gtk_clipboard_store">
        <return-type type="void" />
      </method>
      <method name="WaitForContents" cname="gtk_clipboard_wait_for_contents">
        <return-type type="GtkSelectionData*" />
        <parameters>
          <parameter type="GdkAtom" name="target" />
        </parameters>
      </method>
      <method name="WaitForImage" cname="gtk_clipboard_wait_for_image">
        <return-type type="GdkPixbuf*" />
      </method>
      <method name="WaitForRichText" cname="gtk_clipboard_wait_for_rich_text">
        <return-type type="guint8*" />
        <parameters>
          <parameter type="GtkTextBuffer*" name="buffer" />
          <parameter type="GdkAtom*" name="format" />
          <parameter type="gsize*" name="length" />
        </parameters>
      </method>
      <method name="WaitForTargets" cname="gtk_clipboard_wait_for_targets">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkAtom**" name="targets" />
          <parameter type="gint*" name="n_targets" />
        </parameters>
      </method>
      <method name="WaitForText" cname="gtk_clipboard_wait_for_text">
        <return-type type="gchar*" />
      </method>
      <method name="WaitIsImageAvailable" cname="gtk_clipboard_wait_is_image_available">
        <return-type type="gboolean" />
      </method>
      <method name="WaitIsRichTextAvailable" cname="gtk_clipboard_wait_is_rich_text_available">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextBuffer*" name="buffer" />
        </parameters>
      </method>
      <method name="WaitIsTargetAvailable" cname="gtk_clipboard_wait_is_target_available">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkAtom" name="target" />
        </parameters>
      </method>
      <method name="WaitIsTextAvailable" cname="gtk_clipboard_wait_is_text_available">
        <return-type type="gboolean" />
      </method>
    </object>
    <object name="CList" cname="GtkCList" deprecated="1" parent="GtkContainer">
      <field name="Flags" cname="flags" type="guint16" />
      <field name="Reserved1" cname="reserved1" type="gpointer" />
      <field name="Reserved2" cname="reserved2" type="gpointer" />
      <field name="FreezeCount" cname="freeze_count" type="guint" />
      <field name="InternalAllocation" cname="internal_allocation" type="GdkRectangle" />
      <field name="Rows" cname="rows" type="gint" />
      <field name="RowHeight" cname="row_height" type="gint" />
      <field name="RowList" cname="row_list" type="GList*" />
      <field name="RowListEnd" cname="row_list_end" type="GList*" />
      <field name="Columns" cname="columns" type="gint" />
      <field name="ColumnTitleArea" cname="column_title_area" type="GdkRectangle" />
      <field name="TitleWindow" cname="title_window" type="GdkWindow*" />
      <field name="Column" cname="column" type="GtkCListColumn*" />
      <field name="ClistWindow" cname="clist_window" type="GdkWindow*" />
      <field name="ClistWindowWidth" cname="clist_window_width" type="gint" />
      <field name="ClistWindowHeight" cname="clist_window_height" type="gint" />
      <field name="Hoffset" cname="hoffset" type="gint" />
      <field name="Voffset" cname="voffset" type="gint" />
      <field name="ShadowType" cname="shadow_type" type="GtkShadowType" />
      <field name="SelectionMode" cname="selection_mode" type="GtkSelectionMode" />
      <field name="Selection" cname="selection" type="GList*" />
      <field name="SelectionEnd" cname="selection_end" type="GList*" />
      <field name="UndoSelection" cname="undo_selection" type="GList*" />
      <field name="UndoUnselection" cname="undo_unselection" type="GList*" />
      <field name="UndoAnchor" cname="undo_anchor" type="gint" />
      <field name="ButtonActions" cname="button_actions" array_len="5" type="guint8" />
      <field name="DragButton" cname="drag_button" type="guint8" />
      <field name="ClickCell" cname="click_cell" type="GtkCListCellInfo" />
      <field name="Hadjustment" cname="hadjustment" type="GtkAdjustment*" />
      <field name="Vadjustment" cname="vadjustment" type="GtkAdjustment*" />
      <field name="XorGc" cname="xor_gc" type="GdkGC*" />
      <field name="FgGc" cname="fg_gc" type="GdkGC*" />
      <field name="BgGc" cname="bg_gc" type="GdkGC*" />
      <field name="CursorDrag" cname="cursor_drag" type="GdkCursor*" />
      <field name="XDrag" cname="x_drag" type="gint" />
      <field name="FocusRow" cname="focus_row" type="gint" />
      <field name="FocusHeaderColumn" cname="focus_header_column" type="gint" />
      <field name="Anchor" cname="anchor" type="gint" />
      <field name="AnchorState" cname="anchor_state" type="GtkStateType" />
      <field name="DragPos" cname="drag_pos" type="gint" />
      <field name="Htimer" cname="htimer" type="gint" />
      <field name="Vtimer" cname="vtimer" type="gint" />
      <field name="SortType" cname="sort_type" type="GtkSortType" />
      <field name="Compare" cname="compare" type="GtkCListCompareFunc" />
      <field name="SortColumn" cname="sort_column" type="gint" />
      <field name="DragHighlightRow" cname="drag_highlight_row" type="gint" />
      <field name="DragHighlightPos" cname="drag_highlight_pos" type="GtkCListDragPos" />
      <method name="Append" cname="gtk_clist_append" deprecated="1">
        <return-type type="gint" />
        <parameters>
          <parameter type="gchar*" array="true" name="text" />
        </parameters>
      </method>
      <method name="Clear" cname="gtk_clist_clear" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="ColumnsAutosize" cname="gtk_clist_columns_autosize" deprecated="1">
        <return-type type="gint" />
      </method>
      <method name="FindRowFromData" cname="gtk_clist_find_row_from_data" deprecated="1">
        <return-type type="gint" />
        <parameters>
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="Freeze" cname="gtk_clist_freeze" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="GetCellStyle" cname="gtk_clist_get_cell_style" deprecated="1">
        <return-type type="GtkStyle*" />
        <parameters>
          <parameter type="gint" name="row" />
          <parameter type="gint" name="column" />
        </parameters>
      </method>
      <method name="GetCellType" cname="gtk_clist_get_cell_type" deprecated="1">
        <return-type type="GtkCellType" />
        <parameters>
          <parameter type="gint" name="row" />
          <parameter type="gint" name="column" />
        </parameters>
      </method>
      <method name="GetColumnTitle" cname="gtk_clist_get_column_title" deprecated="1">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="gint" name="column" />
        </parameters>
      </method>
      <method name="GetColumnWidget" cname="gtk_clist_get_column_widget" deprecated="1">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="gint" name="column" />
        </parameters>
      </method>
      <method name="GetHadjustment" cname="gtk_clist_get_hadjustment" deprecated="1">
        <return-type type="GtkAdjustment*" />
      </method>
      <method name="GetPixmap" cname="gtk_clist_get_pixmap" deprecated="1">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="row" />
          <parameter type="gint" name="column" />
          <parameter type="GdkPixmap**" name="pixmap" />
          <parameter type="GdkBitmap**" name="mask" />
        </parameters>
      </method>
      <method name="GetPixtext" cname="gtk_clist_get_pixtext" deprecated="1">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="row" />
          <parameter type="gint" name="column" />
          <parameter type="gchar**" name="text" />
          <parameter type="guint8*" name="spacing" />
          <parameter type="GdkPixmap**" name="pixmap" />
          <parameter type="GdkBitmap**" name="mask" />
        </parameters>
      </method>
      <method name="GetRowData" cname="gtk_clist_get_row_data" deprecated="1">
        <return-type type="gpointer" />
        <parameters>
          <parameter type="gint" name="row" />
        </parameters>
      </method>
      <method name="GetRowStyle" cname="gtk_clist_get_row_style" deprecated="1">
        <return-type type="GtkStyle*" />
        <parameters>
          <parameter type="gint" name="row" />
        </parameters>
      </method>
      <method name="GetSelectable" cname="gtk_clist_get_selectable" deprecated="1">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="row" />
        </parameters>
      </method>
      <method name="GetSelectionInfo" cname="gtk_clist_get_selection_info" deprecated="1">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint*" name="row" />
          <parameter type="gint*" name="column" />
        </parameters>
      </method>
      <method name="GetText" cname="gtk_clist_get_text" deprecated="1">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="row" />
          <parameter type="gint" name="column" />
          <parameter type="gchar**" name="text" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_clist_get_type" deprecated="1" shared="true">
        <return-type type="GtkType" />
      </method>
      <method name="GetVadjustment" cname="gtk_clist_get_vadjustment" deprecated="1">
        <return-type type="GtkAdjustment*" />
      </method>
      <method name="Insert" cname="gtk_clist_insert" deprecated="1">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="row" />
          <parameter type="gchar*" array="true" name="text" />
        </parameters>
      </method>
      <method name="Moveto" cname="gtk_clist_moveto" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="row" />
          <parameter type="gint" name="column" />
          <parameter type="gfloat" name="row_align" />
          <parameter type="gfloat" name="col_align" />
        </parameters>
      </method>
      <constructor cname="gtk_clist_new" deprecated="1">
        <parameters>
          <parameter type="gint" name="columns" />
        </parameters>
      </constructor>
      <constructor cname="gtk_clist_new_with_titles" deprecated="1">
        <parameters>
          <parameter type="gint" name="columns" />
          <parameter type="gchar*" array="true" name="titles" />
        </parameters>
      </constructor>
      <method name="OptimalColumnWidth" cname="gtk_clist_optimal_column_width" deprecated="1">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="column" />
        </parameters>
      </method>
      <method name="Prepend" cname="gtk_clist_prepend" deprecated="1">
        <return-type type="gint" />
        <parameters>
          <parameter type="gchar*" array="true" name="text" />
        </parameters>
      </method>
      <method name="Remove" cname="gtk_clist_remove" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="row" />
        </parameters>
      </method>
      <method name="SelectAll" cname="gtk_clist_select_all" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="SelectRow" cname="gtk_clist_select_row" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="row" />
          <parameter type="gint" name="column" />
        </parameters>
      </method>
      <method name="SetAutoSort" cname="gtk_clist_set_auto_sort" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="auto_sort" />
        </parameters>
      </method>
      <method name="SetBackground" cname="gtk_clist_set_background" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="row" />
          <parameter type="const-GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="SetButtonActions" cname="gtk_clist_set_button_actions" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="button" />
          <parameter type="guint8" name="button_actions" />
        </parameters>
      </method>
      <method name="SetCellStyle" cname="gtk_clist_set_cell_style" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="row" />
          <parameter type="gint" name="column" />
          <parameter type="GtkStyle*" name="style" />
        </parameters>
      </method>
      <method name="SetColumnAutoResize" cname="gtk_clist_set_column_auto_resize" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="column" />
          <parameter type="gboolean" name="auto_resize" />
        </parameters>
      </method>
      <method name="SetColumnJustification" cname="gtk_clist_set_column_justification" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="column" />
          <parameter type="GtkJustification" name="justification" />
        </parameters>
      </method>
      <method name="SetColumnMaxWidth" cname="gtk_clist_set_column_max_width" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="column" />
          <parameter type="gint" name="max_width" />
        </parameters>
      </method>
      <method name="SetColumnMinWidth" cname="gtk_clist_set_column_min_width" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="column" />
          <parameter type="gint" name="min_width" />
        </parameters>
      </method>
      <method name="SetColumnResizeable" cname="gtk_clist_set_column_resizeable" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="column" />
          <parameter type="gboolean" name="resizeable" />
        </parameters>
      </method>
      <method name="SetColumnTitle" cname="gtk_clist_set_column_title" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="column" />
          <parameter type="const-gchar*" name="title" />
        </parameters>
      </method>
      <method name="SetColumnVisibility" cname="gtk_clist_set_column_visibility" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="column" />
          <parameter type="gboolean" name="visible" />
        </parameters>
      </method>
      <method name="SetColumnWidget" cname="gtk_clist_set_column_widget" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="column" />
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="SetColumnWidth" cname="gtk_clist_set_column_width" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="column" />
          <parameter type="gint" name="width" />
        </parameters>
      </method>
      <method name="SetCompareFunc" cname="gtk_clist_set_compare_func" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCListCompareFunc" name="cmp_func" />
        </parameters>
      </method>
      <method name="SetForeground" cname="gtk_clist_set_foreground" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="row" />
          <parameter type="const-GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="SetHadjustment" cname="gtk_clist_set_hadjustment" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </method>
      <method name="SetPixmap" cname="gtk_clist_set_pixmap" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="row" />
          <parameter type="gint" name="column" />
          <parameter type="GdkPixmap*" name="pixmap" />
          <parameter type="GdkBitmap*" name="mask" />
        </parameters>
      </method>
      <method name="SetPixtext" cname="gtk_clist_set_pixtext" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="row" />
          <parameter type="gint" name="column" />
          <parameter type="const-gchar*" name="text" />
          <parameter type="guint8" name="spacing" />
          <parameter type="GdkPixmap*" name="pixmap" />
          <parameter type="GdkBitmap*" name="mask" />
        </parameters>
      </method>
      <method name="SetReorderable" cname="gtk_clist_set_reorderable" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="reorderable" />
        </parameters>
      </method>
      <method name="SetRowData" cname="gtk_clist_set_row_data" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="row" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="SetRowDataFull" cname="gtk_clist_set_row_data_full" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="row" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="SetRowHeight" cname="gtk_clist_set_row_height" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="height" />
        </parameters>
      </method>
      <method name="SetRowStyle" cname="gtk_clist_set_row_style" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="row" />
          <parameter type="GtkStyle*" name="style" />
        </parameters>
      </method>
      <method name="SetSelectable" cname="gtk_clist_set_selectable" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="row" />
          <parameter type="gboolean" name="selectable" />
        </parameters>
      </method>
      <method name="SetSelectionMode" cname="gtk_clist_set_selection_mode" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkSelectionMode" name="mode" />
        </parameters>
      </method>
      <method name="SetShadowType" cname="gtk_clist_set_shadow_type" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkShadowType" name="type" />
        </parameters>
      </method>
      <method name="SetShift" cname="gtk_clist_set_shift" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="row" />
          <parameter type="gint" name="column" />
          <parameter type="gint" name="vertical" />
          <parameter type="gint" name="horizontal" />
        </parameters>
      </method>
      <method name="SetSortColumn" cname="gtk_clist_set_sort_column" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="column" />
        </parameters>
      </method>
      <method name="SetSortType" cname="gtk_clist_set_sort_type" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkSortType" name="sort_type" />
        </parameters>
      </method>
      <method name="SetText" cname="gtk_clist_set_text" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="row" />
          <parameter type="gint" name="column" />
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </method>
      <method name="SetUseDragIcons" cname="gtk_clist_set_use_drag_icons" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="use_icons" />
        </parameters>
      </method>
      <method name="SetVadjustment" cname="gtk_clist_set_vadjustment" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </method>
      <method name="Sort" cname="gtk_clist_sort" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="SwapRows" cname="gtk_clist_swap_rows" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="row1" />
          <parameter type="gint" name="row2" />
        </parameters>
      </method>
      <method name="Thaw" cname="gtk_clist_thaw" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="UndoSelection" cname="gtk_clist_undo_selection" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="UnselectAll" cname="gtk_clist_unselect_all" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="UnselectRow" cname="gtk_clist_unselect_row" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="row" />
          <parameter type="gint" name="column" />
        </parameters>
      </method>
    </object>
    <object name="ColorButton" cname="GtkColorButton" parent="GtkButton">
      <field name="Priv" cname="priv" type="GtkColorButtonPrivate*" />
      <method name="GetAlpha" cname="gtk_color_button_get_alpha">
        <return-type type="guint16" />
      </method>
      <method name="GetColor" cname="gtk_color_button_get_color">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="GetTitle" cname="gtk_color_button_get_title">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gtk_color_button_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUseAlpha" cname="gtk_color_button_get_use_alpha">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gtk_color_button_new" />
      <constructor cname="gtk_color_button_new_with_color">
        <parameters>
          <parameter type="const-GdkColor*" name="color" />
        </parameters>
      </constructor>
      <method name="SetAlpha" cname="gtk_color_button_set_alpha">
        <return-type type="void" />
        <parameters>
          <parameter type="guint16" name="alpha" />
        </parameters>
      </method>
      <method name="SetColor" cname="gtk_color_button_set_color">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="SetTitle" cname="gtk_color_button_set_title">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="title" />
        </parameters>
      </method>
      <method name="SetUseAlpha" cname="gtk_color_button_set_use_alpha">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="use_alpha" />
        </parameters>
      </method>
    </object>
    <object name="ColorSelection" cname="GtkColorSelection" parent="GtkVBox">
      <field name="PrivateData" cname="private_data" type="gpointer" />
      <method name="GetColor" cname="gtk_color_selection_get_color" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble*" name="color" />
        </parameters>
      </method>
      <method name="GetCurrentAlpha" cname="gtk_color_selection_get_current_alpha">
        <return-type type="guint16" />
      </method>
      <method name="GetCurrentColor" cname="gtk_color_selection_get_current_color">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="GetHasOpacityControl" cname="gtk_color_selection_get_has_opacity_control">
        <return-type type="gboolean" />
      </method>
      <method name="GetHasPalette" cname="gtk_color_selection_get_has_palette">
        <return-type type="gboolean" />
      </method>
      <method name="GetPreviousAlpha" cname="gtk_color_selection_get_previous_alpha">
        <return-type type="guint16" />
      </method>
      <method name="GetPreviousColor" cname="gtk_color_selection_get_previous_color">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_color_selection_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="IsAdjusting" cname="gtk_color_selection_is_adjusting">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gtk_color_selection_new" />
      <method name="PaletteFromString" cname="gtk_color_selection_palette_from_string" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="str" />
          <parameter type="GdkColor**" name="colors" />
          <parameter type="gint*" name="n_colors" />
        </parameters>
      </method>
      <method name="PaletteToString" cname="gtk_color_selection_palette_to_string" shared="true">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-GdkColor*" name="colors" />
          <parameter type="gint" name="n_colors" />
        </parameters>
      </method>
      <method name="SetChangePaletteHook" cname="gtk_color_selection_set_change_palette_hook" deprecated="1" shared="true">
        <return-type type="GtkColorSelectionChangePaletteFunc" />
        <parameters>
          <parameter type="GtkColorSelectionChangePaletteFunc" name="func" />
        </parameters>
      </method>
      <method name="SetChangePaletteWithScreenHook" cname="gtk_color_selection_set_change_palette_with_screen_hook" shared="true">
        <return-type type="GtkColorSelectionChangePaletteWithScreenFunc" />
        <parameters>
          <parameter type="GtkColorSelectionChangePaletteWithScreenFunc" name="func" />
        </parameters>
      </method>
      <method name="SetColor" cname="gtk_color_selection_set_color" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble*" name="color" />
        </parameters>
      </method>
      <method name="SetCurrentAlpha" cname="gtk_color_selection_set_current_alpha">
        <return-type type="void" />
        <parameters>
          <parameter type="guint16" name="alpha" />
        </parameters>
      </method>
      <method name="SetCurrentColor" cname="gtk_color_selection_set_current_color">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="SetHasOpacityControl" cname="gtk_color_selection_set_has_opacity_control">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="has_opacity" />
        </parameters>
      </method>
      <method name="SetHasPalette" cname="gtk_color_selection_set_has_palette">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="has_palette" />
        </parameters>
      </method>
      <method name="SetPreviousAlpha" cname="gtk_color_selection_set_previous_alpha">
        <return-type type="void" />
        <parameters>
          <parameter type="guint16" name="alpha" />
        </parameters>
      </method>
      <method name="SetPreviousColor" cname="gtk_color_selection_set_previous_color">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="SetUpdatePolicy" cname="gtk_color_selection_set_update_policy" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkUpdateType" name="policy" />
        </parameters>
      </method>
    </object>
    <object name="ColorSelectionDialog" cname="GtkColorSelectionDialog" parent="GtkDialog">
      <field name="Colorsel" cname="colorsel" type="GtkWidget*" />
      <field name="OkButton" cname="ok_button" type="GtkWidget*" />
      <field name="CancelButton" cname="cancel_button" type="GtkWidget*" />
      <field name="HelpButton" cname="help_button" type="GtkWidget*" />
      <method name="GetType" cname="gtk_color_selection_dialog_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_color_selection_dialog_new">
        <parameters>
          <parameter type="const-gchar*" name="title" />
        </parameters>
      </constructor>
    </object>
    <object name="Combo" cname="GtkCombo" deprecated="1" parent="GtkHBox">
      <field name="Entry" cname="entry" type="GtkWidget*" access="public" />
      <field name="Button" cname="button" type="GtkWidget*" />
      <field name="Popup" cname="popup" type="GtkWidget*" />
      <field name="Popwin" cname="popwin" type="GtkWidget*" />
      <field name="List" cname="list" type="GtkWidget*" access="public" />
      <field name="EntryChangeId" cname="entry_change_id" type="guint" />
      <field name="ListChangeId" cname="list_change_id" type="guint" />
      <field name="ValueInList" cname="value_in_list" bits="1" type="guint" />
      <field name="OkIfEmpty" cname="ok_if_empty" bits="1" type="guint" />
      <field name="CaseSensitive" cname="case_sensitive" bits="1" type="guint" />
      <field name="UseArrows" cname="use_arrows" bits="1" type="guint" />
      <field name="UseArrowsAlways" cname="use_arrows_always" bits="1" type="guint" />
      <field name="CurrentButton" cname="current_button" type="guint16" />
      <field name="ActivateId" cname="activate_id" type="guint" />
      <method name="DisableActivate" cname="gtk_combo_disable_activate" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="GetType" cname="gtk_combo_get_type" deprecated="1" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_combo_new" deprecated="1" />
      <method name="SetCaseSensitive" cname="gtk_combo_set_case_sensitive" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="val" />
        </parameters>
      </method>
      <method name="SetItemString" cname="gtk_combo_set_item_string" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkItem*" name="item" />
          <parameter type="const-gchar*" name="item_value" />
        </parameters>
      </method>
      <method name="SetPopdownStrings" cname="gtk_combo_set_popdown_strings" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GList*" name="strings" />
        </parameters>
      </method>
      <method name="SetUseArrows" cname="gtk_combo_set_use_arrows" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="val" />
        </parameters>
      </method>
      <method name="SetUseArrowsAlways" cname="gtk_combo_set_use_arrows_always" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="val" />
        </parameters>
      </method>
      <method name="SetValueInList" cname="gtk_combo_set_value_in_list" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="val" />
          <parameter type="gboolean" name="ok_if_empty" />
        </parameters>
      </method>
    </object>
    <object name="ComboBox" cname="GtkComboBox" parent="GtkBin">
      <field name="Priv" cname="priv" type="GtkComboBoxPrivate*" />
      <method name="AppendText" cname="gtk_combo_box_append_text">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </method>
      <method name="GetActive" cname="gtk_combo_box_get_active">
        <return-type type="gint" />
      </method>
      <method name="GetActiveIter" cname="gtk_combo_box_get_active_iter">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="GetActiveText" cname="gtk_combo_box_get_active_text">
        <return-type type="gchar*" />
      </method>
      <method name="GetAddTearoffs" cname="gtk_combo_box_get_add_tearoffs">
        <return-type type="gboolean" />
      </method>
      <method name="GetColumnSpanColumn" cname="gtk_combo_box_get_column_span_column">
        <return-type type="gint" />
      </method>
      <method name="GetFocusOnClick" cname="gtk_combo_box_get_focus_on_click">
        <return-type type="gboolean" />
      </method>
      <method name="GetModel" cname="gtk_combo_box_get_model">
        <return-type type="GtkTreeModel*" />
      </method>
      <method name="GetPopupAccessible" cname="gtk_combo_box_get_popup_accessible">
        <return-type type="AtkObject*" />
      </method>
      <method name="GetRowSeparatorFunc" cname="gtk_combo_box_get_row_separator_func">
        <return-type type="GtkTreeViewRowSeparatorFunc" />
      </method>
      <method name="GetRowSpanColumn" cname="gtk_combo_box_get_row_span_column">
        <return-type type="gint" />
      </method>
      <method name="GetTitle" cname="gtk_combo_box_get_title">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gtk_combo_box_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetWrapWidth" cname="gtk_combo_box_get_wrap_width">
        <return-type type="gint" />
      </method>
      <method name="InsertText" cname="gtk_combo_box_insert_text">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="position" />
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </method>
      <constructor cname="gtk_combo_box_new" />
      <constructor cname="gtk_combo_box_new_text" />
      <constructor cname="gtk_combo_box_new_with_model">
        <parameters>
          <parameter type="GtkTreeModel*" name="model" />
        </parameters>
      </constructor>
      <method name="Popdown" cname="gtk_combo_box_popdown">
        <return-type type="void" />
      </method>
      <method name="Popup" cname="gtk_combo_box_popup">
        <return-type type="void" />
      </method>
      <method name="PrependText" cname="gtk_combo_box_prepend_text">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </method>
      <method name="RemoveText" cname="gtk_combo_box_remove_text">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="SetActive" cname="gtk_combo_box_set_active">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="index_" />
        </parameters>
      </method>
      <method name="SetActiveIter" cname="gtk_combo_box_set_active_iter">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="SetAddTearoffs" cname="gtk_combo_box_set_add_tearoffs">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="add_tearoffs" />
        </parameters>
      </method>
      <method name="SetColumnSpanColumn" cname="gtk_combo_box_set_column_span_column">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="column_span" />
        </parameters>
      </method>
      <method name="SetFocusOnClick" cname="gtk_combo_box_set_focus_on_click">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="focus_on_click" />
        </parameters>
      </method>
      <method name="SetModel" cname="gtk_combo_box_set_model">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeModel*" name="model" />
        </parameters>
      </method>
      <method name="SetRowSeparatorFunc" cname="gtk_combo_box_set_row_separator_func">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeViewRowSeparatorFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="SetRowSpanColumn" cname="gtk_combo_box_set_row_span_column">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="row_span" />
        </parameters>
      </method>
      <method name="SetTitle" cname="gtk_combo_box_set_title">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="title" />
        </parameters>
      </method>
      <method name="SetWrapWidth" cname="gtk_combo_box_set_wrap_width">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="width" />
        </parameters>
      </method>
    </object>
    <object name="ComboBoxEntry" cname="GtkComboBoxEntry" parent="GtkComboBox">
      <field name="Priv" cname="priv" type="GtkComboBoxEntryPrivate*" />
      <method name="GetTextColumn" cname="gtk_combo_box_entry_get_text_column">
        <return-type type="gint" />
      </method>
      <method name="GetType" cname="gtk_combo_box_entry_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_combo_box_entry_new" />
      <constructor cname="gtk_combo_box_entry_new_text" />
      <constructor cname="gtk_combo_box_entry_new_with_model">
        <parameters>
          <parameter type="GtkTreeModel*" name="model" />
          <parameter type="gint" name="text_column" />
        </parameters>
      </constructor>
      <method name="SetTextColumn" cname="gtk_combo_box_entry_set_text_column">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="text_column" />
        </parameters>
      </method>
    </object>
    <object name="Container" cname="GtkContainer" parent="GtkWidget">
      <field name="FocusChild" cname="focus_child" type="GtkWidget*" />
      <field name="BorderWidth" cname="border_width" bits="16" type="guint" />
      <field name="NeedResize" cname="need_resize" bits="1" type="guint" />
      <field name="ResizeMode" cname="resize_mode" bits="2" type="guint" />
      <field name="ReallocateRedraws" cname="reallocate_redraws" bits="1" type="guint" />
      <field name="HasFocusChain" cname="has_focus_chain" bits="1" type="guint" />
      <method name="Add" cname="gtk_container_add">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="AddWithProperties" cname="gtk_container_add_with_properties">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="first_prop_name" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="CheckResize" cname="gtk_container_check_resize">
        <return-type type="void" />
      </method>
      <method name="ChildGet" cname="gtk_container_child_get">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="const-gchar*" name="first_prop_name" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="ChildGetProperty" cname="gtk_container_child_get_property">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="const-gchar*" name="property_name" />
          <parameter type="GValue*" name="value" />
        </parameters>
      </method>
      <method name="ChildGetValist" cname="gtk_container_child_get_valist">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="const-gchar*" name="first_property_name" />
          <parameter type="va_list" name="var_args" />
        </parameters>
      </method>
      <method name="ChildSet" cname="gtk_container_child_set">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="const-gchar*" name="first_prop_name" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="ChildSetProperty" cname="gtk_container_child_set_property">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="const-gchar*" name="property_name" />
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </method>
      <method name="ChildSetValist" cname="gtk_container_child_set_valist">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="const-gchar*" name="first_property_name" />
          <parameter type="va_list" name="var_args" />
        </parameters>
      </method>
      <method name="ChildType" cname="gtk_container_child_type">
        <return-type type="GType" />
      </method>
      <method name="ClassFindChildProperty" cname="gtk_container_class_find_child_property" shared="true">
        <return-type type="GParamSpec*" />
        <parameters>
          <parameter type="GObjectClass*" name="cclass" />
          <parameter type="const-gchar*" name="property_name" />
        </parameters>
      </method>
      <method name="ClassInstallChildProperty" cname="gtk_container_class_install_child_property" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkContainerClass*" name="cclass" />
          <parameter type="guint" name="property_id" />
          <parameter type="GParamSpec*" name="pspec" />
        </parameters>
      </method>
      <method name="ClassListChildProperties" cname="gtk_container_class_list_child_properties" shared="true">
        <return-type type="GParamSpec**" />
        <parameters>
          <parameter type="GObjectClass*" name="cclass" />
          <parameter type="guint*" name="n_properties" />
        </parameters>
      </method>
      <method name="Forall" cname="gtk_container_forall">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCallback" name="callback" />
          <parameter type="gpointer" name="callback_data" />
        </parameters>
      </method>
      <method name="Foreach" cname="gtk_container_foreach">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCallback" name="callback" />
          <parameter type="gpointer" name="callback_data" />
        </parameters>
      </method>
      <method name="ForeachFull" cname="gtk_container_foreach_full" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCallback" name="callback" />
          <parameter type="GtkCallbackMarshal" name="marshal" />
          <parameter type="gpointer" name="callback_data" />
          <parameter type="GtkDestroyNotify" name="notify" />
        </parameters>
      </method>
      <method name="GetBorderWidth" cname="gtk_container_get_border_width">
        <return-type type="guint" />
      </method>
      <method name="GetChildren" cname="gtk_container_get_children">
        <return-type type="GList*" />
      </method>
      <method name="GetFocusChain" cname="gtk_container_get_focus_chain">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GList**" name="focusable_widgets" />
        </parameters>
      </method>
      <method name="GetFocusHadjustment" cname="gtk_container_get_focus_hadjustment">
        <return-type type="GtkAdjustment*" />
      </method>
      <method name="GetFocusVadjustment" cname="gtk_container_get_focus_vadjustment">
        <return-type type="GtkAdjustment*" />
      </method>
      <method name="GetResizeMode" cname="gtk_container_get_resize_mode">
        <return-type type="GtkResizeMode" />
      </method>
      <method name="GetType" cname="gtk_container_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="PropagateExpose" cname="gtk_container_propagate_expose">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="GdkEventExpose*" name="event" />
        </parameters>
      </method>
      <method name="Remove" cname="gtk_container_remove">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="ResizeChildren" cname="gtk_container_resize_children">
        <return-type type="void" />
      </method>
      <method name="SetBorderWidth" cname="gtk_container_set_border_width">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="border_width" />
        </parameters>
      </method>
      <method name="SetFocusChain" cname="gtk_container_set_focus_chain">
        <return-type type="void" />
        <parameters>
          <parameter type="GList*" name="focusable_widgets" />
        </parameters>
      </method>
      <method name="SetFocusChild" cname="gtk_container_set_focus_child">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
        </parameters>
      </method>
      <method name="SetFocusHadjustment" cname="gtk_container_set_focus_hadjustment">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </method>
      <method name="SetFocusVadjustment" cname="gtk_container_set_focus_vadjustment">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </method>
      <method name="SetReallocateRedraws" cname="gtk_container_set_reallocate_redraws">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="needs_redraws" />
        </parameters>
      </method>
      <method name="SetResizeMode" cname="gtk_container_set_resize_mode">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkResizeMode" name="resize_mode" />
        </parameters>
      </method>
      <method name="UnsetFocusChain" cname="gtk_container_unset_focus_chain">
        <return-type type="void" />
      </method>
    </object>
    <object name="CTree" cname="GtkCTree" deprecated="1" parent="GtkCList">
      <field name="LinesGc" cname="lines_gc" type="GdkGC*" />
      <field name="TreeIndent" cname="tree_indent" type="gint" />
      <field name="TreeSpacing" cname="tree_spacing" type="gint" />
      <field name="TreeColumn" cname="tree_column" type="gint" />
      <field name="LineStyle" cname="line_style" bits="2" type="guint" />
      <field name="ExpanderStyle" cname="expander_style" bits="2" type="guint" />
      <field name="ShowStub" cname="show_stub" bits="1" type="guint" />
      <field name="DragCompare" cname="drag_compare" type="GtkCTreeCompareDragFunc" />
      <method name="Collapse" cname="gtk_ctree_collapse" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTreeNode*" name="node" />
        </parameters>
      </method>
      <method name="CollapseRecursive" cname="gtk_ctree_collapse_recursive" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTreeNode*" name="node" />
        </parameters>
      </method>
      <method name="CollapseToDepth" cname="gtk_ctree_collapse_to_depth" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTreeNode*" name="node" />
          <parameter type="gint" name="depth" />
        </parameters>
      </method>
      <method name="Expand" cname="gtk_ctree_expand" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTreeNode*" name="node" />
        </parameters>
      </method>
      <method name="ExpandRecursive" cname="gtk_ctree_expand_recursive" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTreeNode*" name="node" />
        </parameters>
      </method>
      <method name="ExpandToDepth" cname="gtk_ctree_expand_to_depth" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTreeNode*" name="node" />
          <parameter type="gint" name="depth" />
        </parameters>
      </method>
      <method name="ExportToGnode" cname="gtk_ctree_export_to_gnode" deprecated="1">
        <return-type type="GNode*" />
        <parameters>
          <parameter type="GNode*" name="parent" />
          <parameter type="GNode*" name="sibling" />
          <parameter type="GtkCTreeNode*" name="node" />
          <parameter type="GtkCTreeGNodeFunc" name="func" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="Find" cname="gtk_ctree_find" deprecated="1">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkCTreeNode*" name="node" />
          <parameter type="GtkCTreeNode*" name="child" />
        </parameters>
      </method>
      <method name="FindAllByRowData" cname="gtk_ctree_find_all_by_row_data" deprecated="1">
        <return-type type="GList*" />
        <parameters>
          <parameter type="GtkCTreeNode*" name="node" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="FindAllByRowDataCustom" cname="gtk_ctree_find_all_by_row_data_custom" deprecated="1">
        <return-type type="GList*" />
        <parameters>
          <parameter type="GtkCTreeNode*" name="node" />
          <parameter type="gpointer" name="data" />
          <parameter type="GCompareFunc" name="func" />
        </parameters>
      </method>
      <method name="FindByRowData" cname="gtk_ctree_find_by_row_data" deprecated="1">
        <return-type type="GtkCTreeNode*" />
        <parameters>
          <parameter type="GtkCTreeNode*" name="node" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="FindByRowDataCustom" cname="gtk_ctree_find_by_row_data_custom" deprecated="1">
        <return-type type="GtkCTreeNode*" />
        <parameters>
          <parameter type="GtkCTreeNode*" name="node" />
          <parameter type="gpointer" name="data" />
          <parameter type="GCompareFunc" name="func" />
        </parameters>
      </method>
      <method name="FindNodePtr" cname="gtk_ctree_find_node_ptr" deprecated="1">
        <return-type type="GtkCTreeNode*" />
        <parameters>
          <parameter type="GtkCTreeRow*" name="ctree_row" />
        </parameters>
      </method>
      <method name="GetNodeInfo" cname="gtk_ctree_get_node_info" deprecated="1">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkCTreeNode*" name="node" />
          <parameter type="gchar**" name="text" />
          <parameter type="guint8*" name="spacing" />
          <parameter type="GdkPixmap**" name="pixmap_closed" />
          <parameter type="GdkBitmap**" name="mask_closed" />
          <parameter type="GdkPixmap**" name="pixmap_opened" />
          <parameter type="GdkBitmap**" name="mask_opened" />
          <parameter type="gboolean*" name="is_leaf" />
          <parameter type="gboolean*" name="expanded" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_ctree_get_type" deprecated="1" shared="true">
        <return-type type="GtkType" />
      </method>
      <method name="InsertGnode" cname="gtk_ctree_insert_gnode" deprecated="1">
        <return-type type="GtkCTreeNode*" />
        <parameters>
          <parameter type="GtkCTreeNode*" name="parent" />
          <parameter type="GtkCTreeNode*" name="sibling" />
          <parameter type="GNode*" name="gnode" />
          <parameter type="GtkCTreeGNodeFunc" name="func" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="InsertNode" cname="gtk_ctree_insert_node" deprecated="1">
        <return-type type="GtkCTreeNode*" />
        <parameters>
          <parameter type="GtkCTreeNode*" name="parent" />
          <parameter type="GtkCTreeNode*" name="sibling" />
          <parameter type="gchar*" array="true" name="text" />
          <parameter type="guint8" name="spacing" />
          <parameter type="GdkPixmap*" name="pixmap_closed" />
          <parameter type="GdkBitmap*" name="mask_closed" />
          <parameter type="GdkPixmap*" name="pixmap_opened" />
          <parameter type="GdkBitmap*" name="mask_opened" />
          <parameter type="gboolean" name="is_leaf" />
          <parameter type="gboolean" name="expanded" />
        </parameters>
      </method>
      <method name="IsAncestor" cname="gtk_ctree_is_ancestor" deprecated="1">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkCTreeNode*" name="node" />
          <parameter type="GtkCTreeNode*" name="child" />
        </parameters>
      </method>
      <method name="IsHotSpot" cname="gtk_ctree_is_hot_spot" deprecated="1">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="IsViewable" cname="gtk_ctree_is_viewable" deprecated="1">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkCTreeNode*" name="node" />
        </parameters>
      </method>
      <method name="Last" cname="gtk_ctree_last" deprecated="1">
        <return-type type="GtkCTreeNode*" />
        <parameters>
          <parameter type="GtkCTreeNode*" name="node" />
        </parameters>
      </method>
      <method name="Move" cname="gtk_ctree_move" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTreeNode*" name="node" />
          <parameter type="GtkCTreeNode*" name="new_parent" />
          <parameter type="GtkCTreeNode*" name="new_sibling" />
        </parameters>
      </method>
      <constructor cname="gtk_ctree_new" deprecated="1">
        <parameters>
          <parameter type="gint" name="columns" />
          <parameter type="gint" name="tree_column" />
        </parameters>
      </constructor>
      <constructor cname="gtk_ctree_new_with_titles" deprecated="1">
        <parameters>
          <parameter type="gint" name="columns" />
          <parameter type="gint" name="tree_column" />
          <parameter type="gchar*" array="true" name="titles" />
        </parameters>
      </constructor>
      <method name="PostRecursive" cname="gtk_ctree_post_recursive" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTreeNode*" name="node" />
          <parameter type="GtkCTreeFunc" name="func" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="PostRecursiveToDepth" cname="gtk_ctree_post_recursive_to_depth" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTreeNode*" name="node" />
          <parameter type="gint" name="depth" />
          <parameter type="GtkCTreeFunc" name="func" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="PreRecursive" cname="gtk_ctree_pre_recursive" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTreeNode*" name="node" />
          <parameter type="GtkCTreeFunc" name="func" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="PreRecursiveToDepth" cname="gtk_ctree_pre_recursive_to_depth" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTreeNode*" name="node" />
          <parameter type="gint" name="depth" />
          <parameter type="GtkCTreeFunc" name="func" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="RealSelectRecursive" cname="gtk_ctree_real_select_recursive" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTreeNode*" name="node" />
          <parameter type="gint" name="state" />
        </parameters>
      </method>
      <method name="RemoveNode" cname="gtk_ctree_remove_node" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTreeNode*" name="node" />
        </parameters>
      </method>
      <method name="Select" cname="gtk_ctree_select" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTreeNode*" name="node" />
        </parameters>
      </method>
      <method name="SelectRecursive" cname="gtk_ctree_select_recursive" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTreeNode*" name="node" />
        </parameters>
      </method>
      <method name="SetDragCompareFunc" cname="gtk_ctree_set_drag_compare_func" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTreeCompareDragFunc" name="cmp_func" />
        </parameters>
      </method>
      <method name="SetExpanderStyle" cname="gtk_ctree_set_expander_style" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTreeExpanderStyle" name="expander_style" />
        </parameters>
      </method>
      <method name="SetIndent" cname="gtk_ctree_set_indent" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="indent" />
        </parameters>
      </method>
      <method name="SetLineStyle" cname="gtk_ctree_set_line_style" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTreeLineStyle" name="line_style" />
        </parameters>
      </method>
      <method name="SetNodeInfo" cname="gtk_ctree_set_node_info" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTreeNode*" name="node" />
          <parameter type="const-gchar*" name="text" />
          <parameter type="guint8" name="spacing" />
          <parameter type="GdkPixmap*" name="pixmap_closed" />
          <parameter type="GdkBitmap*" name="mask_closed" />
          <parameter type="GdkPixmap*" name="pixmap_opened" />
          <parameter type="GdkBitmap*" name="mask_opened" />
          <parameter type="gboolean" name="is_leaf" />
          <parameter type="gboolean" name="expanded" />
        </parameters>
      </method>
      <method name="SetShowStub" cname="gtk_ctree_set_show_stub" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="show_stub" />
        </parameters>
      </method>
      <method name="SetSpacing" cname="gtk_ctree_set_spacing" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="spacing" />
        </parameters>
      </method>
      <method name="SortNode" cname="gtk_ctree_sort_node" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTreeNode*" name="node" />
        </parameters>
      </method>
      <method name="SortRecursive" cname="gtk_ctree_sort_recursive" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTreeNode*" name="node" />
        </parameters>
      </method>
      <method name="ToggleExpansion" cname="gtk_ctree_toggle_expansion" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTreeNode*" name="node" />
        </parameters>
      </method>
      <method name="ToggleExpansionRecursive" cname="gtk_ctree_toggle_expansion_recursive" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTreeNode*" name="node" />
        </parameters>
      </method>
      <method name="Unselect" cname="gtk_ctree_unselect" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTreeNode*" name="node" />
        </parameters>
      </method>
      <method name="UnselectRecursive" cname="gtk_ctree_unselect_recursive" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTreeNode*" name="node" />
        </parameters>
      </method>
    </object>
    <object name="Curve" cname="GtkCurve" parent="GtkDrawingArea">
      <field name="CursorType" cname="cursor_type" type="gint" />
      <field name="MinX" cname="min_x" type="gfloat" />
      <field name="MaxX" cname="max_x" type="gfloat" />
      <field name="MinY" cname="min_y" type="gfloat" />
      <field name="MaxY" cname="max_y" type="gfloat" />
      <field name="Pixmap" cname="pixmap" type="GdkPixmap*" />
      <field name="CurveType" cname="curve_type" type="GtkCurveType" />
      <field name="Height" cname="height" type="gint" />
      <field name="GrabPoint" cname="grab_point" type="gint" />
      <field name="Last" cname="last" type="gint" />
      <field name="NumPoints" cname="num_points" type="gint" />
      <field name="Point" cname="point" type="GdkPoint*" />
      <field name="NumCtlpoints" cname="num_ctlpoints" type="gint" />
      <field name="Ctlpoint" cname="(*ctlpoint)[2]" type="gfloat" />
      <method name="GetType" cname="gtk_curve_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVector" cname="gtk_curve_get_vector">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="veclen" />
          <parameter type="gfloat" array="true" name="vector" />
        </parameters>
      </method>
      <constructor cname="gtk_curve_new" />
      <method name="Reset" cname="gtk_curve_reset">
        <return-type type="void" />
      </method>
      <method name="SetCurveType" cname="gtk_curve_set_curve_type">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCurveType" name="type" />
        </parameters>
      </method>
      <method name="SetGamma" cname="gtk_curve_set_gamma">
        <return-type type="void" />
        <parameters>
          <parameter type="gfloat" name="gamma_" />
        </parameters>
      </method>
      <method name="SetRange" cname="gtk_curve_set_range">
        <return-type type="void" />
        <parameters>
          <parameter type="gfloat" name="min_x" />
          <parameter type="gfloat" name="max_x" />
          <parameter type="gfloat" name="min_y" />
          <parameter type="gfloat" name="max_y" />
        </parameters>
      </method>
      <method name="SetVector" cname="gtk_curve_set_vector">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="veclen" />
          <parameter type="gfloat" array="true" name="vector" />
        </parameters>
      </method>
    </object>
    <object name="Dialog" cname="GtkDialog" parent="GtkWindow">
      <field name="Vbox" cname="vbox" type="GtkWidget*" access="public" />
      <field name="ActionArea" cname="action_area" type="GtkWidget*" access="public" />
      <field name="Separator" cname="separator" type="GtkWidget*" />
      <method name="AddActionWidget" cname="gtk_dialog_add_action_widget">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="gint" name="response_id" />
        </parameters>
      </method>
      <method name="AddButton" cname="gtk_dialog_add_button">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="const-gchar*" name="button_text" />
          <parameter type="gint" name="response_id" />
        </parameters>
      </method>
      <method name="AddButtons" cname="gtk_dialog_add_buttons">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="first_button_text" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="GetHasSeparator" cname="gtk_dialog_get_has_separator">
        <return-type type="gboolean" />
      </method>
      <method name="GetResponseForWidget" cname="gtk_dialog_get_response_for_widget">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_dialog_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_dialog_new" />
      <constructor cname="gtk_dialog_new_with_buttons">
        <parameters>
          <parameter type="const-gchar*" name="title" />
          <parameter type="GtkWindow*" name="parent" />
          <parameter type="GtkDialogFlags" name="flags" />
          <parameter type="const-gchar*" name="first_button_text" />
          <parameter ellipsis="true" />
        </parameters>
      </constructor>
      <method name="Response" cname="gtk_dialog_response">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="response_id" />
        </parameters>
      </method>
      <method name="Run" cname="gtk_dialog_run">
        <return-type type="gint" />
      </method>
      <method name="SetAlternativeButtonOrder" cname="gtk_dialog_set_alternative_button_order">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="first_response_id" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="SetAlternativeButtonOrderFromArray" cname="gtk_dialog_set_alternative_button_order_from_array">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="n_params" />
          <parameter type="gint*" name="new_order" />
        </parameters>
      </method>
      <method name="SetDefaultResponse" cname="gtk_dialog_set_default_response">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="response_id" />
        </parameters>
      </method>
      <method name="SetHasSeparator" cname="gtk_dialog_set_has_separator">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetResponseSensitive" cname="gtk_dialog_set_response_sensitive">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="response_id" />
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
    </object>
    <object name="DrawingArea" cname="GtkDrawingArea" parent="GtkWidget">
      <field name="DrawData" cname="draw_data" type="gpointer" />
      <method name="GetType" cname="gtk_drawing_area_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_drawing_area_new" />
      <method name="Size" cname="gtk_drawing_area_size" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
    </object>
    <object name="Entry" cname="GtkEntry" parent="GtkWidget">
      <field name="Text" cname="text" type="gchar*" />
      <field name="Editable" cname="editable" bits="1" type="guint" />
      <field name="Visible" cname="visible" bits="1" type="guint" />
      <field name="OverwriteMode" cname="overwrite_mode" bits="1" type="guint" />
      <field name="InDrag" cname="in_drag" bits="1" type="guint" />
      <field name="TextLength" cname="text_length" type="guint16" />
      <field name="TextMaxLength" cname="text_max_length" type="guint16" />
      <field name="TextArea" cname="text_area" type="GdkWindow*" />
      <field name="ImContext" cname="im_context" type="GtkIMContext*" />
      <field name="PopupMenu" cname="popup_menu" type="GtkWidget*" />
      <field name="CurrentPos" cname="current_pos" type="gint" />
      <field name="SelectionBound" cname="selection_bound" type="gint" />
      <field name="CachedLayout" cname="cached_layout" type="PangoLayout*" />
      <field name="CacheIncludesPreedit" cname="cache_includes_preedit" bits="1" type="guint" />
      <field name="NeedImReset" cname="need_im_reset" bits="1" type="guint" />
      <field name="HasFrame" cname="has_frame" bits="1" type="guint" />
      <field name="ActivatesDefault" cname="activates_default" bits="1" type="guint" />
      <field name="CursorVisible" cname="cursor_visible" bits="1" type="guint" />
      <field name="InClick" cname="in_click" bits="1" type="guint" />
      <field name="IsCellRenderer" cname="is_cell_renderer" bits="1" type="guint" />
      <field name="EditingCanceled" cname="editing_canceled" bits="1" type="guint" />
      <field name="MouseCursorObscured" cname="mouse_cursor_obscured" bits="1" type="guint" />
      <field name="SelectWords" cname="select_words" bits="1" type="guint" />
      <field name="SelectLines" cname="select_lines" bits="1" type="guint" />
      <field name="ResolvedDir" cname="resolved_dir" bits="4" type="guint" />
      <field name="TruncateMultiline" cname="truncate_multiline" bits="1" type="guint" />
      <field name="Button" cname="button" type="guint" />
      <field name="BlinkTimeout" cname="blink_timeout" type="guint" />
      <field name="RecomputeIdle" cname="recompute_idle" type="guint" />
      <field name="ScrollOffset" cname="scroll_offset" type="gint" />
      <field name="Ascent" cname="ascent" type="gint" />
      <field name="Descent" cname="descent" type="gint" />
      <field name="TextSize" cname="text_size" type="guint16" />
      <field name="NBytes" cname="n_bytes" type="guint16" />
      <field name="PreeditLength" cname="preedit_length" type="guint16" />
      <field name="PreeditCursor" cname="preedit_cursor" type="guint16" />
      <field name="DndPosition" cname="dnd_position" type="gint" />
      <field name="DragStartX" cname="drag_start_x" type="gint" />
      <field name="DragStartY" cname="drag_start_y" type="gint" />
      <field name="InvisibleChar" cname="invisible_char" type="gunichar" />
      <field name="WidthChars" cname="width_chars" type="gint" />
      <method name="AppendText" cname="gtk_entry_append_text" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </method>
      <method name="GetActivatesDefault" cname="gtk_entry_get_activates_default">
        <return-type type="gboolean" />
      </method>
      <method name="GetAlignment" cname="gtk_entry_get_alignment">
        <return-type type="gfloat" />
      </method>
      <method name="GetCompletion" cname="gtk_entry_get_completion">
        <return-type type="GtkEntryCompletion*" />
      </method>
      <method name="GetHasFrame" cname="gtk_entry_get_has_frame">
        <return-type type="gboolean" />
      </method>
      <method name="GetInnerBorder" cname="gtk_entry_get_inner_border">
        <return-type type="const-GtkBorder*" />
      </method>
      <method name="GetInvisibleChar" cname="gtk_entry_get_invisible_char">
        <return-type type="gunichar" />
      </method>
      <method name="GetLayout" cname="gtk_entry_get_layout">
        <return-type type="PangoLayout*" />
      </method>
      <method name="GetLayoutOffsets" cname="gtk_entry_get_layout_offsets">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
        </parameters>
      </method>
      <method name="GetMaxLength" cname="gtk_entry_get_max_length">
        <return-type type="gint" />
      </method>
      <method name="GetText" cname="gtk_entry_get_text">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gtk_entry_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVisibility" cname="gtk_entry_get_visibility">
        <return-type type="gboolean" />
      </method>
      <method name="GetWidthChars" cname="gtk_entry_get_width_chars">
        <return-type type="gint" />
      </method>
      <method name="LayoutIndexToTextIndex" cname="gtk_entry_layout_index_to_text_index">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="layout_index" />
        </parameters>
      </method>
      <constructor cname="gtk_entry_new" />
      <constructor cname="gtk_entry_new_with_max_length" deprecated="1">
        <parameters>
          <parameter type="gint" name="max" />
        </parameters>
      </constructor>
      <method name="PrependText" cname="gtk_entry_prepend_text" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </method>
      <method name="SelectRegion" cname="gtk_entry_select_region" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="start" />
          <parameter type="gint" name="end" />
        </parameters>
      </method>
      <method name="SetActivatesDefault" cname="gtk_entry_set_activates_default">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetAlignment" cname="gtk_entry_set_alignment">
        <return-type type="void" />
        <parameters>
          <parameter type="gfloat" name="xalign" />
        </parameters>
      </method>
      <method name="SetCompletion" cname="gtk_entry_set_completion">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkEntryCompletion*" name="completion" />
        </parameters>
      </method>
      <method name="SetEditable" cname="gtk_entry_set_editable" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="editable" />
        </parameters>
      </method>
      <method name="SetHasFrame" cname="gtk_entry_set_has_frame">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetInnerBorder" cname="gtk_entry_set_inner_border">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GtkBorder*" name="border" />
        </parameters>
      </method>
      <method name="SetInvisibleChar" cname="gtk_entry_set_invisible_char">
        <return-type type="void" />
        <parameters>
          <parameter type="gunichar" name="ch" />
        </parameters>
      </method>
      <method name="SetMaxLength" cname="gtk_entry_set_max_length">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="max" />
        </parameters>
      </method>
      <method name="SetPosition" cname="gtk_entry_set_position" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="SetText" cname="gtk_entry_set_text">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </method>
      <method name="SetVisibility" cname="gtk_entry_set_visibility">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="visible" />
        </parameters>
      </method>
      <method name="SetWidthChars" cname="gtk_entry_set_width_chars">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="n_chars" />
        </parameters>
      </method>
      <method name="TextIndexToLayoutIndex" cname="gtk_entry_text_index_to_layout_index">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="text_index" />
        </parameters>
      </method>
    </object>
    <object name="EntryCompletion" cname="GtkEntryCompletion" parent="GObject">
      <field name="Priv" cname="priv" type="GtkEntryCompletionPrivate*" />
      <method name="Complete" cname="gtk_entry_completion_complete">
        <return-type type="void" />
      </method>
      <method name="DeleteAction" cname="gtk_entry_completion_delete_action">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="index_" />
        </parameters>
      </method>
      <method name="GetEntry" cname="gtk_entry_completion_get_entry">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetInlineCompletion" cname="gtk_entry_completion_get_inline_completion">
        <return-type type="gboolean" />
      </method>
      <method name="GetMinimumKeyLength" cname="gtk_entry_completion_get_minimum_key_length">
        <return-type type="gint" />
      </method>
      <method name="GetModel" cname="gtk_entry_completion_get_model">
        <return-type type="GtkTreeModel*" />
      </method>
      <method name="GetPopupCompletion" cname="gtk_entry_completion_get_popup_completion">
        <return-type type="gboolean" />
      </method>
      <method name="GetPopupSetWidth" cname="gtk_entry_completion_get_popup_set_width">
        <return-type type="gboolean" />
      </method>
      <method name="GetPopupSingleMatch" cname="gtk_entry_completion_get_popup_single_match">
        <return-type type="gboolean" />
      </method>
      <method name="GetTextColumn" cname="gtk_entry_completion_get_text_column">
        <return-type type="gint" />
      </method>
      <method name="GetType" cname="gtk_entry_completion_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="InsertActionMarkup" cname="gtk_entry_completion_insert_action_markup">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="index_" />
          <parameter type="const-gchar*" name="markup" />
        </parameters>
      </method>
      <method name="InsertActionText" cname="gtk_entry_completion_insert_action_text">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="index_" />
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </method>
      <method name="InsertPrefix" cname="gtk_entry_completion_insert_prefix">
        <return-type type="void" />
      </method>
      <constructor cname="gtk_entry_completion_new" />
      <method name="SetInlineCompletion" cname="gtk_entry_completion_set_inline_completion">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="inline_completion" />
        </parameters>
      </method>
      <method name="SetMatchFunc" cname="gtk_entry_completion_set_match_func">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkEntryCompletionMatchFunc" name="func" />
          <parameter type="gpointer" name="func_data" />
          <parameter type="GDestroyNotify" name="func_notify" />
        </parameters>
      </method>
      <method name="SetMinimumKeyLength" cname="gtk_entry_completion_set_minimum_key_length">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="length" />
        </parameters>
      </method>
      <method name="SetModel" cname="gtk_entry_completion_set_model">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeModel*" name="model" />
        </parameters>
      </method>
      <method name="SetPopupCompletion" cname="gtk_entry_completion_set_popup_completion">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="popup_completion" />
        </parameters>
      </method>
      <method name="SetPopupSetWidth" cname="gtk_entry_completion_set_popup_set_width">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="popup_set_width" />
        </parameters>
      </method>
      <method name="SetPopupSingleMatch" cname="gtk_entry_completion_set_popup_single_match">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="popup_single_match" />
        </parameters>
      </method>
      <method name="SetTextColumn" cname="gtk_entry_completion_set_text_column">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="column" />
        </parameters>
      </method>
    </object>
    <object name="EventBox" cname="GtkEventBox" parent="GtkBin">
      <method name="GetAboveChild" cname="gtk_event_box_get_above_child">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_event_box_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVisibleWindow" cname="gtk_event_box_get_visible_window">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gtk_event_box_new" />
      <method name="SetAboveChild" cname="gtk_event_box_set_above_child">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="above_child" />
        </parameters>
      </method>
      <method name="SetVisibleWindow" cname="gtk_event_box_set_visible_window">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="visible_window" />
        </parameters>
      </method>
    </object>
    <object name="Expander" cname="GtkExpander" parent="GtkBin">
      <field name="Priv" cname="priv" type="GtkExpanderPrivate*" />
      <method name="GetExpanded" cname="gtk_expander_get_expanded">
        <return-type type="gboolean" />
      </method>
      <method name="GetLabel" cname="gtk_expander_get_label">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetLabelWidget" cname="gtk_expander_get_label_widget">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetSpacing" cname="gtk_expander_get_spacing">
        <return-type type="gint" />
      </method>
      <method name="GetType" cname="gtk_expander_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUseMarkup" cname="gtk_expander_get_use_markup">
        <return-type type="gboolean" />
      </method>
      <method name="GetUseUnderline" cname="gtk_expander_get_use_underline">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gtk_expander_new">
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <constructor cname="gtk_expander_new_with_mnemonic">
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <method name="SetExpanded" cname="gtk_expander_set_expanded">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="expanded" />
        </parameters>
      </method>
      <method name="SetLabel" cname="gtk_expander_set_label">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </method>
      <method name="SetLabelWidget" cname="gtk_expander_set_label_widget">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="label_widget" />
        </parameters>
      </method>
      <method name="SetSpacing" cname="gtk_expander_set_spacing">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="spacing" />
        </parameters>
      </method>
      <method name="SetUseMarkup" cname="gtk_expander_set_use_markup">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="use_markup" />
        </parameters>
      </method>
      <method name="SetUseUnderline" cname="gtk_expander_set_use_underline">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="use_underline" />
        </parameters>
      </method>
    </object>
    <object name="FileChooser" cname="GtkFileChooser">
      <method name="AddFilter" cname="gtk_file_chooser_add_filter">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFileFilter*" name="filter" />
        </parameters>
      </method>
      <method name="AddShortcutFolder" cname="gtk_file_chooser_add_shortcut_folder">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="folder" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="AddShortcutFolderUri" cname="gtk_file_chooser_add_shortcut_folder_uri">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="uri" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ErrorQuark" cname="gtk_file_chooser_error_quark" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="GetAction" cname="gtk_file_chooser_get_action">
        <return-type type="GtkFileChooserAction" />
      </method>
      <method name="GetCurrentFolder" cname="gtk_file_chooser_get_current_folder">
        <return-type type="gchar*" />
      </method>
      <method name="GetCurrentFolderUri" cname="gtk_file_chooser_get_current_folder_uri">
        <return-type type="gchar*" />
      </method>
      <method name="GetDoOverwriteConfirmation" cname="gtk_file_chooser_get_do_overwrite_confirmation">
        <return-type type="gboolean" />
      </method>
      <method name="GetExtraWidget" cname="gtk_file_chooser_get_extra_widget">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetFilename" cname="gtk_file_chooser_get_filename">
        <return-type type="gchar*" />
      </method>
      <method name="GetFilenames" cname="gtk_file_chooser_get_filenames">
        <return-type type="GSList*" />
      </method>
      <method name="GetFilter" cname="gtk_file_chooser_get_filter">
        <return-type type="GtkFileFilter*" />
      </method>
      <method name="GetLocalOnly" cname="gtk_file_chooser_get_local_only">
        <return-type type="gboolean" />
      </method>
      <method name="GetPreviewFilename" cname="gtk_file_chooser_get_preview_filename">
        <return-type type="char*" />
      </method>
      <method name="GetPreviewUri" cname="gtk_file_chooser_get_preview_uri">
        <return-type type="char*" />
      </method>
      <method name="GetPreviewWidget" cname="gtk_file_chooser_get_preview_widget">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetPreviewWidgetActive" cname="gtk_file_chooser_get_preview_widget_active">
        <return-type type="gboolean" />
      </method>
      <method name="GetSelectMultiple" cname="gtk_file_chooser_get_select_multiple">
        <return-type type="gboolean" />
      </method>
      <method name="GetShowHidden" cname="gtk_file_chooser_get_show_hidden">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_file_chooser_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUri" cname="gtk_file_chooser_get_uri">
        <return-type type="gchar*" />
      </method>
      <method name="GetUris" cname="gtk_file_chooser_get_uris">
        <return-type type="GSList*" />
      </method>
      <method name="GetUsePreviewLabel" cname="gtk_file_chooser_get_use_preview_label">
        <return-type type="gboolean" />
      </method>
      <method name="ListFilters" cname="gtk_file_chooser_list_filters">
        <return-type type="GSList*" />
      </method>
      <method name="ListShortcutFolderUris" cname="gtk_file_chooser_list_shortcut_folder_uris">
        <return-type type="GSList*" />
      </method>
      <method name="ListShortcutFolders" cname="gtk_file_chooser_list_shortcut_folders">
        <return-type type="GSList*" />
      </method>
      <method name="RemoveFilter" cname="gtk_file_chooser_remove_filter">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFileFilter*" name="filter" />
        </parameters>
      </method>
      <method name="RemoveShortcutFolder" cname="gtk_file_chooser_remove_shortcut_folder">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="folder" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="RemoveShortcutFolderUri" cname="gtk_file_chooser_remove_shortcut_folder_uri">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="uri" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="SelectAll" cname="gtk_file_chooser_select_all">
        <return-type type="void" />
      </method>
      <method name="SelectFilename" cname="gtk_file_chooser_select_filename">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="filename" />
        </parameters>
      </method>
      <method name="SelectUri" cname="gtk_file_chooser_select_uri">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="uri" />
        </parameters>
      </method>
      <method name="SetAction" cname="gtk_file_chooser_set_action">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFileChooserAction" name="action" />
        </parameters>
      </method>
      <method name="SetCurrentFolder" cname="gtk_file_chooser_set_current_folder">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
        </parameters>
      </method>
      <method name="SetCurrentFolderUri" cname="gtk_file_chooser_set_current_folder_uri">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="uri" />
        </parameters>
      </method>
      <method name="SetCurrentName" cname="gtk_file_chooser_set_current_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="SetDoOverwriteConfirmation" cname="gtk_file_chooser_set_do_overwrite_confirmation">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="do_overwrite_confirmation" />
        </parameters>
      </method>
      <method name="SetExtraWidget" cname="gtk_file_chooser_set_extra_widget">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="extra_widget" />
        </parameters>
      </method>
      <method name="SetFilename" cname="gtk_file_chooser_set_filename">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="filename" />
        </parameters>
      </method>
      <method name="SetFilter" cname="gtk_file_chooser_set_filter">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFileFilter*" name="filter" />
        </parameters>
      </method>
      <method name="SetLocalOnly" cname="gtk_file_chooser_set_local_only">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="local_only" />
        </parameters>
      </method>
      <method name="SetPreviewWidget" cname="gtk_file_chooser_set_preview_widget">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="preview_widget" />
        </parameters>
      </method>
      <method name="SetPreviewWidgetActive" cname="gtk_file_chooser_set_preview_widget_active">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="active" />
        </parameters>
      </method>
      <method name="SetSelectMultiple" cname="gtk_file_chooser_set_select_multiple">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="select_multiple" />
        </parameters>
      </method>
      <method name="SetShowHidden" cname="gtk_file_chooser_set_show_hidden">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="show_hidden" />
        </parameters>
      </method>
      <method name="SetUri" cname="gtk_file_chooser_set_uri">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="uri" />
        </parameters>
      </method>
      <method name="SetUsePreviewLabel" cname="gtk_file_chooser_set_use_preview_label">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="use_label" />
        </parameters>
      </method>
      <method name="UnselectAll" cname="gtk_file_chooser_unselect_all">
        <return-type type="void" />
      </method>
      <method name="UnselectFilename" cname="gtk_file_chooser_unselect_filename">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="filename" />
        </parameters>
      </method>
      <method name="UnselectUri" cname="gtk_file_chooser_unselect_uri">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="uri" />
        </parameters>
      </method>
    </object>
    <object name="FileChooserButton" cname="GtkFileChooserButton" parent="GtkHBox">
      <field name="Priv" cname="priv" type="GtkFileChooserButtonPrivate*" />
      <method name="GetFocusOnClick" cname="gtk_file_chooser_button_get_focus_on_click">
        <return-type type="gboolean" />
      </method>
      <method name="GetTitle" cname="gtk_file_chooser_button_get_title">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gtk_file_chooser_button_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetWidthChars" cname="gtk_file_chooser_button_get_width_chars">
        <return-type type="gint" />
      </method>
      <constructor cname="gtk_file_chooser_button_new">
        <parameters>
          <parameter type="const-gchar*" name="title" />
          <parameter type="GtkFileChooserAction" name="action" />
        </parameters>
      </constructor>
      <constructor cname="gtk_file_chooser_button_new_with_backend">
        <parameters>
          <parameter type="const-gchar*" name="title" />
          <parameter type="GtkFileChooserAction" name="action" />
          <parameter type="const-gchar*" name="backend" />
        </parameters>
      </constructor>
      <constructor cname="gtk_file_chooser_button_new_with_dialog">
        <parameters>
          <parameter type="GtkWidget*" name="dialog" />
        </parameters>
      </constructor>
      <method name="SetFocusOnClick" cname="gtk_file_chooser_button_set_focus_on_click">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="focus_on_click" />
        </parameters>
      </method>
      <method name="SetTitle" cname="gtk_file_chooser_button_set_title">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="title" />
        </parameters>
      </method>
      <method name="SetWidthChars" cname="gtk_file_chooser_button_set_width_chars">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="n_chars" />
        </parameters>
      </method>
    </object>
    <object name="FileChooserDialog" cname="GtkFileChooserDialog" parent="GtkDialog">
      <field name="Priv" cname="priv" type="GtkFileChooserDialogPrivate*" />
      <method name="GetType" cname="gtk_file_chooser_dialog_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_file_chooser_dialog_new">
        <parameters>
          <parameter type="const-gchar*" name="title" />
          <parameter type="GtkWindow*" name="parent" />
          <parameter type="GtkFileChooserAction" name="action" />
          <parameter type="const-gchar*" name="first_button_text" />
          <parameter ellipsis="true" />
        </parameters>
      </constructor>
      <constructor cname="gtk_file_chooser_dialog_new_with_backend">
        <parameters>
          <parameter type="const-gchar*" name="title" />
          <parameter type="GtkWindow*" name="parent" />
          <parameter type="GtkFileChooserAction" name="action" />
          <parameter type="const-gchar*" name="backend" />
          <parameter type="const-gchar*" name="first_button_text" />
          <parameter ellipsis="true" />
        </parameters>
      </constructor>
    </object>
    <object name="FileChooserWidget" cname="GtkFileChooserWidget" parent="GtkVBox">
      <field name="Priv" cname="priv" type="GtkFileChooserWidgetPrivate*" />
      <method name="GetType" cname="gtk_file_chooser_widget_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_file_chooser_widget_new">
        <parameters>
          <parameter type="GtkFileChooserAction" name="action" />
        </parameters>
      </constructor>
      <constructor cname="gtk_file_chooser_widget_new_with_backend">
        <parameters>
          <parameter type="GtkFileChooserAction" name="action" />
          <parameter type="const-gchar*" name="backend" />
        </parameters>
      </constructor>
    </object>
    <object name="FileFilter" cname="GtkFileFilter">
      <method name="AddCustom" cname="gtk_file_filter_add_custom">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFileFilterFlags" name="needed" />
          <parameter type="GtkFileFilterFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GDestroyNotify" name="notify" />
        </parameters>
      </method>
      <method name="AddMimeType" cname="gtk_file_filter_add_mime_type">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="mime_type" />
        </parameters>
      </method>
      <method name="AddPattern" cname="gtk_file_filter_add_pattern">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="pattern" />
        </parameters>
      </method>
      <method name="AddPixbufFormats" cname="gtk_file_filter_add_pixbuf_formats">
        <return-type type="void" />
      </method>
      <method name="Filter" cname="gtk_file_filter_filter">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GtkFileFilterInfo*" name="filter_info" />
        </parameters>
      </method>
      <method name="GetName" cname="gtk_file_filter_get_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetNeeded" cname="gtk_file_filter_get_needed">
        <return-type type="GtkFileFilterFlags" />
      </method>
      <method name="GetType" cname="gtk_file_filter_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_file_filter_new" />
      <method name="SetName" cname="gtk_file_filter_set_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
    </object>
    <object name="FileSelection" cname="GtkFileSelection" parent="GtkDialog">
      <field name="DirList" cname="dir_list" type="GtkWidget*" access="public" />
      <field name="FileList" cname="file_list" type="GtkWidget*" access="public" />
      <field name="SelectionEntry" cname="selection_entry" type="GtkWidget*" access="public" />
      <field name="SelectionText" cname="selection_text" type="GtkWidget*" access="public" />
      <field name="MainVbox" cname="main_vbox" type="GtkWidget*" access="public" />
      <field name="OkButton" cname="ok_button" type="GtkWidget*" access="public" />
      <field name="CancelButton" cname="cancel_button" type="GtkWidget*" access="public" />
      <field name="HelpButton" cname="help_button" type="GtkWidget*" access="public" />
      <field name="HistoryPulldown" cname="history_pulldown" type="GtkWidget*" access="public" />
      <field name="HistoryMenu" cname="history_menu" type="GtkWidget*" access="public" />
      <field name="HistoryList" cname="history_list" type="GList*" access="public" />
      <field name="FileopDialog" cname="fileop_dialog" type="GtkWidget*" access="public" />
      <field name="FileopEntry" cname="fileop_entry" type="GtkWidget*" access="public" />
      <field name="FileopFile" cname="fileop_file" type="gchar*" access="public" />
      <field name="CmplState" cname="cmpl_state" type="gpointer" access="public" />
      <field name="FileopCDir" cname="fileop_c_dir" type="GtkWidget*" access="public" />
      <field name="FileopDelFile" cname="fileop_del_file" type="GtkWidget*" access="public" />
      <field name="FileopRenFile" cname="fileop_ren_file" type="GtkWidget*" access="public" />
      <field name="ButtonArea" cname="button_area" type="GtkWidget*" access="public" />
      <field name="ActionArea" cname="action_area" type="GtkWidget*" access="public" />
      <field name="SelectedNames" cname="selected_names" type="GPtrArray*" />
      <field name="LastSelected" cname="last_selected" type="gchar*" />
      <method name="Complete" cname="gtk_file_selection_complete">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="pattern" />
        </parameters>
      </method>
      <method name="GetFilename" cname="gtk_file_selection_get_filename">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetSelectMultiple" cname="gtk_file_selection_get_select_multiple">
        <return-type type="gboolean" />
      </method>
      <method name="GetSelections" cname="gtk_file_selection_get_selections">
        <return-type type="gchar**" />
      </method>
      <method name="GetType" cname="gtk_file_selection_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="HideFileopButtons" cname="gtk_file_selection_hide_fileop_buttons">
        <return-type type="void" />
      </method>
      <constructor cname="gtk_file_selection_new">
        <parameters>
          <parameter type="const-gchar*" name="title" />
        </parameters>
      </constructor>
      <method name="SetFilename" cname="gtk_file_selection_set_filename">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
        </parameters>
      </method>
      <method name="SetSelectMultiple" cname="gtk_file_selection_set_select_multiple">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="select_multiple" />
        </parameters>
      </method>
      <method name="ShowFileopButtons" cname="gtk_file_selection_show_fileop_buttons">
        <return-type type="void" />
      </method>
    </object>
    <object name="FileSystemHandle" cname="GtkFileSystemHandle" parent="GObject">
      <field name="FileSystem" cname="file_system" type="GtkFileSystem*" />
      <field name="Cancelled" cname="cancelled" bits="1" type="guint" />
      <method name="GetType" cname="gtk_file_system_handle_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <object name="Fixed" cname="GtkFixed" parent="GtkContainer">
      <field name="Children" cname="children" type="GList*" />
      <method name="GetHasWindow" cname="gtk_fixed_get_has_window">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_fixed_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Move" cname="gtk_fixed_move">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <constructor cname="gtk_fixed_new" />
      <method name="Put" cname="gtk_fixed_put">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="SetHasWindow" cname="gtk_fixed_set_has_window">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="has_window" />
        </parameters>
      </method>
    </object>
    <object name="FontButton" cname="GtkFontButton" parent="GtkButton">
      <field name="Priv" cname="priv" type="GtkFontButtonPrivate*" />
      <method name="GetFontName" cname="gtk_font_button_get_font_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetShowSize" cname="gtk_font_button_get_show_size">
        <return-type type="gboolean" />
      </method>
      <method name="GetShowStyle" cname="gtk_font_button_get_show_style">
        <return-type type="gboolean" />
      </method>
      <method name="GetTitle" cname="gtk_font_button_get_title">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gtk_font_button_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUseFont" cname="gtk_font_button_get_use_font">
        <return-type type="gboolean" />
      </method>
      <method name="GetUseSize" cname="gtk_font_button_get_use_size">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gtk_font_button_new" />
      <constructor cname="gtk_font_button_new_with_font">
        <parameters>
          <parameter type="const-gchar*" name="fontname" />
        </parameters>
      </constructor>
      <method name="SetFontName" cname="gtk_font_button_set_font_name">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="fontname" />
        </parameters>
      </method>
      <method name="SetShowSize" cname="gtk_font_button_set_show_size">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="show_size" />
        </parameters>
      </method>
      <method name="SetShowStyle" cname="gtk_font_button_set_show_style">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="show_style" />
        </parameters>
      </method>
      <method name="SetTitle" cname="gtk_font_button_set_title">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="title" />
        </parameters>
      </method>
      <method name="SetUseFont" cname="gtk_font_button_set_use_font">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="use_font" />
        </parameters>
      </method>
      <method name="SetUseSize" cname="gtk_font_button_set_use_size">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="use_size" />
        </parameters>
      </method>
    </object>
    <object name="FontSelection" cname="GtkFontSelection" parent="GtkVBox">
      <field name="FontEntry" cname="font_entry" type="GtkWidget*" />
      <field name="FamilyList" cname="family_list" type="GtkWidget*" />
      <field name="FontStyleEntry" cname="font_style_entry" type="GtkWidget*" />
      <field name="FaceList" cname="face_list" type="GtkWidget*" />
      <field name="SizeEntry" cname="size_entry" type="GtkWidget*" />
      <field name="SizeList" cname="size_list" type="GtkWidget*" />
      <field name="PixelsButton" cname="pixels_button" type="GtkWidget*" />
      <field name="PointsButton" cname="points_button" type="GtkWidget*" />
      <field name="FilterButton" cname="filter_button" type="GtkWidget*" />
      <field name="PreviewEntry" cname="preview_entry" type="GtkWidget*" />
      <field name="Family" cname="family" type="PangoFontFamily*" />
      <field name="Face" cname="face" type="PangoFontFace*" />
      <field name="Size" cname="size" type="gint" />
      <field name="Font" cname="font" type="GdkFont*" />
      <method name="GetFont" cname="gtk_font_selection_get_font" deprecated="1">
        <return-type type="GdkFont*" />
      </method>
      <method name="GetFontName" cname="gtk_font_selection_get_font_name">
        <return-type type="gchar*" />
      </method>
      <method name="GetPreviewText" cname="gtk_font_selection_get_preview_text">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gtk_font_selection_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_font_selection_new" />
      <method name="SetFontName" cname="gtk_font_selection_set_font_name">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="fontname" />
        </parameters>
      </method>
      <method name="SetPreviewText" cname="gtk_font_selection_set_preview_text">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </method>
    </object>
    <object name="FontSelectionDialog" cname="GtkFontSelectionDialog" parent="GtkDialog">
      <field name="Fontsel" cname="fontsel" type="GtkWidget*" />
      <field name="MainVbox" cname="main_vbox" type="GtkWidget*" />
      <field name="ActionArea" cname="action_area" type="GtkWidget*" />
      <field name="OkButton" cname="ok_button" type="GtkWidget*" access="public" />
      <field name="ApplyButton" cname="apply_button" type="GtkWidget*" access="public" />
      <field name="CancelButton" cname="cancel_button" type="GtkWidget*" access="public" />
      <field name="DialogWidth" cname="dialog_width" type="gint" />
      <field name="AutoResize" cname="auto_resize" type="gboolean" />
      <method name="GetFont" cname="gtk_font_selection_dialog_get_font" deprecated="1">
        <return-type type="GdkFont*" />
      </method>
      <method name="GetFontName" cname="gtk_font_selection_dialog_get_font_name">
        <return-type type="gchar*" />
      </method>
      <method name="GetPreviewText" cname="gtk_font_selection_dialog_get_preview_text">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gtk_font_selection_dialog_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_font_selection_dialog_new">
        <parameters>
          <parameter type="const-gchar*" name="title" />
        </parameters>
      </constructor>
      <method name="SetFontName" cname="gtk_font_selection_dialog_set_font_name">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="fontname" />
        </parameters>
      </method>
      <method name="SetPreviewText" cname="gtk_font_selection_dialog_set_preview_text">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </method>
    </object>
    <object name="Frame" cname="GtkFrame" parent="GtkBin">
      <field name="LabelWidget" cname="label_widget" type="GtkWidget*" />
      <field name="ShadowType" cname="shadow_type" type="gint16" />
      <field name="LabelXalign" cname="label_xalign" type="gfloat" />
      <field name="LabelYalign" cname="label_yalign" type="gfloat" />
      <field name="ChildAllocation" cname="child_allocation" type="GtkAllocation" />
      <method name="GetLabel" cname="gtk_frame_get_label">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetLabelAlign" cname="gtk_frame_get_label_align">
        <return-type type="void" />
        <parameters>
          <parameter type="gfloat*" name="xalign" />
          <parameter type="gfloat*" name="yalign" />
        </parameters>
      </method>
      <method name="GetLabelWidget" cname="gtk_frame_get_label_widget">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetShadowType" cname="gtk_frame_get_shadow_type">
        <return-type type="GtkShadowType" />
      </method>
      <method name="GetType" cname="gtk_frame_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_frame_new">
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <method name="SetLabel" cname="gtk_frame_set_label">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </method>
      <method name="SetLabelAlign" cname="gtk_frame_set_label_align">
        <return-type type="void" />
        <parameters>
          <parameter type="gfloat" name="xalign" />
          <parameter type="gfloat" name="yalign" />
        </parameters>
      </method>
      <method name="SetLabelWidget" cname="gtk_frame_set_label_widget">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="label_widget" />
        </parameters>
      </method>
      <method name="SetShadowType" cname="gtk_frame_set_shadow_type">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkShadowType" name="type" />
        </parameters>
      </method>
    </object>
    <object name="GammaCurve" cname="GtkGammaCurve" parent="GtkVBox">
      <field name="Table" cname="table" type="GtkWidget*" />
      <field name="Curve" cname="curve" type="GtkWidget*" />
      <field name="Button" cname="button" array_len="5" type="GtkWidget*" />
      <field name="Gamma" cname="gamma" type="gfloat" />
      <field name="GammaDialog" cname="gamma_dialog" type="GtkWidget*" />
      <field name="GammaText" cname="gamma_text" type="GtkWidget*" />
      <method name="GetType" cname="gtk_gamma_curve_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_gamma_curve_new" />
    </object>
    <object name="HandleBox" cname="GtkHandleBox" parent="GtkBin">
      <field name="BinWindow" cname="bin_window" type="GdkWindow*" />
      <field name="FloatWindow" cname="float_window" type="GdkWindow*" />
      <field name="ShadowType" cname="shadow_type" type="GtkShadowType" />
      <field name="HandlePosition" cname="handle_position" bits="2" type="guint" />
      <field name="FloatWindowMapped" cname="float_window_mapped" bits="1" type="guint" />
      <field name="ChildDetached" cname="child_detached" bits="1" type="guint" />
      <field name="InDrag" cname="in_drag" bits="1" type="guint" />
      <field name="ShrinkOnDetach" cname="shrink_on_detach" bits="1" type="guint" />
      <field name="SnapEdge" cname="snap_edge" bits="3" type="signed" />
      <field name="DeskoffX" cname="deskoff_x" type="gint" />
      <field name="DeskoffY" cname="deskoff_y" type="gint" />
      <field name="AttachAllocation" cname="attach_allocation" type="GtkAllocation" />
      <field name="FloatAllocation" cname="float_allocation" type="GtkAllocation" />
      <method name="GetHandlePosition" cname="gtk_handle_box_get_handle_position">
        <return-type type="GtkPositionType" />
      </method>
      <method name="GetShadowType" cname="gtk_handle_box_get_shadow_type">
        <return-type type="GtkShadowType" />
      </method>
      <method name="GetSnapEdge" cname="gtk_handle_box_get_snap_edge">
        <return-type type="GtkPositionType" />
      </method>
      <method name="GetType" cname="gtk_handle_box_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_handle_box_new" />
      <method name="SetHandlePosition" cname="gtk_handle_box_set_handle_position">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPositionType" name="position" />
        </parameters>
      </method>
      <method name="SetShadowType" cname="gtk_handle_box_set_shadow_type">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkShadowType" name="type" />
        </parameters>
      </method>
      <method name="SetSnapEdge" cname="gtk_handle_box_set_snap_edge">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPositionType" name="edge" />
        </parameters>
      </method>
    </object>
    <object name="HBox" cname="GtkHBox" parent="GtkBox">
      <method name="GetType" cname="gtk_hbox_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_hbox_new">
        <parameters>
          <parameter type="gboolean" name="homogeneous" />
          <parameter type="gint" name="spacing" />
        </parameters>
      </constructor>
    </object>
    <object name="HButtonBox" cname="GtkHButtonBox" parent="GtkButtonBox">
      <method name="GetLayoutDefault" cname="gtk_hbutton_box_get_layout_default" deprecated="1" shared="true">
        <return-type type="GtkButtonBoxStyle" />
      </method>
      <method name="GetSpacingDefault" cname="gtk_hbutton_box_get_spacing_default" deprecated="1" shared="true">
        <return-type type="gint" />
      </method>
      <method name="GetType" cname="gtk_hbutton_box_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_hbutton_box_new" />
      <method name="SetLayoutDefault" cname="gtk_hbutton_box_set_layout_default" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkButtonBoxStyle" name="layout" />
        </parameters>
      </method>
      <method name="SetSpacingDefault" cname="gtk_hbutton_box_set_spacing_default" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="spacing" />
        </parameters>
      </method>
    </object>
    <object name="HPaned" cname="GtkHPaned" parent="GtkPaned">
      <method name="GetType" cname="gtk_hpaned_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_hpaned_new" />
    </object>
    <object name="HRuler" cname="GtkHRuler" parent="GtkRuler">
      <method name="GetType" cname="gtk_hruler_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_hruler_new" />
    </object>
    <object name="HScale" cname="GtkHScale" parent="GtkScale">
      <method name="GetType" cname="gtk_hscale_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_hscale_new">
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </constructor>
      <constructor cname="gtk_hscale_new_with_range">
        <parameters>
          <parameter type="gdouble" name="min" />
          <parameter type="gdouble" name="max" />
          <parameter type="gdouble" name="step" />
        </parameters>
      </constructor>
    </object>
    <object name="HScrollbar" cname="GtkHScrollbar" parent="GtkScrollbar">
      <method name="GetType" cname="gtk_hscrollbar_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_hscrollbar_new">
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </constructor>
    </object>
    <object name="HSeparator" cname="GtkHSeparator" parent="GtkSeparator">
      <method name="GetType" cname="gtk_hseparator_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_hseparator_new" />
    </object>
    <object name="IconFactory" cname="GtkIconFactory" parent="GObject">
      <field name="Icons" cname="icons" type="GHashTable*" />
      <method name="Add" cname="gtk_icon_factory_add">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="stock_id" />
          <parameter type="GtkIconSet*" name="icon_set" />
        </parameters>
      </method>
      <method name="AddDefault" cname="gtk_icon_factory_add_default">
        <return-type type="void" />
      </method>
      <method name="GetType" cname="gtk_icon_factory_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Lookup" cname="gtk_icon_factory_lookup">
        <return-type type="GtkIconSet*" />
        <parameters>
          <parameter type="const-gchar*" name="stock_id" />
        </parameters>
      </method>
      <method name="LookupDefault" cname="gtk_icon_factory_lookup_default" shared="true">
        <return-type type="GtkIconSet*" />
        <parameters>
          <parameter type="const-gchar*" name="stock_id" />
        </parameters>
      </method>
      <constructor cname="gtk_icon_factory_new" />
      <method name="RemoveDefault" cname="gtk_icon_factory_remove_default">
        <return-type type="void" />
      </method>
    </object>
    <object name="IconTheme" cname="GtkIconTheme" parent="GObject">
      <field name="Priv" cname="priv" type="GtkIconThemePrivate*" />
      <method name="AddBuiltinIcon" cname="gtk_icon_theme_add_builtin_icon" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="icon_name" />
          <parameter type="gint" name="size" />
          <parameter type="GdkPixbuf*" name="pixbuf" />
        </parameters>
      </method>
      <method name="AppendSearchPath" cname="gtk_icon_theme_append_search_path">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="ErrorQuark" cname="gtk_icon_theme_error_quark" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="GetDefault" cname="gtk_icon_theme_get_default" shared="true">
        <return-type type="GtkIconTheme*" />
      </method>
      <method name="GetExampleIconName" cname="gtk_icon_theme_get_example_icon_name">
        <return-type type="char*" />
      </method>
      <method name="GetForScreen" cname="gtk_icon_theme_get_for_screen" shared="true">
        <return-type type="GtkIconTheme*" />
        <parameters>
          <parameter type="GdkScreen*" name="screen" />
        </parameters>
      </method>
      <method name="GetIconSizes" cname="gtk_icon_theme_get_icon_sizes">
        <return-type type="gint*" />
        <parameters>
          <parameter type="const-gchar*" name="icon_name" />
        </parameters>
      </method>
      <method name="GetSearchPath" cname="gtk_icon_theme_get_search_path">
        <return-type type="void" />
        <parameters>
          <parameter type="gchar**" array="true" name="path" />
          <parameter type="gint*" name="n_elements" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_icon_theme_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="HasIcon" cname="gtk_icon_theme_has_icon">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="icon_name" />
        </parameters>
      </method>
      <method name="ListIcons" cname="gtk_icon_theme_list_icons">
        <return-type type="GList*" />
        <parameters>
          <parameter type="const-gchar*" name="context" />
        </parameters>
      </method>
      <method name="LoadIcon" cname="gtk_icon_theme_load_icon">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="const-gchar*" name="icon_name" />
          <parameter type="gint" name="size" />
          <parameter type="GtkIconLookupFlags" name="flags" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="LookupIcon" cname="gtk_icon_theme_lookup_icon">
        <return-type type="GtkIconInfo*" />
        <parameters>
          <parameter type="const-gchar*" name="icon_name" />
          <parameter type="gint" name="size" />
          <parameter type="GtkIconLookupFlags" name="flags" />
        </parameters>
      </method>
      <constructor cname="gtk_icon_theme_new" />
      <method name="PrependSearchPath" cname="gtk_icon_theme_prepend_search_path">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="RescanIfNeeded" cname="gtk_icon_theme_rescan_if_needed">
        <return-type type="gboolean" />
      </method>
      <method name="SetCustomTheme" cname="gtk_icon_theme_set_custom_theme">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="theme_name" />
        </parameters>
      </method>
      <method name="SetScreen" cname="gtk_icon_theme_set_screen">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkScreen*" name="screen" />
        </parameters>
      </method>
      <method name="SetSearchPath" cname="gtk_icon_theme_set_search_path">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" array="true" name="path" />
          <parameter type="gint" name="n_elements" />
        </parameters>
      </method>
    </object>
    <object name="IconView" cname="GtkIconView" parent="GtkContainer">
      <field name="Priv" cname="priv" type="GtkIconViewPrivate*" />
      <method name="CreateDragIcon" cname="gtk_icon_view_create_drag_icon">
        <return-type type="GdkPixmap*" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
      <method name="EnableModelDragDest" cname="gtk_icon_view_enable_model_drag_dest">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GtkTargetEntry*" name="targets" />
          <parameter type="gint" name="n_targets" />
          <parameter type="GdkDragAction" name="actions" />
        </parameters>
      </method>
      <method name="EnableModelDragSource" cname="gtk_icon_view_enable_model_drag_source">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkModifierType" name="start_button_mask" />
          <parameter type="const-GtkTargetEntry*" name="targets" />
          <parameter type="gint" name="n_targets" />
          <parameter type="GdkDragAction" name="actions" />
        </parameters>
      </method>
      <method name="GetColumnSpacing" cname="gtk_icon_view_get_column_spacing">
        <return-type type="gint" />
      </method>
      <method name="GetColumns" cname="gtk_icon_view_get_columns">
        <return-type type="gint" />
      </method>
      <method name="GetCursor" cname="gtk_icon_view_get_cursor">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreePath**" name="path" />
          <parameter type="GtkCellRenderer**" name="cell" />
        </parameters>
      </method>
      <method name="GetDestItemAtPos" cname="gtk_icon_view_get_dest_item_at_pos">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="drag_x" />
          <parameter type="gint" name="drag_y" />
          <parameter type="GtkTreePath**" name="path" />
          <parameter type="GtkIconViewDropPosition*" name="pos" />
        </parameters>
      </method>
      <method name="GetDragDestItem" cname="gtk_icon_view_get_drag_dest_item">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath**" name="path" />
          <parameter type="GtkIconViewDropPosition*" name="pos" />
        </parameters>
      </method>
      <method name="GetItemAtPos" cname="gtk_icon_view_get_item_at_pos">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="GtkTreePath**" name="path" />
          <parameter type="GtkCellRenderer**" name="cell" />
        </parameters>
      </method>
      <method name="GetItemWidth" cname="gtk_icon_view_get_item_width">
        <return-type type="gint" />
      </method>
      <method name="GetMargin" cname="gtk_icon_view_get_margin">
        <return-type type="gint" />
      </method>
      <method name="GetMarkupColumn" cname="gtk_icon_view_get_markup_column">
        <return-type type="gint" />
      </method>
      <method name="GetModel" cname="gtk_icon_view_get_model">
        <return-type type="GtkTreeModel*" />
      </method>
      <method name="GetOrientation" cname="gtk_icon_view_get_orientation">
        <return-type type="GtkOrientation" />
      </method>
      <method name="GetPathAtPos" cname="gtk_icon_view_get_path_at_pos">
        <return-type type="GtkTreePath*" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="GetPixbufColumn" cname="gtk_icon_view_get_pixbuf_column">
        <return-type type="gint" />
      </method>
      <method name="GetReorderable" cname="gtk_icon_view_get_reorderable">
        <return-type type="gboolean" />
      </method>
      <method name="GetRowSpacing" cname="gtk_icon_view_get_row_spacing">
        <return-type type="gint" />
      </method>
      <method name="GetSelectedItems" cname="gtk_icon_view_get_selected_items">
        <return-type type="GList*" />
      </method>
      <method name="GetSelectionMode" cname="gtk_icon_view_get_selection_mode">
        <return-type type="GtkSelectionMode" />
      </method>
      <method name="GetSpacing" cname="gtk_icon_view_get_spacing">
        <return-type type="gint" />
      </method>
      <method name="GetTextColumn" cname="gtk_icon_view_get_text_column">
        <return-type type="gint" />
      </method>
      <method name="GetType" cname="gtk_icon_view_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVisibleRange" cname="gtk_icon_view_get_visible_range">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreePath**" name="start_path" />
          <parameter type="GtkTreePath**" name="end_path" />
        </parameters>
      </method>
      <method name="ItemActivated" cname="gtk_icon_view_item_activated">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
      <constructor cname="gtk_icon_view_new" />
      <constructor cname="gtk_icon_view_new_with_model">
        <parameters>
          <parameter type="GtkTreeModel*" name="model" />
        </parameters>
      </constructor>
      <method name="PathIsSelected" cname="gtk_icon_view_path_is_selected">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
      <method name="ScrollToPath" cname="gtk_icon_view_scroll_to_path">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="gboolean" name="use_align" />
          <parameter type="gfloat" name="row_align" />
          <parameter type="gfloat" name="col_align" />
        </parameters>
      </method>
      <method name="SelectAll" cname="gtk_icon_view_select_all">
        <return-type type="void" />
      </method>
      <method name="SelectPath" cname="gtk_icon_view_select_path">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
      <method name="SelectedForeach" cname="gtk_icon_view_selected_foreach">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkIconViewForeachFunc" name="func" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="SetColumnSpacing" cname="gtk_icon_view_set_column_spacing">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="column_spacing" />
        </parameters>
      </method>
      <method name="SetColumns" cname="gtk_icon_view_set_columns">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="columns" />
        </parameters>
      </method>
      <method name="SetCursor" cname="gtk_icon_view_set_cursor">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter type="gboolean" name="start_editing" />
        </parameters>
      </method>
      <method name="SetDragDestItem" cname="gtk_icon_view_set_drag_dest_item">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkIconViewDropPosition" name="pos" />
        </parameters>
      </method>
      <method name="SetItemWidth" cname="gtk_icon_view_set_item_width">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="item_width" />
        </parameters>
      </method>
      <method name="SetMargin" cname="gtk_icon_view_set_margin">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="margin" />
        </parameters>
      </method>
      <method name="SetMarkupColumn" cname="gtk_icon_view_set_markup_column">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="column" />
        </parameters>
      </method>
      <method name="SetModel" cname="gtk_icon_view_set_model">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeModel*" name="model" />
        </parameters>
      </method>
      <method name="SetOrientation" cname="gtk_icon_view_set_orientation">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkOrientation" name="orientation" />
        </parameters>
      </method>
      <method name="SetPixbufColumn" cname="gtk_icon_view_set_pixbuf_column">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="column" />
        </parameters>
      </method>
      <method name="SetReorderable" cname="gtk_icon_view_set_reorderable">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="reorderable" />
        </parameters>
      </method>
      <method name="SetRowSpacing" cname="gtk_icon_view_set_row_spacing">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="row_spacing" />
        </parameters>
      </method>
      <method name="SetSelectionMode" cname="gtk_icon_view_set_selection_mode">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkSelectionMode" name="mode" />
        </parameters>
      </method>
      <method name="SetSpacing" cname="gtk_icon_view_set_spacing">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="spacing" />
        </parameters>
      </method>
      <method name="SetTextColumn" cname="gtk_icon_view_set_text_column">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="column" />
        </parameters>
      </method>
      <method name="UnselectAll" cname="gtk_icon_view_unselect_all">
        <return-type type="void" />
      </method>
      <method name="UnselectPath" cname="gtk_icon_view_unselect_path">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
      <method name="UnsetModelDragDest" cname="gtk_icon_view_unset_model_drag_dest">
        <return-type type="void" />
      </method>
      <method name="UnsetModelDragSource" cname="gtk_icon_view_unset_model_drag_source">
        <return-type type="void" />
      </method>
    </object>
    <object name="Image" cname="GtkImage" parent="GtkMisc">
      <field name="StorageType" cname="storage_type" type="GtkImageType" />
      <field name="Pixmap" cname="pixmap" type="union{GtkImagePixmapData" />
      <field name="Image" cname="image" type="GtkImageImageData" />
      <field name="Pixbuf" cname="pixbuf" type="GtkImagePixbufData" />
      <field name="Stock" cname="stock" type="GtkImageStockData" />
      <field name="IconSet" cname="icon_set" type="GtkImageIconSetData" />
      <field name="Anim" cname="anim" type="GtkImageAnimationData" />
      <field name="Name" cname="name" type="GtkImageIconNameData" />
      <field name="Data" cname="data" type="}" />
      <field name="Mask" cname="mask" type="GdkBitmap*" />
      <field name="IconSize" cname="icon_size" type="GtkIconSize" />
      <method name="Clear" cname="gtk_image_clear">
        <return-type type="void" />
      </method>
      <method name="Get" cname="gtk_image_get" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkImage**" name="val" />
          <parameter type="GdkBitmap**" name="mask" />
        </parameters>
      </method>
      <method name="GetAnimation" cname="gtk_image_get_animation">
        <return-type type="GdkPixbufAnimation*" />
      </method>
      <method name="GetIconName" cname="gtk_image_get_icon_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar**" pass_as="out" name="icon_name" />
          <parameter type="GtkIconSize*" name="size" />
        </parameters>
      </method>
      <method name="GetIconSet" cname="gtk_image_get_icon_set">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkIconSet**" name="icon_set" />
          <parameter type="GtkIconSize*" name="size" />
        </parameters>
      </method>
      <method name="GetImage" cname="gtk_image_get_image">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkImage**" name="gdk_image" />
          <parameter type="GdkBitmap**" name="mask" />
        </parameters>
      </method>
      <method name="GetPixbuf" cname="gtk_image_get_pixbuf">
        <return-type type="GdkPixbuf*" />
      </method>
      <method name="GetPixelSize" cname="gtk_image_get_pixel_size">
        <return-type type="gint" />
      </method>
      <method name="GetPixmap" cname="gtk_image_get_pixmap">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixmap**" name="pixmap" />
          <parameter type="GdkBitmap**" name="mask" />
        </parameters>
      </method>
      <method name="GetStock" cname="gtk_image_get_stock">
        <return-type type="void" />
        <parameters>
          <parameter type="gchar**" name="stock_id" />
          <parameter type="GtkIconSize*" name="size" />
        </parameters>
      </method>
      <method name="GetStorageType" cname="gtk_image_get_storage_type">
        <return-type type="GtkImageType" />
      </method>
      <method name="GetType" cname="gtk_image_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_image_new" />
      <constructor cname="gtk_image_new_from_animation">
        <parameters>
          <parameter type="GdkPixbufAnimation*" name="animation" />
        </parameters>
      </constructor>
      <constructor cname="gtk_image_new_from_file">
        <parameters>
          <parameter type="const-gchar*" name="filename" />
        </parameters>
      </constructor>
      <constructor cname="gtk_image_new_from_icon_name">
        <parameters>
          <parameter type="const-gchar*" name="icon_name" />
          <parameter type="GtkIconSize" name="size" />
        </parameters>
      </constructor>
      <constructor cname="gtk_image_new_from_icon_set">
        <parameters>
          <parameter type="GtkIconSet*" name="icon_set" />
          <parameter type="GtkIconSize" name="size" />
        </parameters>
      </constructor>
      <constructor cname="gtk_image_new_from_image">
        <parameters>
          <parameter type="GdkImage*" name="image" />
          <parameter type="GdkBitmap*" name="mask" />
        </parameters>
      </constructor>
      <constructor cname="gtk_image_new_from_pixbuf">
        <parameters>
          <parameter type="GdkPixbuf*" name="pixbuf" />
        </parameters>
      </constructor>
      <constructor cname="gtk_image_new_from_pixmap">
        <parameters>
          <parameter type="GdkPixmap*" name="pixmap" />
          <parameter type="GdkBitmap*" name="mask" />
        </parameters>
      </constructor>
      <constructor cname="gtk_image_new_from_stock">
        <parameters>
          <parameter type="const-gchar*" name="stock_id" />
          <parameter type="GtkIconSize" name="size" />
        </parameters>
      </constructor>
      <method name="Set" cname="gtk_image_set" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkImage*" name="val" />
          <parameter type="GdkBitmap*" name="mask" />
        </parameters>
      </method>
      <method name="SetFromAnimation" cname="gtk_image_set_from_animation">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixbufAnimation*" name="animation" />
        </parameters>
      </method>
      <method name="SetFromFile" cname="gtk_image_set_from_file">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
        </parameters>
      </method>
      <method name="SetFromIconName" cname="gtk_image_set_from_icon_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="icon_name" />
          <parameter type="GtkIconSize" name="size" />
        </parameters>
      </method>
      <method name="SetFromIconSet" cname="gtk_image_set_from_icon_set">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkIconSet*" name="icon_set" />
          <parameter type="GtkIconSize" name="size" />
        </parameters>
      </method>
      <method name="SetFromImage" cname="gtk_image_set_from_image">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkImage*" name="gdk_image" />
          <parameter type="GdkBitmap*" name="mask" />
        </parameters>
      </method>
      <method name="SetFromPixbuf" cname="gtk_image_set_from_pixbuf">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixbuf*" name="pixbuf" />
        </parameters>
      </method>
      <method name="SetFromPixmap" cname="gtk_image_set_from_pixmap">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixmap*" name="pixmap" />
          <parameter type="GdkBitmap*" name="mask" />
        </parameters>
      </method>
      <method name="SetFromStock" cname="gtk_image_set_from_stock">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="stock_id" />
          <parameter type="GtkIconSize" name="size" />
        </parameters>
      </method>
      <method name="SetPixelSize" cname="gtk_image_set_pixel_size">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="pixel_size" />
        </parameters>
      </method>
    </object>
    <object name="ImageMenuItem" cname="GtkImageMenuItem" parent="GtkMenuItem">
      <field name="Image" cname="image" type="GtkWidget*" />
      <method name="GetImage" cname="gtk_image_menu_item_get_image">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetType" cname="gtk_image_menu_item_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_image_menu_item_new" />
      <constructor cname="gtk_image_menu_item_new_from_stock">
        <parameters>
          <parameter type="const-gchar*" name="stock_id" />
          <parameter type="GtkAccelGroup*" name="accel_group" />
        </parameters>
      </constructor>
      <constructor cname="gtk_image_menu_item_new_with_label">
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <constructor cname="gtk_image_menu_item_new_with_mnemonic">
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <method name="SetImage" cname="gtk_image_menu_item_set_image">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="image" />
        </parameters>
      </method>
    </object>
    <object name="IMContext" cname="GtkIMContext" parent="GObject">
      <method name="DeleteSurrounding" cname="gtk_im_context_delete_surrounding">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="offset" />
          <parameter type="gint" name="n_chars" />
        </parameters>
      </method>
      <method name="FilterKeypress" cname="gtk_im_context_filter_keypress">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkEventKey*" name="event" />
        </parameters>
      </method>
      <method name="FocusIn" cname="gtk_im_context_focus_in">
        <return-type type="void" />
      </method>
      <method name="FocusOut" cname="gtk_im_context_focus_out">
        <return-type type="void" />
      </method>
      <method name="GetPreeditString" cname="gtk_im_context_get_preedit_string">
        <return-type type="void" />
        <parameters>
          <parameter type="gchar**" name="str" />
          <parameter type="PangoAttrList**" name="attrs" />
          <parameter type="gint*" name="cursor_pos" />
        </parameters>
      </method>
      <method name="GetSurrounding" cname="gtk_im_context_get_surrounding">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gchar**" name="text" />
          <parameter type="gint*" name="cursor_index" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_im_context_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Reset" cname="gtk_im_context_reset">
        <return-type type="void" />
      </method>
      <method name="SetClientWindow" cname="gtk_im_context_set_client_window">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
        </parameters>
      </method>
      <method name="SetCursorLocation" cname="gtk_im_context_set_cursor_location">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRectangle*" name="area" />
        </parameters>
      </method>
      <method name="SetSurrounding" cname="gtk_im_context_set_surrounding">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
          <parameter type="gint" name="len" />
          <parameter type="gint" name="cursor_index" />
        </parameters>
      </method>
      <method name="SetUsePreedit" cname="gtk_im_context_set_use_preedit">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="use_preedit" />
        </parameters>
      </method>
    </object>
    <object name="IMContextSimple" cname="GtkIMContextSimple" parent="GtkIMContext">
      <field name="Tables" cname="tables" type="GSList*" />
      <field name="ComposeBuffer" cname="compose_buffer" array_len="GTK_MAX_COMPOSE_LEN + 1" type="guint" />
      <field name="TentativeMatch" cname="tentative_match" type="gunichar" />
      <field name="TentativeMatchLen" cname="tentative_match_len" type="gint" />
      <field name="InHexSequence" cname="in_hex_sequence" bits="1" type="guint" />
      <field name="ModifiersDropped" cname="modifiers_dropped" bits="1" type="guint" />
      <method name="AddTable" cname="gtk_im_context_simple_add_table">
        <return-type type="void" />
        <parameters>
          <parameter type="guint16*" name="data" />
          <parameter type="gint" name="max_seq_len" />
          <parameter type="gint" name="n_seqs" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_im_context_simple_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_im_context_simple_new" />
    </object>
    <object name="IMMulticontext" cname="GtkIMMulticontext" parent="GtkIMContext">
      <field name="Slave" cname="slave" type="GtkIMContext*" />
      <field name="Priv" cname="priv" type="GtkIMMulticontextPrivate*" />
      <field name="ContextId" cname="context_id" type="const-gchar*" />
      <method name="AppendMenuitems" cname="gtk_im_multicontext_append_menuitems">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkMenuShell*" name="menushell" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_im_multicontext_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_im_multicontext_new" />
    </object>
    <object name="InputDialog" cname="GtkInputDialog" parent="GtkDialog">
      <field name="AxisList" cname="axis_list" type="GtkWidget*" />
      <field name="AxisListbox" cname="axis_listbox" type="GtkWidget*" />
      <field name="ModeOptionmenu" cname="mode_optionmenu" type="GtkWidget*" />
      <field name="CloseButton" cname="close_button" type="GtkWidget*" />
      <field name="SaveButton" cname="save_button" type="GtkWidget*" />
      <field name="AxisItems" cname="axis_items" array_len="GDK_AXIS_LAST" type="GtkWidget*" />
      <field name="CurrentDevice" cname="current_device" type="GdkDevice*" />
      <field name="KeysList" cname="keys_list" type="GtkWidget*" />
      <field name="KeysListbox" cname="keys_listbox" type="GtkWidget*" />
      <method name="GetType" cname="gtk_input_dialog_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_input_dialog_new" />
    </object>
    <object name="Invisible" cname="GtkInvisible" parent="GtkWidget">
      <field name="HasUserRefCount" cname="has_user_ref_count" type="gboolean" />
      <field name="Screen" cname="screen" type="GdkScreen*" />
      <method name="GetScreen" cname="gtk_invisible_get_screen">
        <return-type type="GdkScreen*" />
      </method>
      <method name="GetType" cname="gtk_invisible_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_invisible_new" />
      <constructor cname="gtk_invisible_new_for_screen">
        <parameters>
          <parameter type="GdkScreen*" name="screen" />
        </parameters>
      </constructor>
      <method name="SetScreen" cname="gtk_invisible_set_screen">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkScreen*" name="screen" />
        </parameters>
      </method>
    </object>
    <object name="Item" cname="GtkItem" parent="GtkBin">
      <method name="Deselect" cname="gtk_item_deselect">
        <return-type type="void" />
      </method>
      <method name="FactoriesPathDelete" cname="gtk_item_factories_path_delete" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="ifactory_path" />
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_item_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Select" cname="gtk_item_select">
        <return-type type="void" />
      </method>
      <method name="Toggle" cname="gtk_item_toggle">
        <return-type type="void" />
      </method>
    </object>
    <object name="ItemFactory" cname="GtkItemFactory" deprecated="1" parent="GtkObject">
      <field name="Path" cname="path" type="gchar*" />
      <field name="AccelGroup" cname="accel_group" type="GtkAccelGroup*" />
      <field name="Widget" cname="widget" type="GtkWidget*" />
      <field name="Items" cname="items" type="GSList*" />
      <field name="TranslateFunc" cname="translate_func" type="GtkTranslateFunc" />
      <field name="TranslateData" cname="translate_data" type="gpointer" />
      <field name="TranslateNotify" cname="translate_notify" type="GtkDestroyNotify" />
      <method name="AddForeign" cname="gtk_item_factory_add_foreign" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="accel_widget" />
          <parameter type="const-gchar*" name="full_path" />
          <parameter type="GtkAccelGroup*" name="accel_group" />
          <parameter type="guint" name="keyval" />
          <parameter type="GdkModifierType" name="modifiers" />
        </parameters>
      </method>
      <method name="Construct" cname="gtk_item_factory_construct" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GType" name="container_type" />
          <parameter type="const-gchar*" name="path" />
          <parameter type="GtkAccelGroup*" name="accel_group" />
        </parameters>
      </method>
      <method name="CreateItem" cname="gtk_item_factory_create_item" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkItemFactoryEntry*" name="entry" />
          <parameter type="gpointer" name="callback_data" />
          <parameter type="guint" name="callback_type" />
        </parameters>
      </method>
      <method name="CreateItems" cname="gtk_item_factory_create_items" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="n_entries" />
          <parameter type="GtkItemFactoryEntry*" name="entries" />
          <parameter type="gpointer" name="callback_data" />
        </parameters>
      </method>
      <method name="CreateItemsAc" cname="gtk_item_factory_create_items_ac" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="n_entries" />
          <parameter type="GtkItemFactoryEntry*" name="entries" />
          <parameter type="gpointer" name="callback_data" />
          <parameter type="guint" name="callback_type" />
        </parameters>
      </method>
      <method name="CreateMenuEntries" cname="gtk_item_factory_create_menu_entries" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="n_entries" />
          <parameter type="GtkMenuEntry*" name="entries" />
        </parameters>
      </method>
      <method name="DeleteEntries" cname="gtk_item_factory_delete_entries" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="n_entries" />
          <parameter type="GtkItemFactoryEntry*" name="entries" />
        </parameters>
      </method>
      <method name="DeleteEntry" cname="gtk_item_factory_delete_entry" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkItemFactoryEntry*" name="entry" />
        </parameters>
      </method>
      <method name="DeleteItem" cname="gtk_item_factory_delete_item" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="FromPath" cname="gtk_item_factory_from_path" deprecated="1" shared="true">
        <return-type type="GtkItemFactory*" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="FromWidget" cname="gtk_item_factory_from_widget" deprecated="1" shared="true">
        <return-type type="GtkItemFactory*" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="GetItem" cname="gtk_item_factory_get_item" deprecated="1">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="GetItemByAction" cname="gtk_item_factory_get_item_by_action" deprecated="1">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="guint" name="action" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_item_factory_get_type" deprecated="1" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetWidget" cname="gtk_item_factory_get_widget" deprecated="1">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="GetWidgetByAction" cname="gtk_item_factory_get_widget_by_action" deprecated="1">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="guint" name="action" />
        </parameters>
      </method>
      <constructor cname="gtk_item_factory_new" deprecated="1">
        <parameters>
          <parameter type="GType" name="container_type" />
          <parameter type="const-gchar*" name="path" />
          <parameter type="GtkAccelGroup*" name="accel_group" />
        </parameters>
      </constructor>
      <method name="PathFromWidget" cname="gtk_item_factory_path_from_widget" deprecated="1" shared="true">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="Popup" cname="gtk_item_factory_popup" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="x" />
          <parameter type="guint" name="y" />
          <parameter type="guint" name="mouse_button" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="PopupData" cname="gtk_item_factory_popup_data" deprecated="1">
        <return-type type="gpointer" />
      </method>
      <method name="PopupDataFromWidget" cname="gtk_item_factory_popup_data_from_widget" deprecated="1" shared="true">
        <return-type type="gpointer" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="PopupWithData" cname="gtk_item_factory_popup_with_data" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="popup_data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
          <parameter type="guint" name="x" />
          <parameter type="guint" name="y" />
          <parameter type="guint" name="mouse_button" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="SetTranslateFunc" cname="gtk_item_factory_set_translate_func" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTranslateFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="notify" />
        </parameters>
      </method>
    </object>
    <object name="Label" cname="GtkLabel" parent="GtkMisc">
      <field name="Label" cname="label" type="gchar*" />
      <field name="Jtype" cname="jtype" bits="2" type="guint" />
      <field name="Wrap" cname="wrap" bits="1" type="guint" />
      <field name="UseUnderline" cname="use_underline" bits="1" type="guint" />
      <field name="UseMarkup" cname="use_markup" bits="1" type="guint" />
      <field name="Ellipsize" cname="ellipsize" bits="3" type="guint" />
      <field name="SingleLineMode" cname="single_line_mode" bits="1" type="guint" />
      <field name="HaveTransform" cname="have_transform" bits="1" type="guint" />
      <field name="InClick" cname="in_click" bits="1" type="guint" />
      <field name="WrapMode" cname="wrap_mode" bits="3" type="guint" />
      <field name="MnemonicKeyval" cname="mnemonic_keyval" type="guint" />
      <field name="Text" cname="text" type="gchar*" />
      <field name="Attrs" cname="attrs" type="PangoAttrList*" />
      <field name="EffectiveAttrs" cname="effective_attrs" type="PangoAttrList*" />
      <field name="Layout" cname="layout" type="PangoLayout*" />
      <field name="MnemonicWidget" cname="mnemonic_widget" type="GtkWidget*" />
      <field name="MnemonicWindow" cname="mnemonic_window" type="GtkWindow*" />
      <field name="SelectInfo" cname="select_info" type="GtkLabelSelectionInfo*" />
      <method name="Get" cname="gtk_label_get" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gchar**" name="str" />
        </parameters>
      </method>
      <method name="GetAngle" cname="gtk_label_get_angle">
        <return-type type="gdouble" />
      </method>
      <method name="GetAttributes" cname="gtk_label_get_attributes">
        <return-type type="PangoAttrList*" />
      </method>
      <method name="GetEllipsize" cname="gtk_label_get_ellipsize">
        <return-type type="PangoEllipsizeMode" />
      </method>
      <method name="GetJustify" cname="gtk_label_get_justify">
        <return-type type="GtkJustification" />
      </method>
      <method name="GetLabel" cname="gtk_label_get_label">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetLayout" cname="gtk_label_get_layout">
        <return-type type="PangoLayout*" />
      </method>
      <method name="GetLayoutOffsets" cname="gtk_label_get_layout_offsets">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
        </parameters>
      </method>
      <method name="GetLineWrap" cname="gtk_label_get_line_wrap">
        <return-type type="gboolean" />
      </method>
      <method name="GetLineWrapMode" cname="gtk_label_get_line_wrap_mode">
        <return-type type="PangoWrapMode" />
      </method>
      <method name="GetMaxWidthChars" cname="gtk_label_get_max_width_chars">
        <return-type type="gint" />
      </method>
      <method name="GetMnemonicKeyval" cname="gtk_label_get_mnemonic_keyval">
        <return-type type="guint" />
      </method>
      <method name="GetMnemonicWidget" cname="gtk_label_get_mnemonic_widget">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetSelectable" cname="gtk_label_get_selectable">
        <return-type type="gboolean" />
      </method>
      <method name="GetSelectionBounds" cname="gtk_label_get_selection_bounds">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint*" name="start" />
          <parameter type="gint*" name="end" />
        </parameters>
      </method>
      <method name="GetSingleLineMode" cname="gtk_label_get_single_line_mode">
        <return-type type="gboolean" />
      </method>
      <method name="GetText" cname="gtk_label_get_text">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gtk_label_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUseMarkup" cname="gtk_label_get_use_markup">
        <return-type type="gboolean" />
      </method>
      <method name="GetUseUnderline" cname="gtk_label_get_use_underline">
        <return-type type="gboolean" />
      </method>
      <method name="GetWidthChars" cname="gtk_label_get_width_chars">
        <return-type type="gint" />
      </method>
      <constructor cname="gtk_label_new">
        <parameters>
          <parameter type="const-gchar*" name="str" />
        </parameters>
      </constructor>
      <constructor cname="gtk_label_new_with_mnemonic">
        <parameters>
          <parameter type="const-gchar*" name="str" />
        </parameters>
      </constructor>
      <method name="ParseUline" cname="gtk_label_parse_uline" deprecated="1">
        <return-type type="guint" />
        <parameters>
          <parameter type="const-gchar*" name="string" />
        </parameters>
      </method>
      <method name="SelectRegion" cname="gtk_label_select_region">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="start_offset" />
          <parameter type="gint" name="end_offset" />
        </parameters>
      </method>
      <method name="SetAngle" cname="gtk_label_set_angle">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="angle" />
        </parameters>
      </method>
      <method name="SetAttributes" cname="gtk_label_set_attributes">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoAttrList*" name="attrs" />
        </parameters>
      </method>
      <method name="SetEllipsize" cname="gtk_label_set_ellipsize">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoEllipsizeMode" name="mode" />
        </parameters>
      </method>
      <method name="SetJustify" cname="gtk_label_set_justify">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkJustification" name="jtype" />
        </parameters>
      </method>
      <method name="SetLabel" cname="gtk_label_set_label">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="str" />
        </parameters>
      </method>
      <method name="SetLineWrap" cname="gtk_label_set_line_wrap">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="wrap" />
        </parameters>
      </method>
      <method name="SetLineWrapMode" cname="gtk_label_set_line_wrap_mode">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoWrapMode" name="wrap_mode" />
        </parameters>
      </method>
      <method name="SetMarkup" cname="gtk_label_set_markup">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="str" />
        </parameters>
      </method>
      <method name="SetMarkupWithMnemonic" cname="gtk_label_set_markup_with_mnemonic">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="str" />
        </parameters>
      </method>
      <method name="SetMaxWidthChars" cname="gtk_label_set_max_width_chars">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="n_chars" />
        </parameters>
      </method>
      <method name="SetMnemonicWidget" cname="gtk_label_set_mnemonic_widget">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="SetPattern" cname="gtk_label_set_pattern">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="pattern" />
        </parameters>
      </method>
      <method name="SetSelectable" cname="gtk_label_set_selectable">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetSingleLineMode" cname="gtk_label_set_single_line_mode">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="single_line_mode" />
        </parameters>
      </method>
      <method name="SetText" cname="gtk_label_set_text">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="str" />
        </parameters>
      </method>
      <method name="SetTextWithMnemonic" cname="gtk_label_set_text_with_mnemonic">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="str" />
        </parameters>
      </method>
      <method name="SetUseMarkup" cname="gtk_label_set_use_markup">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetUseUnderline" cname="gtk_label_set_use_underline">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetWidthChars" cname="gtk_label_set_width_chars">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="n_chars" />
        </parameters>
      </method>
    </object>
    <object name="Layout" cname="GtkLayout" parent="GtkContainer">
      <field name="Children" cname="children" type="GList*" />
      <field name="Width" cname="width" type="guint" />
      <field name="Height" cname="height" type="guint" />
      <field name="Hadjustment" cname="hadjustment" type="GtkAdjustment*" />
      <field name="Vadjustment" cname="vadjustment" type="GtkAdjustment*" />
      <field name="BinWindow" cname="bin_window" type="GdkWindow*" access="public" />
      <field name="Visibility" cname="visibility" type="GdkVisibilityState" />
      <field name="ScrollX" cname="scroll_x" type="gint" />
      <field name="ScrollY" cname="scroll_y" type="gint" />
      <field name="FreezeCount" cname="freeze_count" type="guint" />
      <method name="Freeze" cname="gtk_layout_freeze" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="GetHadjustment" cname="gtk_layout_get_hadjustment">
        <return-type type="GtkAdjustment*" />
      </method>
      <method name="GetSize" cname="gtk_layout_get_size">
        <return-type type="void" />
        <parameters>
          <parameter type="guint*" name="width" />
          <parameter type="guint*" name="height" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_layout_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVadjustment" cname="gtk_layout_get_vadjustment">
        <return-type type="GtkAdjustment*" />
      </method>
      <method name="Move" cname="gtk_layout_move">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child_widget" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <constructor cname="gtk_layout_new">
        <parameters>
          <parameter type="GtkAdjustment*" name="hadjustment" />
          <parameter type="GtkAdjustment*" name="vadjustment" />
        </parameters>
      </constructor>
      <method name="Put" cname="gtk_layout_put">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child_widget" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="SetHadjustment" cname="gtk_layout_set_hadjustment">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </method>
      <method name="SetSize" cname="gtk_layout_set_size">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="width" />
          <parameter type="guint" name="height" />
        </parameters>
      </method>
      <method name="SetVadjustment" cname="gtk_layout_set_vadjustment">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </method>
      <method name="Thaw" cname="gtk_layout_thaw" deprecated="1">
        <return-type type="void" />
      </method>
    </object>
    <object name="LinkButton" cname="GtkLinkButton" parent="GtkButton">
      <field name="Priv" cname="priv" type="GtkLinkButtonPrivate*" />
      <method name="GetType" cname="gtk_link_button_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUri" cname="gtk_link_button_get_uri">
        <return-type type="const-gchar*" />
      </method>
      <constructor cname="gtk_link_button_new">
        <parameters>
          <parameter type="const-gchar*" name="uri" />
        </parameters>
      </constructor>
      <constructor cname="gtk_link_button_new_with_label">
        <parameters>
          <parameter type="const-gchar*" name="uri" />
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <method name="SetUri" cname="gtk_link_button_set_uri">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="uri" />
        </parameters>
      </method>
      <method name="SetUriHook" cname="gtk_link_button_set_uri_hook" shared="true">
        <return-type type="GtkLinkButtonUriFunc" />
        <parameters>
          <parameter type="GtkLinkButtonUriFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GDestroyNotify" name="destroy" />
        </parameters>
      </method>
    </object>
    <object name="List" cname="GtkList" deprecated="1" parent="GtkContainer">
      <field name="Children" cname="children" type="GList*" />
      <field name="Selection" cname="selection" type="GList*" />
      <field name="UndoSelection" cname="undo_selection" type="GList*" />
      <field name="UndoUnselection" cname="undo_unselection" type="GList*" />
      <field name="LastFocusChild" cname="last_focus_child" type="GtkWidget*" />
      <field name="UndoFocusChild" cname="undo_focus_child" type="GtkWidget*" />
      <field name="Htimer" cname="htimer" type="guint" />
      <field name="Vtimer" cname="vtimer" type="guint" />
      <field name="Anchor" cname="anchor" type="gint" />
      <field name="DragPos" cname="drag_pos" type="gint" />
      <field name="AnchorState" cname="anchor_state" type="GtkStateType" />
      <field name="SelectionMode" cname="selection_mode" bits="2" type="guint" />
      <field name="DragSelection" cname="drag_selection" bits="1" type="guint" />
      <field name="AddMode" cname="add_mode" bits="1" type="guint" />
      <method name="AppendItems" cname="gtk_list_append_items" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GList*" name="items" />
        </parameters>
      </method>
      <method name="ChildPosition" cname="gtk_list_child_position" deprecated="1">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
        </parameters>
      </method>
      <method name="ClearItems" cname="gtk_list_clear_items" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="start" />
          <parameter type="gint" name="end" />
        </parameters>
      </method>
      <method name="EndDragSelection" cname="gtk_list_end_drag_selection" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="EndSelection" cname="gtk_list_end_selection" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="ExtendSelection" cname="gtk_list_extend_selection" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkScrollType" name="scroll_type" />
          <parameter type="gfloat" name="position" />
          <parameter type="gboolean" name="auto_start_selection" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_list_get_type" deprecated="1" shared="true">
        <return-type type="GtkType" />
      </method>
      <method name="InsertItems" cname="gtk_list_insert_items" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GList*" name="items" />
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <constructor cname="gtk_list_new" deprecated="1" />
      <method name="PrependItems" cname="gtk_list_prepend_items" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GList*" name="items" />
        </parameters>
      </method>
      <method name="RemoveItems" cname="gtk_list_remove_items" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GList*" name="items" />
        </parameters>
      </method>
      <method name="RemoveItemsNoUnref" cname="gtk_list_remove_items_no_unref" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GList*" name="items" />
        </parameters>
      </method>
      <method name="ScrollHorizontal" cname="gtk_list_scroll_horizontal" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkScrollType" name="scroll_type" />
          <parameter type="gfloat" name="position" />
        </parameters>
      </method>
      <method name="ScrollVertical" cname="gtk_list_scroll_vertical" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkScrollType" name="scroll_type" />
          <parameter type="gfloat" name="position" />
        </parameters>
      </method>
      <method name="SelectAll" cname="gtk_list_select_all" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="SelectChild" cname="gtk_list_select_child" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
        </parameters>
      </method>
      <method name="SelectItem" cname="gtk_list_select_item" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="item" />
        </parameters>
      </method>
      <method name="SetSelectionMode" cname="gtk_list_set_selection_mode" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkSelectionMode" name="mode" />
        </parameters>
      </method>
      <method name="StartSelection" cname="gtk_list_start_selection" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="ToggleAddMode" cname="gtk_list_toggle_add_mode" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="ToggleFocusRow" cname="gtk_list_toggle_focus_row" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="ToggleRow" cname="gtk_list_toggle_row" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="item" />
        </parameters>
      </method>
      <method name="UndoSelection" cname="gtk_list_undo_selection" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="UnselectAll" cname="gtk_list_unselect_all" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="UnselectChild" cname="gtk_list_unselect_child" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
        </parameters>
      </method>
      <method name="UnselectItem" cname="gtk_list_unselect_item" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="item" />
        </parameters>
      </method>
    </object>
    <object name="ListItem" cname="GtkListItem" deprecated="1" parent="GtkItem">
      <method name="Deselect" cname="gtk_list_item_deselect" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="GetType" cname="gtk_list_item_get_type" deprecated="1" shared="true">
        <return-type type="GtkType" />
      </method>
      <constructor cname="gtk_list_item_new" deprecated="1" />
      <constructor cname="gtk_list_item_new_with_label" deprecated="1">
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <method name="Select" cname="gtk_list_item_select" deprecated="1">
        <return-type type="void" />
      </method>
    </object>
    <object name="ListStore" cname="GtkListStore" parent="GObject">
      <field name="Stamp" cname="stamp" type="gint" />
      <field name="Seq" cname="seq" type="gpointer" />
      <field name="GtkReserved1" cname="_gtk_reserved1" type="gpointer" />
      <field name="SortList" cname="sort_list" type="GList*" />
      <field name="NColumns" cname="n_columns" type="gint" />
      <field name="SortColumnId" cname="sort_column_id" type="gint" />
      <field name="Order" cname="order" type="GtkSortType" />
      <field name="ColumnHeaders" cname="column_headers" type="GType*" />
      <field name="Length" cname="length" type="gint" />
      <field name="DefaultSortFunc" cname="default_sort_func" type="GtkTreeIterCompareFunc" />
      <field name="DefaultSortData" cname="default_sort_data" type="gpointer" />
      <field name="DefaultSortDestroy" cname="default_sort_destroy" type="GtkDestroyNotify" />
      <field name="ColumnsDirty" cname="columns_dirty" bits="1" type="guint" />
      <method name="Append" cname="gtk_list_store_append">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="Clear" cname="gtk_list_store_clear">
        <return-type type="void" />
      </method>
      <method name="GetType" cname="gtk_list_store_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Insert" cname="gtk_list_store_insert">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="InsertAfter" cname="gtk_list_store_insert_after">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="sibling" />
        </parameters>
      </method>
      <method name="InsertBefore" cname="gtk_list_store_insert_before">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="sibling" />
        </parameters>
      </method>
      <method name="InsertWithValues" cname="gtk_list_store_insert_with_values">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="gint" name="position" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="InsertWithValuesv" cname="gtk_list_store_insert_with_valuesv">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="gint" name="position" />
          <parameter type="gint*" name="columns" />
          <parameter type="GValue*" name="values" />
          <parameter type="gint" name="n_values" />
        </parameters>
      </method>
      <method name="IterIsValid" cname="gtk_list_store_iter_is_valid">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="MoveAfter" cname="gtk_list_store_move_after">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="position" />
        </parameters>
      </method>
      <method name="MoveBefore" cname="gtk_list_store_move_before">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="position" />
        </parameters>
      </method>
      <constructor cname="gtk_list_store_new">
        <parameters>
          <parameter type="gint" name="n_columns" />
          <parameter ellipsis="true" />
        </parameters>
      </constructor>
      <constructor cname="gtk_list_store_newv">
        <parameters>
          <parameter type="gint" name="n_columns" />
          <parameter type="GType*" name="types" />
        </parameters>
      </constructor>
      <method name="Prepend" cname="gtk_list_store_prepend">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="Remove" cname="gtk_list_store_remove">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="Reorder" cname="gtk_list_store_reorder">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="new_order" />
        </parameters>
      </method>
      <method name="Set" cname="gtk_list_store_set">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="SetColumnTypes" cname="gtk_list_store_set_column_types">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="n_columns" />
          <parameter type="GType*" name="types" />
        </parameters>
      </method>
      <method name="SetValist" cname="gtk_list_store_set_valist">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="va_list" name="var_args" />
        </parameters>
      </method>
      <method name="SetValue" cname="gtk_list_store_set_value">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="gint" name="column" />
          <parameter type="GValue*" name="value" />
        </parameters>
      </method>
      <method name="Swap" cname="gtk_list_store_swap">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="a" />
          <parameter type="GtkTreeIter*" name="b" />
        </parameters>
      </method>
    </object>
    <object name="Menu" cname="GtkMenu" parent="GtkMenuShell">
      <field name="ParentMenuItem" cname="parent_menu_item" type="GtkWidget*" />
      <field name="OldActiveMenuItem" cname="old_active_menu_item" type="GtkWidget*" />
      <field name="AccelGroup" cname="accel_group" type="GtkAccelGroup*" />
      <field name="AccelPath" cname="accel_path" type="gchar*" />
      <field name="PositionFunc" cname="position_func" type="GtkMenuPositionFunc" />
      <field name="PositionFuncData" cname="position_func_data" type="gpointer" />
      <field name="ToggleSize" cname="toggle_size" type="guint" />
      <field name="Toplevel" cname="toplevel" type="GtkWidget*" />
      <field name="TearoffWindow" cname="tearoff_window" type="GtkWidget*" />
      <field name="TearoffHbox" cname="tearoff_hbox" type="GtkWidget*" />
      <field name="TearoffScrollbar" cname="tearoff_scrollbar" type="GtkWidget*" />
      <field name="TearoffAdjustment" cname="tearoff_adjustment" type="GtkAdjustment*" />
      <field name="ViewWindow" cname="view_window" type="GdkWindow*" />
      <field name="BinWindow" cname="bin_window" type="GdkWindow*" />
      <field name="ScrollOffset" cname="scroll_offset" type="gint" />
      <field name="SavedScrollOffset" cname="saved_scroll_offset" type="gint" />
      <field name="ScrollStep" cname="scroll_step" type="gint" />
      <field name="TimeoutId" cname="timeout_id" type="guint" />
      <field name="NavigationRegion" cname="navigation_region" type="GdkRegion*" />
      <field name="NavigationTimeout" cname="navigation_timeout" type="guint" />
      <field name="NeedsDestructionRefCount" cname="needs_destruction_ref_count" bits="1" type="guint" />
      <field name="TornOff" cname="torn_off" bits="1" type="guint" />
      <field name="TearoffActive" cname="tearoff_active" bits="1" type="guint" />
      <field name="ScrollFast" cname="scroll_fast" bits="1" type="guint" />
      <field name="UpperArrowVisible" cname="upper_arrow_visible" bits="1" type="guint" />
      <field name="LowerArrowVisible" cname="lower_arrow_visible" bits="1" type="guint" />
      <field name="UpperArrowPrelight" cname="upper_arrow_prelight" bits="1" type="guint" />
      <field name="LowerArrowPrelight" cname="lower_arrow_prelight" bits="1" type="guint" />
      <method name="Attach" cname="gtk_menu_attach">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="guint" name="left_attach" />
          <parameter type="guint" name="right_attach" />
          <parameter type="guint" name="top_attach" />
          <parameter type="guint" name="bottom_attach" />
        </parameters>
      </method>
      <method name="AttachToWidget" cname="gtk_menu_attach_to_widget">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="attach_widget" />
          <parameter type="GtkMenuDetachFunc" name="detacher" />
        </parameters>
      </method>
      <method name="Detach" cname="gtk_menu_detach">
        <return-type type="void" />
      </method>
      <method name="GetAccelGroup" cname="gtk_menu_get_accel_group">
        <return-type type="GtkAccelGroup*" />
      </method>
      <method name="GetActive" cname="gtk_menu_get_active">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetAttachWidget" cname="gtk_menu_get_attach_widget">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetForAttachWidget" cname="gtk_menu_get_for_attach_widget" shared="true">
        <return-type type="GList*" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="GetTearoffState" cname="gtk_menu_get_tearoff_state">
        <return-type type="gboolean" />
      </method>
      <method name="GetTitle" cname="gtk_menu_get_title">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gtk_menu_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_menu_new" />
      <method name="Popdown" cname="gtk_menu_popdown">
        <return-type type="void" />
      </method>
      <method name="Popup" cname="gtk_menu_popup">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="parent_menu_shell" />
          <parameter type="GtkWidget*" name="parent_menu_item" />
          <parameter type="GtkMenuPositionFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="guint" name="button" />
          <parameter type="guint32" name="activate_time" />
        </parameters>
      </method>
      <method name="ReorderChild" cname="gtk_menu_reorder_child">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="Reposition" cname="gtk_menu_reposition">
        <return-type type="void" />
      </method>
      <method name="SetAccelGroup" cname="gtk_menu_set_accel_group">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAccelGroup*" name="accel_group" />
        </parameters>
      </method>
      <method name="SetAccelPath" cname="gtk_menu_set_accel_path">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="accel_path" />
        </parameters>
      </method>
      <method name="SetActive" cname="gtk_menu_set_active">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="index_" />
        </parameters>
      </method>
      <method name="SetMonitor" cname="gtk_menu_set_monitor">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="monitor_num" />
        </parameters>
      </method>
      <method name="SetScreen" cname="gtk_menu_set_screen">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkScreen*" name="screen" />
        </parameters>
      </method>
      <method name="SetTearoffState" cname="gtk_menu_set_tearoff_state">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="torn_off" />
        </parameters>
      </method>
      <method name="SetTitle" cname="gtk_menu_set_title">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="title" />
        </parameters>
      </method>
    </object>
    <object name="MenuBar" cname="GtkMenuBar" parent="GtkMenuShell">
      <method name="GetChildPackDirection" cname="gtk_menu_bar_get_child_pack_direction">
        <return-type type="GtkPackDirection" />
      </method>
      <method name="GetPackDirection" cname="gtk_menu_bar_get_pack_direction">
        <return-type type="GtkPackDirection" />
      </method>
      <method name="GetType" cname="gtk_menu_bar_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_menu_bar_new" />
      <method name="SetChildPackDirection" cname="gtk_menu_bar_set_child_pack_direction">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPackDirection" name="child_pack_dir" />
        </parameters>
      </method>
      <method name="SetPackDirection" cname="gtk_menu_bar_set_pack_direction">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPackDirection" name="pack_dir" />
        </parameters>
      </method>
    </object>
    <object name="MenuItem" cname="GtkMenuItem" parent="GtkItem">
      <field name="Submenu" cname="submenu" type="GtkWidget*" />
      <field name="EventWindow" cname="event_window" type="GdkWindow*" />
      <field name="ToggleSize" cname="toggle_size" type="guint16" />
      <field name="AcceleratorWidth" cname="accelerator_width" type="guint16" />
      <field name="AccelPath" cname="accel_path" type="gchar*" />
      <field name="ShowSubmenuIndicator" cname="show_submenu_indicator" bits="1" type="guint" />
      <field name="SubmenuPlacement" cname="submenu_placement" bits="1" type="guint" />
      <field name="SubmenuDirection" cname="submenu_direction" bits="1" type="guint" />
      <field name="RightJustify" cname="right_justify" bits="1" type="guint" />
      <field name="TimerFromKeypress" cname="timer_from_keypress" bits="1" type="guint" />
      <field name="FromMenubar" cname="from_menubar" bits="1" type="guint" />
      <field name="Timer" cname="timer" type="guint" />
      <method name="Activate" cname="gtk_menu_item_activate">
        <return-type type="void" />
      </method>
      <method name="Deselect" cname="gtk_menu_item_deselect">
        <return-type type="void" />
      </method>
      <method name="GetRightJustified" cname="gtk_menu_item_get_right_justified">
        <return-type type="gboolean" />
      </method>
      <method name="GetSubmenu" cname="gtk_menu_item_get_submenu">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetType" cname="gtk_menu_item_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_menu_item_new" />
      <constructor cname="gtk_menu_item_new_with_label">
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <constructor cname="gtk_menu_item_new_with_mnemonic">
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <method name="RemoveSubmenu" cname="gtk_menu_item_remove_submenu">
        <return-type type="void" />
      </method>
      <method name="Select" cname="gtk_menu_item_select">
        <return-type type="void" />
      </method>
      <method name="SetAccelPath" cname="gtk_menu_item_set_accel_path">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="accel_path" />
        </parameters>
      </method>
      <method name="SetRightJustified" cname="gtk_menu_item_set_right_justified">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="right_justified" />
        </parameters>
      </method>
      <method name="SetSubmenu" cname="gtk_menu_item_set_submenu">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="submenu" />
        </parameters>
      </method>
      <method name="ToggleSizeAllocate" cname="gtk_menu_item_toggle_size_allocate">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="allocation" />
        </parameters>
      </method>
      <method name="ToggleSizeRequest" cname="gtk_menu_item_toggle_size_request">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="requisition" />
        </parameters>
      </method>
    </object>
    <object name="MenuShell" cname="GtkMenuShell" parent="GtkContainer">
      <field name="Children" cname="children" type="GList*" />
      <field name="ActiveMenuItem" cname="active_menu_item" type="GtkWidget*" />
      <field name="ParentMenuShell" cname="parent_menu_shell" type="GtkWidget*" />
      <field name="Button" cname="button" type="guint" />
      <field name="ActivateTime" cname="activate_time" type="guint32" />
      <field name="Active" cname="active" bits="1" type="guint" />
      <field name="HaveGrab" cname="have_grab" bits="1" type="guint" />
      <field name="HaveXgrab" cname="have_xgrab" bits="1" type="guint" />
      <field name="IgnoreLeave" cname="ignore_leave" bits="1" type="guint" />
      <field name="MenuFlag" cname="menu_flag" bits="1" type="guint" />
      <field name="IgnoreEnter" cname="ignore_enter" bits="1" type="guint" />
      <method name="ActivateItem" cname="gtk_menu_shell_activate_item">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="menu_item" />
          <parameter type="gboolean" name="force_deactivate" />
        </parameters>
      </method>
      <method name="Append" cname="gtk_menu_shell_append">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
        </parameters>
      </method>
      <method name="Cancel" cname="gtk_menu_shell_cancel">
        <return-type type="void" />
      </method>
      <method name="Deactivate" cname="gtk_menu_shell_deactivate">
        <return-type type="void" />
      </method>
      <method name="Deselect" cname="gtk_menu_shell_deselect">
        <return-type type="void" />
      </method>
      <method name="GetTakeFocus" cname="gtk_menu_shell_get_take_focus">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_menu_shell_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Insert" cname="gtk_menu_shell_insert">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="Prepend" cname="gtk_menu_shell_prepend">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
        </parameters>
      </method>
      <method name="SelectFirst" cname="gtk_menu_shell_select_first">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="search_sensitive" />
        </parameters>
      </method>
      <method name="SelectItem" cname="gtk_menu_shell_select_item">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="menu_item" />
        </parameters>
      </method>
      <method name="SetTakeFocus" cname="gtk_menu_shell_set_take_focus">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="take_focus" />
        </parameters>
      </method>
    </object>
    <object name="MenuToolButton" cname="GtkMenuToolButton" parent="GtkToolButton">
      <field name="Priv" cname="priv" type="GtkMenuToolButtonPrivate*" />
      <method name="GetMenu" cname="gtk_menu_tool_button_get_menu">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetType" cname="gtk_menu_tool_button_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_menu_tool_button_new">
        <parameters>
          <parameter type="GtkWidget*" name="icon_widget" />
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <constructor cname="gtk_menu_tool_button_new_from_stock">
        <parameters>
          <parameter type="const-gchar*" name="stock_id" />
        </parameters>
      </constructor>
      <method name="SetArrowTooltip" cname="gtk_menu_tool_button_set_arrow_tooltip">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTooltips*" name="tooltips" />
          <parameter type="const-gchar*" name="tip_text" />
          <parameter type="const-gchar*" name="tip_private" />
        </parameters>
      </method>
      <method name="SetMenu" cname="gtk_menu_tool_button_set_menu">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="menu" />
        </parameters>
      </method>
    </object>
    <object name="MessageDialog" cname="GtkMessageDialog" parent="GtkDialog">
      <field name="Image" cname="image" type="GtkWidget*" />
      <field name="Label" cname="label" type="GtkWidget*" />
      <method name="FormatSecondaryMarkup" cname="gtk_message_dialog_format_secondary_markup">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="message_format" printf_format="true" />
          <parameter ellipsis="true" printf_format_args="true" />
        </parameters>
      </method>
      <method name="FormatSecondaryText" cname="gtk_message_dialog_format_secondary_text">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="message_format" printf_format="true" />
          <parameter ellipsis="true" printf_format_args="true" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_message_dialog_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_message_dialog_new">
        <parameters>
          <parameter type="GtkWindow*" name="parent" />
          <parameter type="GtkDialogFlags" name="flags" />
          <parameter type="GtkMessageType" name="type" />
          <parameter type="GtkButtonsType" name="buttons" />
          <parameter type="const-gchar*" name="message_format" printf_format="true" />
          <parameter ellipsis="true" printf_format_args="true" />
        </parameters>
      </constructor>
      <constructor cname="gtk_message_dialog_new_with_markup">
        <parameters>
          <parameter type="GtkWindow*" name="parent" />
          <parameter type="GtkDialogFlags" name="flags" />
          <parameter type="GtkMessageType" name="type" />
          <parameter type="GtkButtonsType" name="buttons" />
          <parameter type="const-gchar*" name="message_format" printf_format="true" />
          <parameter ellipsis="true" printf_format_args="true" />
        </parameters>
      </constructor>
      <method name="SetImage" cname="gtk_message_dialog_set_image">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="image" />
        </parameters>
      </method>
      <method name="SetMarkup" cname="gtk_message_dialog_set_markup">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="str" />
        </parameters>
      </method>
    </object>
    <object name="Misc" cname="GtkMisc" parent="GtkWidget">
      <field name="Xalign" cname="xalign" type="gfloat" />
      <field name="Yalign" cname="yalign" type="gfloat" />
      <field name="Xpad" cname="xpad" type="guint16" />
      <field name="Ypad" cname="ypad" type="guint16" />
      <method name="GetAlignment" cname="gtk_misc_get_alignment">
        <return-type type="void" />
        <parameters>
          <parameter type="gfloat*" name="xalign" />
          <parameter type="gfloat*" name="yalign" />
        </parameters>
      </method>
      <method name="GetPadding" cname="gtk_misc_get_padding">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="xpad" />
          <parameter type="gint*" name="ypad" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_misc_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="SetAlignment" cname="gtk_misc_set_alignment">
        <return-type type="void" />
        <parameters>
          <parameter type="gfloat" name="xalign" />
          <parameter type="gfloat" name="yalign" />
        </parameters>
      </method>
      <method name="SetPadding" cname="gtk_misc_set_padding">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="xpad" />
          <parameter type="gint" name="ypad" />
        </parameters>
      </method>
    </object>
    <object name="Notebook" cname="GtkNotebook" parent="GtkContainer">
      <field name="CurPage" cname="cur_page" type="GtkNotebookPage*" />
      <field name="Children" cname="children" type="GList*" />
      <field name="FirstTab" cname="first_tab" type="GList*" />
      <field name="FocusTab" cname="focus_tab" type="GList*" />
      <field name="Menu" cname="menu" type="GtkWidget*" />
      <field name="EventWindow" cname="event_window" type="GdkWindow*" />
      <field name="Timer" cname="timer" type="guint32" />
      <field name="TabHborder" cname="tab_hborder" type="guint16" />
      <field name="TabVborder" cname="tab_vborder" type="guint16" />
      <field name="ShowTabs" cname="show_tabs" bits="1" type="guint" />
      <field name="Homogeneous" cname="homogeneous" bits="1" type="guint" />
      <field name="ShowBorder" cname="show_border" bits="1" type="guint" />
      <field name="TabPos" cname="tab_pos" bits="2" type="guint" />
      <field name="Scrollable" cname="scrollable" bits="1" type="guint" />
      <field name="InChild" cname="in_child" bits="3" type="guint" />
      <field name="ClickChild" cname="click_child" bits="3" type="guint" />
      <field name="Button" cname="button" bits="2" type="guint" />
      <field name="NeedTimer" cname="need_timer" bits="1" type="guint" />
      <field name="ChildHasFocus" cname="child_has_focus" bits="1" type="guint" />
      <field name="HaveVisibleChild" cname="have_visible_child" bits="1" type="guint" />
      <field name="FocusOut" cname="focus_out" bits="1" type="guint" />
      <field name="HasBeforePrevious" cname="has_before_previous" bits="1" type="guint" />
      <field name="HasBeforeNext" cname="has_before_next" bits="1" type="guint" />
      <field name="HasAfterPrevious" cname="has_after_previous" bits="1" type="guint" />
      <field name="HasAfterNext" cname="has_after_next" bits="1" type="guint" />
      <method name="AppendPage" cname="gtk_notebook_append_page">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="GtkWidget*" name="tab_label" />
        </parameters>
      </method>
      <method name="AppendPageMenu" cname="gtk_notebook_append_page_menu">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="GtkWidget*" name="tab_label" />
          <parameter type="GtkWidget*" name="menu_label" />
        </parameters>
      </method>
      <method name="GetCurrentPage" cname="gtk_notebook_get_current_page">
        <return-type type="gint" />
      </method>
      <method name="GetGroupId" cname="gtk_notebook_get_group_id">
        <return-type type="gint" />
      </method>
      <method name="GetMenuLabel" cname="gtk_notebook_get_menu_label">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
        </parameters>
      </method>
      <method name="GetMenuLabelText" cname="gtk_notebook_get_menu_label_text">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
        </parameters>
      </method>
      <method name="GetNPages" cname="gtk_notebook_get_n_pages">
        <return-type type="gint" />
      </method>
      <method name="GetNthPage" cname="gtk_notebook_get_nth_page">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="gint" name="page_num" />
        </parameters>
      </method>
      <method name="GetScrollable" cname="gtk_notebook_get_scrollable">
        <return-type type="gboolean" />
      </method>
      <method name="GetShowBorder" cname="gtk_notebook_get_show_border">
        <return-type type="gboolean" />
      </method>
      <method name="GetShowTabs" cname="gtk_notebook_get_show_tabs">
        <return-type type="gboolean" />
      </method>
      <method name="GetTabDetachable" cname="gtk_notebook_get_tab_detachable">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
        </parameters>
      </method>
      <method name="GetTabLabel" cname="gtk_notebook_get_tab_label">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
        </parameters>
      </method>
      <method name="GetTabLabelText" cname="gtk_notebook_get_tab_label_text">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
        </parameters>
      </method>
      <method name="GetTabPos" cname="gtk_notebook_get_tab_pos">
        <return-type type="GtkPositionType" />
      </method>
      <method name="GetTabReorderable" cname="gtk_notebook_get_tab_reorderable">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_notebook_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="InsertPage" cname="gtk_notebook_insert_page">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="GtkWidget*" name="tab_label" />
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="InsertPageMenu" cname="gtk_notebook_insert_page_menu">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="GtkWidget*" name="tab_label" />
          <parameter type="GtkWidget*" name="menu_label" />
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <constructor cname="gtk_notebook_new" />
      <method name="NextPage" cname="gtk_notebook_next_page">
        <return-type type="void" />
      </method>
      <method name="PopupDisable" cname="gtk_notebook_popup_disable">
        <return-type type="void" />
      </method>
      <method name="PopupEnable" cname="gtk_notebook_popup_enable">
        <return-type type="void" />
      </method>
      <method name="PrependPage" cname="gtk_notebook_prepend_page">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="GtkWidget*" name="tab_label" />
        </parameters>
      </method>
      <method name="PrependPageMenu" cname="gtk_notebook_prepend_page_menu">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="GtkWidget*" name="tab_label" />
          <parameter type="GtkWidget*" name="menu_label" />
        </parameters>
      </method>
      <method name="PrevPage" cname="gtk_notebook_prev_page">
        <return-type type="void" />
      </method>
      <method name="QueryTabLabelPacking" cname="gtk_notebook_query_tab_label_packing">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="gboolean*" name="expand" />
          <parameter type="gboolean*" name="fill" />
          <parameter type="GtkPackType*" name="pack_type" />
        </parameters>
      </method>
      <method name="RemovePage" cname="gtk_notebook_remove_page">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="page_num" />
        </parameters>
      </method>
      <method name="ReorderChild" cname="gtk_notebook_reorder_child">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="SetCurrentPage" cname="gtk_notebook_set_current_page">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="page_num" />
        </parameters>
      </method>
      <method name="SetGroupId" cname="gtk_notebook_set_group_id">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="group_id" />
        </parameters>
      </method>
      <method name="SetHomogeneousTabs" cname="gtk_notebook_set_homogeneous_tabs" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="homogeneous" />
        </parameters>
      </method>
      <method name="SetMenuLabel" cname="gtk_notebook_set_menu_label">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="GtkWidget*" name="menu_label" />
        </parameters>
      </method>
      <method name="SetMenuLabelText" cname="gtk_notebook_set_menu_label_text">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="const-gchar*" name="menu_text" />
        </parameters>
      </method>
      <method name="SetScrollable" cname="gtk_notebook_set_scrollable">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="scrollable" />
        </parameters>
      </method>
      <method name="SetShowBorder" cname="gtk_notebook_set_show_border">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="show_border" />
        </parameters>
      </method>
      <method name="SetShowTabs" cname="gtk_notebook_set_show_tabs">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="show_tabs" />
        </parameters>
      </method>
      <method name="SetTabBorder" cname="gtk_notebook_set_tab_border" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="border_width" />
        </parameters>
      </method>
      <method name="SetTabDetachable" cname="gtk_notebook_set_tab_detachable">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="gboolean" name="detachable" />
        </parameters>
      </method>
      <method name="SetTabHborder" cname="gtk_notebook_set_tab_hborder" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="tab_hborder" />
        </parameters>
      </method>
      <method name="SetTabLabel" cname="gtk_notebook_set_tab_label">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="GtkWidget*" name="tab_label" />
        </parameters>
      </method>
      <method name="SetTabLabelPacking" cname="gtk_notebook_set_tab_label_packing">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="gboolean" name="expand" />
          <parameter type="gboolean" name="fill" />
          <parameter type="GtkPackType" name="pack_type" />
        </parameters>
      </method>
      <method name="SetTabLabelText" cname="gtk_notebook_set_tab_label_text">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="const-gchar*" name="tab_text" />
        </parameters>
      </method>
      <method name="SetTabPos" cname="gtk_notebook_set_tab_pos">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPositionType" name="pos" />
        </parameters>
      </method>
      <method name="SetTabReorderable" cname="gtk_notebook_set_tab_reorderable">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="gboolean" name="reorderable" />
        </parameters>
      </method>
      <method name="SetTabVborder" cname="gtk_notebook_set_tab_vborder" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="tab_vborder" />
        </parameters>
      </method>
      <method name="SetWindowCreationHook" cname="gtk_notebook_set_window_creation_hook" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkNotebookWindowCreationFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GDestroyNotify" name="destroy" />
        </parameters>
      </method>
    </object>
    <object name="Object" cname="GtkObject" parent="GInitiallyUnowned">
      <field name="Flags" cname="flags" type="guint32" />
      <method name="AddArgType" cname="gtk_object_add_arg_type" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="arg_name" />
          <parameter type="GtkType" name="arg_type" />
          <parameter type="guint" name="arg_flags" />
          <parameter type="guint" name="arg_id" />
        </parameters>
      </method>
      <method name="Destroy" cname="gtk_object_destroy">
        <return-type type="void" />
      </method>
      <method name="Get" cname="gtk_object_get" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="first_property_name" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="GetData" cname="gtk_object_get_data" deprecated="1">
        <return-type type="gpointer" />
        <parameters>
          <parameter type="const-gchar*" name="key" />
        </parameters>
      </method>
      <method name="GetDataById" cname="gtk_object_get_data_by_id" deprecated="1">
        <return-type type="gpointer" />
        <parameters>
          <parameter type="GQuark" name="data_id" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_object_get_type" shared="true">
        <return-type type="GtkType" />
      </method>
      <method name="GetUserData" cname="gtk_object_get_user_data" deprecated="1">
        <return-type type="gpointer" />
      </method>
      <constructor cname="gtk_object_new" deprecated="1">
        <parameters>
          <parameter type="GtkType" name="type" />
          <parameter type="const-gchar*" name="first_property_name" />
          <parameter ellipsis="true" />
        </parameters>
      </constructor>
      <method name="Ref" cname="gtk_object_ref" deprecated="1">
        <return-type type="GtkObject*" />
      </method>
      <method name="RemoveData" cname="gtk_object_remove_data" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="key" />
        </parameters>
      </method>
      <method name="RemoveDataById" cname="gtk_object_remove_data_by_id" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GQuark" name="data_id" />
        </parameters>
      </method>
      <method name="RemoveNoNotify" cname="gtk_object_remove_no_notify" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="key" />
        </parameters>
      </method>
      <method name="RemoveNoNotifyById" cname="gtk_object_remove_no_notify_by_id" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GQuark" name="key_id" />
        </parameters>
      </method>
      <method name="Set" cname="gtk_object_set" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="first_property_name" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="SetData" cname="gtk_object_set_data" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="key" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="SetDataById" cname="gtk_object_set_data_by_id" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GQuark" name="data_id" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="SetDataByIdFull" cname="gtk_object_set_data_by_id_full" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GQuark" name="data_id" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="SetDataFull" cname="gtk_object_set_data_full" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="key" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="SetUserData" cname="gtk_object_set_user_data" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="Sink" cname="gtk_object_sink" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="Unref" cname="gtk_object_unref" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="Weakref" cname="gtk_object_weakref" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkDestroyNotify" name="notify" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="Weakunref" cname="gtk_object_weakunref" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkDestroyNotify" name="notify" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
    </object>
    <object name="OldEditable" cname="GtkOldEditable" deprecated="1" parent="GtkWidget">
      <field name="CurrentPos" cname="current_pos" type="guint" access="public" />
      <field name="SelectionStartPos" cname="selection_start_pos" type="guint" access="public" />
      <field name="SelectionEndPos" cname="selection_end_pos" type="guint" access="public" />
      <field name="HasSelection" cname="has_selection" bits="1" type="guint" access="public" />
      <field name="Editable" cname="editable" bits="1" type="guint" />
      <field name="Visible" cname="visible" bits="1" type="guint" />
      <field name="ClipboardText" cname="clipboard_text" type="gchar*" />
      <method name="Changed" cname="gtk_old_editable_changed" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="ClaimSelection" cname="gtk_old_editable_claim_selection" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="claim" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_old_editable_get_type" deprecated="1" shared="true">
        <return-type type="GtkType" />
      </method>
    </object>
    <object name="OptionMenu" cname="GtkOptionMenu" deprecated="1" parent="GtkButton">
      <field name="Menu" cname="menu" type="GtkWidget*" />
      <field name="MenuItem" cname="menu_item" type="GtkWidget*" />
      <field name="Width" cname="width" type="guint16" />
      <field name="Height" cname="height" type="guint16" />
      <method name="GetHistory" cname="gtk_option_menu_get_history" deprecated="1">
        <return-type type="gint" />
      </method>
      <method name="GetMenu" cname="gtk_option_menu_get_menu" deprecated="1">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetType" cname="gtk_option_menu_get_type" deprecated="1" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_option_menu_new" deprecated="1" />
      <method name="RemoveMenu" cname="gtk_option_menu_remove_menu" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="SetHistory" cname="gtk_option_menu_set_history" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="index_" />
        </parameters>
      </method>
      <method name="SetMenu" cname="gtk_option_menu_set_menu" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="menu" />
        </parameters>
      </method>
    </object>
    <object name="PageSetup" cname="GtkPageSetup">
      <method name="Copy" cname="gtk_page_setup_copy">
        <return-type type="GtkPageSetup*" owned="true" />
      </method>
      <method name="GetBottomMargin" cname="gtk_page_setup_get_bottom_margin">
        <return-type type="gdouble" />
        <parameters>
          <parameter type="GtkUnit" name="unit" />
        </parameters>
      </method>
      <method name="GetLeftMargin" cname="gtk_page_setup_get_left_margin">
        <return-type type="gdouble" />
        <parameters>
          <parameter type="GtkUnit" name="unit" />
        </parameters>
      </method>
      <method name="GetOrientation" cname="gtk_page_setup_get_orientation">
        <return-type type="GtkPageOrientation" />
      </method>
      <method name="GetPageHeight" cname="gtk_page_setup_get_page_height">
        <return-type type="gdouble" />
        <parameters>
          <parameter type="GtkUnit" name="unit" />
        </parameters>
      </method>
      <method name="GetPageWidth" cname="gtk_page_setup_get_page_width">
        <return-type type="gdouble" />
        <parameters>
          <parameter type="GtkUnit" name="unit" />
        </parameters>
      </method>
      <method name="GetPaperHeight" cname="gtk_page_setup_get_paper_height">
        <return-type type="gdouble" />
        <parameters>
          <parameter type="GtkUnit" name="unit" />
        </parameters>
      </method>
      <method name="GetPaperSize" cname="gtk_page_setup_get_paper_size">
        <return-type type="GtkPaperSize*" />
      </method>
      <method name="GetPaperWidth" cname="gtk_page_setup_get_paper_width">
        <return-type type="gdouble" />
        <parameters>
          <parameter type="GtkUnit" name="unit" />
        </parameters>
      </method>
      <method name="GetRightMargin" cname="gtk_page_setup_get_right_margin">
        <return-type type="gdouble" />
        <parameters>
          <parameter type="GtkUnit" name="unit" />
        </parameters>
      </method>
      <method name="GetTopMargin" cname="gtk_page_setup_get_top_margin">
        <return-type type="gdouble" />
        <parameters>
          <parameter type="GtkUnit" name="unit" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_page_setup_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_page_setup_new" />
      <method name="SetBottomMargin" cname="gtk_page_setup_set_bottom_margin">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="margin" />
          <parameter type="GtkUnit" name="unit" />
        </parameters>
      </method>
      <method name="SetLeftMargin" cname="gtk_page_setup_set_left_margin">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="margin" />
          <parameter type="GtkUnit" name="unit" />
        </parameters>
      </method>
      <method name="SetOrientation" cname="gtk_page_setup_set_orientation">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPageOrientation" name="orientation" />
        </parameters>
      </method>
      <method name="SetPaperSize" cname="gtk_page_setup_set_paper_size">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPaperSize*" name="size" />
        </parameters>
      </method>
      <method name="SetPaperSizeAndDefaultMargins" cname="gtk_page_setup_set_paper_size_and_default_margins">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPaperSize*" name="size" />
        </parameters>
      </method>
      <method name="SetRightMargin" cname="gtk_page_setup_set_right_margin">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="margin" />
          <parameter type="GtkUnit" name="unit" />
        </parameters>
      </method>
      <method name="SetTopMargin" cname="gtk_page_setup_set_top_margin">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="margin" />
          <parameter type="GtkUnit" name="unit" />
        </parameters>
      </method>
    </object>
    <object name="Paned" cname="GtkPaned" parent="GtkContainer">
      <field name="Child1" cname="child1" type="GtkWidget*" />
      <field name="Child2" cname="child2" type="GtkWidget*" />
      <field name="Handle" cname="handle" type="GdkWindow*" />
      <field name="XorGc" cname="xor_gc" type="GdkGC*" />
      <field name="CursorType" cname="cursor_type" type="GdkCursorType" />
      <field name="HandlePos" cname="handle_pos" type="GdkRectangle" />
      <field name="Child1Size" cname="child1_size" type="gint" />
      <field name="LastAllocation" cname="last_allocation" type="gint" />
      <field name="MinPosition" cname="min_position" type="gint" />
      <field name="MaxPosition" cname="max_position" type="gint" />
      <field name="PositionSet" cname="position_set" bits="1" type="guint" />
      <field name="InDrag" cname="in_drag" bits="1" type="guint" />
      <field name="Child1Shrink" cname="child1_shrink" bits="1" type="guint" />
      <field name="Child1Resize" cname="child1_resize" bits="1" type="guint" />
      <field name="Child2Shrink" cname="child2_shrink" bits="1" type="guint" />
      <field name="Child2Resize" cname="child2_resize" bits="1" type="guint" />
      <field name="Orientation" cname="orientation" bits="1" type="guint" />
      <field name="InRecursion" cname="in_recursion" bits="1" type="guint" />
      <field name="HandlePrelit" cname="handle_prelit" bits="1" type="guint" />
      <field name="LastChild1Focus" cname="last_child1_focus" type="GtkWidget*" />
      <field name="LastChild2Focus" cname="last_child2_focus" type="GtkWidget*" />
      <field name="Priv" cname="priv" type="GtkPanedPrivate*" />
      <field name="DragPos" cname="drag_pos" type="gint" />
      <field name="OriginalPosition" cname="original_position" type="gint" />
      <method name="Add1" cname="gtk_paned_add1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
        </parameters>
      </method>
      <method name="Add2" cname="gtk_paned_add2">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
        </parameters>
      </method>
      <method name="ComputePosition" cname="gtk_paned_compute_position" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="allocation" />
          <parameter type="gint" name="child1_req" />
          <parameter type="gint" name="child2_req" />
        </parameters>
      </method>
      <method name="GetChild1" cname="gtk_paned_get_child1">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetChild2" cname="gtk_paned_get_child2">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetPosition" cname="gtk_paned_get_position">
        <return-type type="gint" />
      </method>
      <method name="GetType" cname="gtk_paned_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Pack1" cname="gtk_paned_pack1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="gboolean" name="resize" />
          <parameter type="gboolean" name="shrink" />
        </parameters>
      </method>
      <method name="Pack2" cname="gtk_paned_pack2">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="gboolean" name="resize" />
          <parameter type="gboolean" name="shrink" />
        </parameters>
      </method>
      <method name="SetPosition" cname="gtk_paned_set_position">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="position" />
        </parameters>
      </method>
    </object>
    <object name="Pixmap" cname="GtkPixmap" deprecated="1" parent="GtkMisc">
      <field name="Pixmap" cname="pixmap" type="GdkPixmap*" />
      <field name="Mask" cname="mask" type="GdkBitmap*" />
      <field name="PixmapInsensitive" cname="pixmap_insensitive" type="GdkPixmap*" />
      <field name="BuildInsensitive" cname="build_insensitive" bits="1" type="guint" />
      <method name="Get" cname="gtk_pixmap_get" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixmap**" name="val" />
          <parameter type="GdkBitmap**" name="mask" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_pixmap_get_type" deprecated="1" shared="true">
        <return-type type="GtkType" />
      </method>
      <constructor cname="gtk_pixmap_new" deprecated="1">
        <parameters>
          <parameter type="GdkPixmap*" name="pixmap" />
          <parameter type="GdkBitmap*" name="mask" />
        </parameters>
      </constructor>
      <method name="Set" cname="gtk_pixmap_set" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixmap*" name="val" />
          <parameter type="GdkBitmap*" name="mask" />
        </parameters>
      </method>
      <method name="SetBuildInsensitive" cname="gtk_pixmap_set_build_insensitive" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="build" />
        </parameters>
      </method>
    </object>
    <object name="Plug" cname="GtkPlug" parent="GtkWindow">
      <field name="SocketWindow" cname="socket_window" type="GdkWindow*" />
      <field name="ModalityWindow" cname="modality_window" type="GtkWidget*" />
      <field name="ModalityGroup" cname="modality_group" type="GtkWindowGroup*" />
      <field name="GrabbedKeys" cname="grabbed_keys" type="GHashTable*" />
      <field name="SameApp" cname="same_app" bits="1" type="guint" />
      <method name="Construct" cname="gtk_plug_construct">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkNativeWindow" name="socket_id" />
        </parameters>
      </method>
      <method name="ConstructForDisplay" cname="gtk_plug_construct_for_display">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="GdkNativeWindow" name="socket_id" />
        </parameters>
      </method>
      <method name="GetId" cname="gtk_plug_get_id">
        <return-type type="GdkNativeWindow" />
      </method>
      <method name="GetType" cname="gtk_plug_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_plug_new">
        <parameters>
          <parameter type="GdkNativeWindow" name="socket_id" />
        </parameters>
      </constructor>
      <constructor cname="gtk_plug_new_for_display">
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="GdkNativeWindow" name="socket_id" />
        </parameters>
      </constructor>
    </object>
    <object name="Preview" cname="GtkPreview" deprecated="1" parent="GtkWidget">
      <field name="Buffer" cname="buffer" type="guchar*" />
      <field name="BufferWidth" cname="buffer_width" type="guint16" />
      <field name="BufferHeight" cname="buffer_height" type="guint16" />
      <field name="Bpp" cname="bpp" type="guint16" />
      <field name="Rowstride" cname="rowstride" type="guint16" />
      <field name="Dither" cname="dither" type="GdkRgbDither" />
      <field name="Type" cname="type" bits="1" type="guint" />
      <field name="Expand" cname="expand" bits="1" type="guint" />
      <method name="DrawRow" cname="gtk_preview_draw_row" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guchar*" name="data" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="w" />
        </parameters>
      </method>
      <method name="GetCmap" cname="gtk_preview_get_cmap" deprecated="1" shared="true">
        <return-type type="GdkColormap*" />
      </method>
      <method name="GetInfo" cname="gtk_preview_get_info" shared="true">
        <return-type type="GtkPreviewInfo*" />
      </method>
      <method name="GetType" cname="gtk_preview_get_type" deprecated="1" shared="true">
        <return-type type="GtkType" />
      </method>
      <method name="GetVisual" cname="gtk_preview_get_visual" deprecated="1" shared="true">
        <return-type type="GdkVisual*" />
      </method>
      <constructor cname="gtk_preview_new" deprecated="1">
        <parameters>
          <parameter type="GtkPreviewType" name="type" />
        </parameters>
      </constructor>
      <method name="Put" cname="gtk_preview_put" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GdkGC*" name="gc" />
          <parameter type="gint" name="srcx" />
          <parameter type="gint" name="srcy" />
          <parameter type="gint" name="destx" />
          <parameter type="gint" name="desty" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="Reset" cname="gtk_preview_reset" shared="true">
        <return-type type="void" />
      </method>
      <method name="SetColorCube" cname="gtk_preview_set_color_cube" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="nred_shades" />
          <parameter type="guint" name="ngreen_shades" />
          <parameter type="guint" name="nblue_shades" />
          <parameter type="guint" name="ngray_shades" />
        </parameters>
      </method>
      <method name="SetDither" cname="gtk_preview_set_dither" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRgbDither" name="dither" />
        </parameters>
      </method>
      <method name="SetExpand" cname="gtk_preview_set_expand" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="expand" />
        </parameters>
      </method>
      <method name="SetGamma" cname="gtk_preview_set_gamma" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="double" name="gamma_" />
        </parameters>
      </method>
      <method name="SetInstallCmap" cname="gtk_preview_set_install_cmap" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="install_cmap" />
        </parameters>
      </method>
      <method name="SetReserved" cname="gtk_preview_set_reserved" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="nreserved" />
        </parameters>
      </method>
      <method name="Size" cname="gtk_preview_size" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="Uninit" cname="gtk_preview_uninit" deprecated="1" shared="true">
        <return-type type="void" />
      </method>
    </object>
    <object name="PrintContext" cname="GtkPrintContext">
      <method name="CreatePangoContext" cname="gtk_print_context_create_pango_context">
        <return-type type="PangoContext*" />
      </method>
      <method name="CreatePangoLayout" cname="gtk_print_context_create_pango_layout">
        <return-type type="PangoLayout*" />
      </method>
      <method name="GetCairoContext" cname="gtk_print_context_get_cairo_context">
        <return-type type="cairo_t*" />
      </method>
      <method name="GetDpiX" cname="gtk_print_context_get_dpi_x">
        <return-type type="gdouble" />
      </method>
      <method name="GetDpiY" cname="gtk_print_context_get_dpi_y">
        <return-type type="gdouble" />
      </method>
      <method name="GetHeight" cname="gtk_print_context_get_height">
        <return-type type="gdouble" />
      </method>
      <method name="GetPageSetup" cname="gtk_print_context_get_page_setup">
        <return-type type="GtkPageSetup*" />
      </method>
      <method name="GetPangoFontmap" cname="gtk_print_context_get_pango_fontmap">
        <return-type type="PangoFontMap*" />
      </method>
      <method name="GetType" cname="gtk_print_context_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetWidth" cname="gtk_print_context_get_width">
        <return-type type="gdouble" />
      </method>
      <method name="SetCairoContext" cname="gtk_print_context_set_cairo_context">
        <return-type type="void" />
        <parameters>
          <parameter type="cairo_t*" name="cr" />
          <parameter type="double" name="dpi_x" />
          <parameter type="double" name="dpi_y" />
        </parameters>
      </method>
    </object>
    <object name="PrintOperation" cname="GtkPrintOperation" parent="GObject">
      <field name="Priv" cname="priv" type="GtkPrintOperationPrivate*" />
      <method name="Cancel" cname="gtk_print_operation_cancel">
        <return-type type="void" />
      </method>
      <method name="GetDefaultPageSetup" cname="gtk_print_operation_get_default_page_setup">
        <return-type type="GtkPageSetup*" />
      </method>
      <method name="GetError" cname="gtk_print_operation_get_error">
        <return-type type="void" />
        <parameters>
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="GetPrintSettings" cname="gtk_print_operation_get_print_settings">
        <return-type type="GtkPrintSettings*" />
      </method>
      <method name="GetStatus" cname="gtk_print_operation_get_status">
        <return-type type="GtkPrintStatus" />
      </method>
      <method name="GetStatusString" cname="gtk_print_operation_get_status_string">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gtk_print_operation_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="IsFinished" cname="gtk_print_operation_is_finished">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gtk_print_operation_new" />
      <method name="Run" cname="gtk_print_operation_run">
        <return-type type="GtkPrintOperationResult" />
        <parameters>
          <parameter type="GtkPrintOperationAction" name="action" />
          <parameter type="GtkWindow*" name="parent" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="SetAllowAsync" cname="gtk_print_operation_set_allow_async">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="allow_async" />
        </parameters>
      </method>
      <method name="SetCurrentPage" cname="gtk_print_operation_set_current_page">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="current_page" />
        </parameters>
      </method>
      <method name="SetCustomTabLabel" cname="gtk_print_operation_set_custom_tab_label">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </method>
      <method name="SetDefaultPageSetup" cname="gtk_print_operation_set_default_page_setup">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPageSetup*" name="default_page_setup" />
        </parameters>
      </method>
      <method name="SetExportFilename" cname="gtk_print_operation_set_export_filename">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
        </parameters>
      </method>
      <method name="SetJobName" cname="gtk_print_operation_set_job_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="job_name" />
        </parameters>
      </method>
      <method name="SetNPages" cname="gtk_print_operation_set_n_pages">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="n_pages" />
        </parameters>
      </method>
      <method name="SetPrintSettings" cname="gtk_print_operation_set_print_settings">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPrintSettings*" name="print_settings" />
        </parameters>
      </method>
      <method name="SetShowProgress" cname="gtk_print_operation_set_show_progress">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="show_progress" />
        </parameters>
      </method>
      <method name="SetTrackPrintStatus" cname="gtk_print_operation_set_track_print_status">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="track_status" />
        </parameters>
      </method>
      <method name="SetUnit" cname="gtk_print_operation_set_unit">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkUnit" name="unit" />
        </parameters>
      </method>
      <method name="SetUseFullPage" cname="gtk_print_operation_set_use_full_page">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="full_page" />
        </parameters>
      </method>
    </object>
    <object name="PrintSettings" cname="GtkPrintSettings">
      <method name="Copy" cname="gtk_print_settings_copy">
        <return-type type="GtkPrintSettings*" owned="true" />
      </method>
      <method name="Foreach" cname="gtk_print_settings_foreach">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPrintSettingsFunc" name="func" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="Get" cname="gtk_print_settings_get">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="const-gchar*" name="key" />
        </parameters>
      </method>
      <method name="GetBool" cname="gtk_print_settings_get_bool">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="key" />
        </parameters>
      </method>
      <method name="GetCollate" cname="gtk_print_settings_get_collate">
        <return-type type="gboolean" />
      </method>
      <method name="GetDefaultSource" cname="gtk_print_settings_get_default_source">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetDither" cname="gtk_print_settings_get_dither">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetDouble" cname="gtk_print_settings_get_double">
        <return-type type="gdouble" />
        <parameters>
          <parameter type="const-gchar*" name="key" />
        </parameters>
      </method>
      <method name="GetDoubleWithDefault" cname="gtk_print_settings_get_double_with_default">
        <return-type type="gdouble" />
        <parameters>
          <parameter type="const-gchar*" name="key" />
          <parameter type="gdouble" name="def" />
        </parameters>
      </method>
      <method name="GetDuplex" cname="gtk_print_settings_get_duplex">
        <return-type type="GtkPrintDuplex" />
      </method>
      <method name="GetFinishings" cname="gtk_print_settings_get_finishings">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetInt" cname="gtk_print_settings_get_int">
        <return-type type="gint" />
        <parameters>
          <parameter type="const-gchar*" name="key" />
        </parameters>
      </method>
      <method name="GetIntWithDefault" cname="gtk_print_settings_get_int_with_default">
        <return-type type="gint" />
        <parameters>
          <parameter type="const-gchar*" name="key" />
          <parameter type="gint" name="def" />
        </parameters>
      </method>
      <method name="GetLength" cname="gtk_print_settings_get_length">
        <return-type type="gdouble" />
        <parameters>
          <parameter type="const-gchar*" name="key" />
          <parameter type="GtkUnit" name="unit" />
        </parameters>
      </method>
      <method name="GetMediaType" cname="gtk_print_settings_get_media_type">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetNCopies" cname="gtk_print_settings_get_n_copies">
        <return-type type="gint" />
      </method>
      <method name="GetNumberUp" cname="gtk_print_settings_get_number_up">
        <return-type type="gint" />
      </method>
      <method name="GetOrientation" cname="gtk_print_settings_get_orientation">
        <return-type type="GtkPageOrientation" />
      </method>
      <method name="GetOutputBin" cname="gtk_print_settings_get_output_bin">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetPageRanges" cname="gtk_print_settings_get_page_ranges">
        <return-type type="GtkPageRange*" />
        <parameters>
          <parameter type="gint*" name="num_ranges" />
        </parameters>
      </method>
      <method name="GetPageSet" cname="gtk_print_settings_get_page_set">
        <return-type type="GtkPageSet" />
      </method>
      <method name="GetPaperHeight" cname="gtk_print_settings_get_paper_height">
        <return-type type="gdouble" />
        <parameters>
          <parameter type="GtkUnit" name="unit" />
        </parameters>
      </method>
      <method name="GetPaperSize" cname="gtk_print_settings_get_paper_size">
        <return-type type="GtkPaperSize*" />
      </method>
      <method name="GetPaperWidth" cname="gtk_print_settings_get_paper_width">
        <return-type type="gdouble" />
        <parameters>
          <parameter type="GtkUnit" name="unit" />
        </parameters>
      </method>
      <method name="GetPrintPages" cname="gtk_print_settings_get_print_pages">
        <return-type type="GtkPrintPages" />
      </method>
      <method name="GetPrinter" cname="gtk_print_settings_get_printer">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetQuality" cname="gtk_print_settings_get_quality">
        <return-type type="GtkPrintQuality" />
      </method>
      <method name="GetResolution" cname="gtk_print_settings_get_resolution">
        <return-type type="gint" />
      </method>
      <method name="GetReverse" cname="gtk_print_settings_get_reverse">
        <return-type type="gboolean" />
      </method>
      <method name="GetScale" cname="gtk_print_settings_get_scale">
        <return-type type="gdouble" />
      </method>
      <method name="GetType" cname="gtk_print_settings_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUseColor" cname="gtk_print_settings_get_use_color">
        <return-type type="gboolean" />
      </method>
      <method name="HasKey" cname="gtk_print_settings_has_key">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="key" />
        </parameters>
      </method>
      <constructor cname="gtk_print_settings_new" />
      <method name="Set" cname="gtk_print_settings_set">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="key" />
          <parameter type="const-gchar*" name="value" />
        </parameters>
      </method>
      <method name="SetBool" cname="gtk_print_settings_set_bool">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="key" />
          <parameter type="gboolean" name="value" />
        </parameters>
      </method>
      <method name="SetCollate" cname="gtk_print_settings_set_collate">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="collate" />
        </parameters>
      </method>
      <method name="SetDefaultSource" cname="gtk_print_settings_set_default_source">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="default_source" />
        </parameters>
      </method>
      <method name="SetDither" cname="gtk_print_settings_set_dither">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="dither" />
        </parameters>
      </method>
      <method name="SetDouble" cname="gtk_print_settings_set_double">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="key" />
          <parameter type="gdouble" name="value" />
        </parameters>
      </method>
      <method name="SetDuplex" cname="gtk_print_settings_set_duplex">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPrintDuplex" name="duplex" />
        </parameters>
      </method>
      <method name="SetFinishings" cname="gtk_print_settings_set_finishings">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="finishings" />
        </parameters>
      </method>
      <method name="SetInt" cname="gtk_print_settings_set_int">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="key" />
          <parameter type="gint" name="value" />
        </parameters>
      </method>
      <method name="SetLength" cname="gtk_print_settings_set_length">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="key" />
          <parameter type="gdouble" name="value" />
          <parameter type="GtkUnit" name="unit" />
        </parameters>
      </method>
      <method name="SetMediaType" cname="gtk_print_settings_set_media_type">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="media_type" />
        </parameters>
      </method>
      <method name="SetNCopies" cname="gtk_print_settings_set_n_copies">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="num_copies" />
        </parameters>
      </method>
      <method name="SetNumberUp" cname="gtk_print_settings_set_number_up">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="number_up" />
        </parameters>
      </method>
      <method name="SetOrientation" cname="gtk_print_settings_set_orientation">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPageOrientation" name="orientation" />
        </parameters>
      </method>
      <method name="SetOutputBin" cname="gtk_print_settings_set_output_bin">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="output_bin" />
        </parameters>
      </method>
      <method name="SetPageRanges" cname="gtk_print_settings_set_page_ranges">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPageRange*" name="page_ranges" />
          <parameter type="gint" name="num_ranges" />
        </parameters>
      </method>
      <method name="SetPageSet" cname="gtk_print_settings_set_page_set">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPageSet" name="page_set" />
        </parameters>
      </method>
      <method name="SetPaperHeight" cname="gtk_print_settings_set_paper_height">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="height" />
          <parameter type="GtkUnit" name="unit" />
        </parameters>
      </method>
      <method name="SetPaperSize" cname="gtk_print_settings_set_paper_size">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPaperSize*" name="paper_size" />
        </parameters>
      </method>
      <method name="SetPaperWidth" cname="gtk_print_settings_set_paper_width">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="width" />
          <parameter type="GtkUnit" name="unit" />
        </parameters>
      </method>
      <method name="SetPrintPages" cname="gtk_print_settings_set_print_pages">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPrintPages" name="pages" />
        </parameters>
      </method>
      <method name="SetPrinter" cname="gtk_print_settings_set_printer">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="printer" />
        </parameters>
      </method>
      <method name="SetQuality" cname="gtk_print_settings_set_quality">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPrintQuality" name="quality" />
        </parameters>
      </method>
      <method name="SetResolution" cname="gtk_print_settings_set_resolution">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="resolution" />
        </parameters>
      </method>
      <method name="SetReverse" cname="gtk_print_settings_set_reverse">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="reverse" />
        </parameters>
      </method>
      <method name="SetScale" cname="gtk_print_settings_set_scale">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="scale" />
        </parameters>
      </method>
      <method name="SetUseColor" cname="gtk_print_settings_set_use_color">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="use_color" />
        </parameters>
      </method>
      <method name="Unset" cname="gtk_print_settings_unset">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="key" />
        </parameters>
      </method>
    </object>
    <object name="Progress" cname="GtkProgress" parent="GtkWidget">
      <field name="Adjustment" cname="adjustment" type="GtkAdjustment*" />
      <field name="OffscreenPixmap" cname="offscreen_pixmap" type="GdkPixmap*" />
      <field name="Format" cname="format" type="gchar*" />
      <field name="XAlign" cname="x_align" type="gfloat" />
      <field name="YAlign" cname="y_align" type="gfloat" />
      <field name="ShowText" cname="show_text" bits="1" type="guint" />
      <field name="ActivityMode" cname="activity_mode" bits="1" type="guint" />
      <field name="UseTextFormat" cname="use_text_format" bits="1" type="guint" />
      <method name="Configure" cname="gtk_progress_configure" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="value" />
          <parameter type="gdouble" name="hmin" />
          <parameter type="gdouble" name="max" />
        </parameters>
      </method>
      <method name="GetCurrentPercentage" cname="gtk_progress_get_current_percentage" deprecated="1">
        <return-type type="gdouble" />
      </method>
      <method name="GetCurrentText" cname="gtk_progress_get_current_text" deprecated="1">
        <return-type type="gchar*" />
      </method>
      <method name="GetPercentageFromValue" cname="gtk_progress_get_percentage_from_value" deprecated="1">
        <return-type type="gdouble" />
        <parameters>
          <parameter type="gdouble" name="value" />
        </parameters>
      </method>
      <method name="GetTextFromValue" cname="gtk_progress_get_text_from_value" deprecated="1">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="gdouble" name="value" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_progress_get_type" deprecated="1" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetValue" cname="gtk_progress_get_value" deprecated="1">
        <return-type type="gdouble" />
      </method>
      <method name="SetActivityMode" cname="gtk_progress_set_activity_mode" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="activity_mode" />
        </parameters>
      </method>
      <method name="SetAdjustment" cname="gtk_progress_set_adjustment" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </method>
      <method name="SetFormatString" cname="gtk_progress_set_format_string" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="format" />
        </parameters>
      </method>
      <method name="SetPercentage" cname="gtk_progress_set_percentage" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="percentage" />
        </parameters>
      </method>
      <method name="SetShowText" cname="gtk_progress_set_show_text" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="show_text" />
        </parameters>
      </method>
      <method name="SetTextAlignment" cname="gtk_progress_set_text_alignment" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gfloat" name="x_align" />
          <parameter type="gfloat" name="y_align" />
        </parameters>
      </method>
      <method name="SetValue" cname="gtk_progress_set_value" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="value" />
        </parameters>
      </method>
    </object>
    <object name="ProgressBar" cname="GtkProgressBar" parent="GtkProgress">
      <field name="BarStyle" cname="bar_style" type="GtkProgressBarStyle" />
      <field name="Orientation" cname="orientation" type="GtkProgressBarOrientation" />
      <field name="Blocks" cname="blocks" type="guint" />
      <field name="InBlock" cname="in_block" type="gint" />
      <field name="ActivityPos" cname="activity_pos" type="gint" />
      <field name="ActivityStep" cname="activity_step" type="guint" />
      <field name="ActivityBlocks" cname="activity_blocks" type="guint" />
      <field name="PulseFraction" cname="pulse_fraction" type="gdouble" />
      <field name="ActivityDir" cname="activity_dir" bits="1" type="guint" />
      <field name="Ellipsize" cname="ellipsize" bits="3" type="guint" />
      <field name="Dirty" cname="dirty" bits="1" type="guint" />
      <method name="GetEllipsize" cname="gtk_progress_bar_get_ellipsize">
        <return-type type="PangoEllipsizeMode" />
      </method>
      <method name="GetFraction" cname="gtk_progress_bar_get_fraction">
        <return-type type="gdouble" />
      </method>
      <method name="GetOrientation" cname="gtk_progress_bar_get_orientation">
        <return-type type="GtkProgressBarOrientation" />
      </method>
      <method name="GetPulseStep" cname="gtk_progress_bar_get_pulse_step">
        <return-type type="gdouble" />
      </method>
      <method name="GetText" cname="gtk_progress_bar_get_text">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gtk_progress_bar_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_progress_bar_new" />
      <constructor cname="gtk_progress_bar_new_with_adjustment" deprecated="1">
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </constructor>
      <method name="Pulse" cname="gtk_progress_bar_pulse">
        <return-type type="void" />
      </method>
      <method name="SetActivityBlocks" cname="gtk_progress_bar_set_activity_blocks" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="blocks" />
        </parameters>
      </method>
      <method name="SetActivityStep" cname="gtk_progress_bar_set_activity_step" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="step" />
        </parameters>
      </method>
      <method name="SetBarStyle" cname="gtk_progress_bar_set_bar_style" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkProgressBarStyle" name="style" />
        </parameters>
      </method>
      <method name="SetDiscreteBlocks" cname="gtk_progress_bar_set_discrete_blocks" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="blocks" />
        </parameters>
      </method>
      <method name="SetEllipsize" cname="gtk_progress_bar_set_ellipsize">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoEllipsizeMode" name="mode" />
        </parameters>
      </method>
      <method name="SetFraction" cname="gtk_progress_bar_set_fraction">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="fraction" />
        </parameters>
      </method>
      <method name="SetOrientation" cname="gtk_progress_bar_set_orientation">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkProgressBarOrientation" name="orientation" />
        </parameters>
      </method>
      <method name="SetPulseStep" cname="gtk_progress_bar_set_pulse_step">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="fraction" />
        </parameters>
      </method>
      <method name="SetText" cname="gtk_progress_bar_set_text">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </method>
      <method name="Update" cname="gtk_progress_bar_update" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="percentage" />
        </parameters>
      </method>
    </object>
    <object name="RadioAction" cname="GtkRadioAction" parent="GtkToggleAction">
      <field name="PrivateData" cname="private_data" type="GtkRadioActionPrivate*" />
      <method name="GetCurrentValue" cname="gtk_radio_action_get_current_value">
        <return-type type="gint" />
      </method>
      <method name="GetGroup" cname="gtk_radio_action_get_group">
        <return-type type="GSList*" />
      </method>
      <method name="GetType" cname="gtk_radio_action_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_radio_action_new">
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="const-gchar*" name="label" />
          <parameter type="const-gchar*" name="tooltip" />
          <parameter type="const-gchar*" name="stock_id" />
          <parameter type="gint" name="value" />
        </parameters>
      </constructor>
      <method name="SetCurrentValue" cname="gtk_radio_action_set_current_value">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="current_value" />
        </parameters>
      </method>
      <method name="SetGroup" cname="gtk_radio_action_set_group">
        <return-type type="void" />
        <parameters>
          <parameter type="GSList*" name="group" />
        </parameters>
      </method>
    </object>
    <object name="RadioButton" cname="GtkRadioButton" parent="GtkCheckButton">
      <field name="Group" cname="group" type="GSList*" />
      <method name="GetGroup" cname="gtk_radio_button_get_group">
        <return-type type="GSList*" />
      </method>
      <method name="GetType" cname="gtk_radio_button_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_radio_button_new">
        <parameters>
          <parameter type="GSList*" name="group" />
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_button_new_from_widget">
        <parameters>
          <parameter type="GtkRadioButton*" name="group" />
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_button_new_with_label">
        <parameters>
          <parameter type="GSList*" name="group" />
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_button_new_with_label_from_widget">
        <parameters>
          <parameter type="GtkRadioButton*" name="group" />
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_button_new_with_mnemonic">
        <parameters>
          <parameter type="GSList*" name="group" />
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_button_new_with_mnemonic_from_widget">
        <parameters>
          <parameter type="GtkRadioButton*" name="group" />
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <method name="SetGroup" cname="gtk_radio_button_set_group">
        <return-type type="void" />
        <parameters>
          <parameter type="GSList*" name="group" />
        </parameters>
      </method>
    </object>
    <object name="RadioMenuItem" cname="GtkRadioMenuItem" parent="GtkCheckMenuItem">
      <field name="Group" cname="group" type="GSList*" />
      <method name="GetGroup" cname="gtk_radio_menu_item_get_group">
        <return-type type="GSList*" />
      </method>
      <method name="GetType" cname="gtk_radio_menu_item_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_radio_menu_item_new">
        <parameters>
          <parameter type="GSList*" name="group" />
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_menu_item_new_from_widget">
        <parameters>
          <parameter type="GtkRadioMenuItem*" name="group" />
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_menu_item_new_with_label">
        <parameters>
          <parameter type="GSList*" name="group" />
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_menu_item_new_with_label_from_widget">
        <parameters>
          <parameter type="GtkRadioMenuItem*" name="group" />
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_menu_item_new_with_mnemonic">
        <parameters>
          <parameter type="GSList*" name="group" />
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_menu_item_new_with_mnemonic_from_widget">
        <parameters>
          <parameter type="GtkRadioMenuItem*" name="group" />
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <method name="SetGroup" cname="gtk_radio_menu_item_set_group">
        <return-type type="void" />
        <parameters>
          <parameter type="GSList*" name="group" />
        </parameters>
      </method>
    </object>
    <object name="RadioToolButton" cname="GtkRadioToolButton" parent="GtkToggleToolButton">
      <method name="GetGroup" cname="gtk_radio_tool_button_get_group">
        <return-type type="GSList*" />
      </method>
      <method name="GetType" cname="gtk_radio_tool_button_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_radio_tool_button_new">
        <parameters>
          <parameter type="GSList*" name="group" />
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_tool_button_new_from_stock">
        <parameters>
          <parameter type="GSList*" name="group" />
          <parameter type="const-gchar*" name="stock_id" />
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_tool_button_new_from_widget">
        <parameters>
          <parameter type="GtkRadioToolButton*" name="group" />
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_tool_button_new_with_stock_from_widget">
        <parameters>
          <parameter type="GtkRadioToolButton*" name="group" />
          <parameter type="const-gchar*" name="stock_id" />
        </parameters>
      </constructor>
      <method name="SetGroup" cname="gtk_radio_tool_button_set_group">
        <return-type type="void" />
        <parameters>
          <parameter type="GSList*" name="group" />
        </parameters>
      </method>
    </object>
    <object name="Range" cname="GtkRange" parent="GtkWidget">
      <field name="Adjustment" cname="adjustment" type="GtkAdjustment*" />
      <field name="UpdatePolicy" cname="update_policy" type="GtkUpdateType" />
      <field name="Inverted" cname="inverted" bits="1" type="guint" />
      <field name="Flippable" cname="flippable" bits="1" type="guint" />
      <field name="HasStepperA" cname="has_stepper_a" bits="1" type="guint" />
      <field name="HasStepperB" cname="has_stepper_b" bits="1" type="guint" />
      <field name="HasStepperC" cname="has_stepper_c" bits="1" type="guint" />
      <field name="HasStepperD" cname="has_stepper_d" bits="1" type="guint" />
      <field name="NeedRecalc" cname="need_recalc" bits="1" type="guint" />
      <field name="SliderSizeFixed" cname="slider_size_fixed" bits="1" type="guint" />
      <field name="MinSliderSize" cname="min_slider_size" type="gint" />
      <field name="Orientation" cname="orientation" type="GtkOrientation" />
      <field name="RangeRect" cname="range_rect" type="GdkRectangle" />
      <field name="SliderStart" cname="slider_start" type="gint" />
      <field name="SliderEnd" cname="slider_end" type="gint" />
      <field name="RoundDigits" cname="round_digits" type="gint" />
      <field name="TroughClickForward" cname="trough_click_forward" bits="1" type="guint" />
      <field name="UpdatePending" cname="update_pending" bits="1" type="guint" />
      <field name="Layout" cname="layout" type="GtkRangeLayout*" />
      <field name="Timer" cname="timer" type="GtkRangeStepTimer*" />
      <field name="SlideInitialSliderPosition" cname="slide_initial_slider_position" type="gint" />
      <field name="SlideInitialCoordinate" cname="slide_initial_coordinate" type="gint" />
      <field name="UpdateTimeoutId" cname="update_timeout_id" type="guint" />
      <field name="EventWindow" cname="event_window" type="GdkWindow*" />
      <method name="GetAdjustment" cname="gtk_range_get_adjustment">
        <return-type type="GtkAdjustment*" />
      </method>
      <method name="GetInverted" cname="gtk_range_get_inverted">
        <return-type type="gboolean" />
      </method>
      <method name="GetLowerStepperSensitivity" cname="gtk_range_get_lower_stepper_sensitivity">
        <return-type type="GtkSensitivityType" />
      </method>
      <method name="GetType" cname="gtk_range_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUpdatePolicy" cname="gtk_range_get_update_policy">
        <return-type type="GtkUpdateType" />
      </method>
      <method name="GetUpperStepperSensitivity" cname="gtk_range_get_upper_stepper_sensitivity">
        <return-type type="GtkSensitivityType" />
      </method>
      <method name="GetValue" cname="gtk_range_get_value">
        <return-type type="gdouble" />
      </method>
      <method name="SetAdjustment" cname="gtk_range_set_adjustment">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </method>
      <method name="SetIncrements" cname="gtk_range_set_increments">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="step" />
          <parameter type="gdouble" name="page" />
        </parameters>
      </method>
      <method name="SetInverted" cname="gtk_range_set_inverted">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetLowerStepperSensitivity" cname="gtk_range_set_lower_stepper_sensitivity">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkSensitivityType" name="sensitivity" />
        </parameters>
      </method>
      <method name="SetRange" cname="gtk_range_set_range">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="min" />
          <parameter type="gdouble" name="max" />
        </parameters>
      </method>
      <method name="SetUpdatePolicy" cname="gtk_range_set_update_policy">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkUpdateType" name="policy" />
        </parameters>
      </method>
      <method name="SetUpperStepperSensitivity" cname="gtk_range_set_upper_stepper_sensitivity">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkSensitivityType" name="sensitivity" />
        </parameters>
      </method>
      <method name="SetValue" cname="gtk_range_set_value">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="value" />
        </parameters>
      </method>
    </object>
    <object name="RcStyle" cname="GtkRcStyle" parent="GObject">
      <field name="Name" cname="name" type="gchar*" access="public" />
      <field name="BgPixmapName" cname="bg_pixmap_name" array_len="5" type="gchar*" access="public" />
      <field name="FontDesc" cname="font_desc" type="PangoFontDescription*" access="public" />
      <field name="ColorFlags" cname="color_flags" array_len="5" type="GtkRcFlags" access="public" />
      <field name="Fg" cname="fg" array_len="5" type="GdkColor" access="public" />
      <field name="Bg" cname="bg" array_len="5" type="GdkColor" access="public" />
      <field name="Text" cname="text" array_len="5" type="GdkColor" access="public" />
      <field name="Base" cname="base" array_len="5" type="GdkColor" access="public" />
      <field name="Xthickness" cname="xthickness" type="gint" access="public" />
      <field name="Ythickness" cname="ythickness" type="gint" access="public" />
      <field name="RcProperties" cname="rc_properties" type="GArray*" />
      <field name="RcStyleLists" cname="rc_style_lists" type="GSList*" />
      <field name="IconFactories" cname="icon_factories" type="GSList*" />
      <field name="EngineSpecified" cname="engine_specified" bits="1" type="guint" />
      <method name="Copy" cname="gtk_rc_style_copy">
        <return-type type="GtkRcStyle*" owned="true" />
      </method>
      <method name="GetType" cname="gtk_rc_style_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_rc_style_new" />
      <method name="Ref" cname="gtk_rc_style_ref">
        <return-type type="void" />
      </method>
      <method name="Unref" cname="gtk_rc_style_unref">
        <return-type type="void" />
      </method>
    </object>
    <object name="RecentChooserDialog" cname="GtkRecentChooserDialog" parent="GtkDialog">
      <field name="Priv" cname="priv" type="GtkRecentChooserDialogPrivate*" />
      <method name="GetType" cname="gtk_recent_chooser_dialog_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_recent_chooser_dialog_new">
        <parameters>
          <parameter type="const-gchar*" name="title" />
          <parameter type="GtkWindow*" name="parent" />
          <parameter type="const-gchar*" name="first_button_text" />
          <parameter ellipsis="true" />
        </parameters>
      </constructor>
      <constructor cname="gtk_recent_chooser_dialog_new_for_manager">
        <parameters>
          <parameter type="const-gchar*" name="title" />
          <parameter type="GtkWindow*" name="parent" />
          <parameter type="GtkRecentManager*" name="manager" />
          <parameter type="const-gchar*" name="first_button_text" />
          <parameter ellipsis="true" />
        </parameters>
      </constructor>
    </object>
    <object name="RecentChooserMenu" cname="GtkRecentChooserMenu" parent="GtkMenu">
      <field name="Priv" cname="priv" type="GtkRecentChooserMenuPrivate*" />
      <method name="GetShowNumbers" cname="gtk_recent_chooser_menu_get_show_numbers">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_recent_chooser_menu_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_recent_chooser_menu_new" />
      <constructor cname="gtk_recent_chooser_menu_new_for_manager">
        <parameters>
          <parameter type="GtkRecentManager*" name="manager" />
        </parameters>
      </constructor>
      <method name="SetShowNumbers" cname="gtk_recent_chooser_menu_set_show_numbers">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="show_numbers" />
        </parameters>
      </method>
    </object>
    <object name="RecentChooserWidget" cname="GtkRecentChooserWidget" parent="GtkVBox">
      <field name="Priv" cname="priv" type="GtkRecentChooserWidgetPrivate*" />
      <method name="GetType" cname="gtk_recent_chooser_widget_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_recent_chooser_widget_new" />
      <constructor cname="gtk_recent_chooser_widget_new_for_manager">
        <parameters>
          <parameter type="GtkRecentManager*" name="manager" />
        </parameters>
      </constructor>
    </object>
    <object name="RecentFilter" cname="GtkRecentFilter">
      <method name="AddAge" cname="gtk_recent_filter_add_age">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="days" />
        </parameters>
      </method>
      <method name="AddApplication" cname="gtk_recent_filter_add_application">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="application" />
        </parameters>
      </method>
      <method name="AddCustom" cname="gtk_recent_filter_add_custom">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRecentFilterFlags" name="needed" />
          <parameter type="GtkRecentFilterFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GDestroyNotify" name="data_destroy" />
        </parameters>
      </method>
      <method name="AddGroup" cname="gtk_recent_filter_add_group">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="group" />
        </parameters>
      </method>
      <method name="AddMimeType" cname="gtk_recent_filter_add_mime_type">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="mime_type" />
        </parameters>
      </method>
      <method name="AddPattern" cname="gtk_recent_filter_add_pattern">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="pattern" />
        </parameters>
      </method>
      <method name="AddPixbufFormats" cname="gtk_recent_filter_add_pixbuf_formats">
        <return-type type="void" />
      </method>
      <method name="Filter" cname="gtk_recent_filter_filter">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GtkRecentFilterInfo*" name="filter_info" />
        </parameters>
      </method>
      <method name="GetName" cname="gtk_recent_filter_get_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetNeeded" cname="gtk_recent_filter_get_needed">
        <return-type type="GtkRecentFilterFlags" />
      </method>
      <method name="GetType" cname="gtk_recent_filter_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_recent_filter_new" />
      <method name="SetName" cname="gtk_recent_filter_set_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
    </object>
    <object name="RecentManager" cname="GtkRecentManager" parent="GObject">
      <field name="Priv" cname="priv" type="GtkRecentManagerPrivate*" />
      <method name="AddFull" cname="gtk_recent_manager_add_full">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="uri" />
          <parameter type="const-GtkRecentData*" name="recent_data" />
        </parameters>
      </method>
      <method name="AddItem" cname="gtk_recent_manager_add_item">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="uri" />
        </parameters>
      </method>
      <method name="ErrorQuark" cname="gtk_recent_manager_error_quark" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="GetDefault" cname="gtk_recent_manager_get_default" shared="true">
        <return-type type="GtkRecentManager*" />
      </method>
      <method name="GetForScreen" cname="gtk_recent_manager_get_for_screen" shared="true">
        <return-type type="GtkRecentManager*" />
        <parameters>
          <parameter type="GdkScreen*" name="screen" />
        </parameters>
      </method>
      <method name="GetItems" cname="gtk_recent_manager_get_items">
        <return-type type="GList*" />
      </method>
      <method name="GetLimit" cname="gtk_recent_manager_get_limit">
        <return-type type="gint" />
      </method>
      <method name="GetType" cname="gtk_recent_manager_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="HasItem" cname="gtk_recent_manager_has_item">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="uri" />
        </parameters>
      </method>
      <method name="LookupItem" cname="gtk_recent_manager_lookup_item">
        <return-type type="GtkRecentInfo*" />
        <parameters>
          <parameter type="const-gchar*" name="uri" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="MoveItem" cname="gtk_recent_manager_move_item">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="uri" />
          <parameter type="const-gchar*" name="new_uri" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <constructor cname="gtk_recent_manager_new" />
      <method name="PurgeItems" cname="gtk_recent_manager_purge_items">
        <return-type type="gint" />
        <parameters>
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="RemoveItem" cname="gtk_recent_manager_remove_item">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="uri" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="SetLimit" cname="gtk_recent_manager_set_limit">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="limit" />
        </parameters>
      </method>
      <method name="SetScreen" cname="gtk_recent_manager_set_screen">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkScreen*" name="screen" />
        </parameters>
      </method>
    </object>
    <object name="Ruler" cname="GtkRuler" parent="GtkWidget">
      <field name="BackingStore" cname="backing_store" type="GdkPixmap*" />
      <field name="NonGrExpGc" cname="non_gr_exp_gc" type="GdkGC*" />
      <field name="Metric" cname="metric" type="GtkRulerMetric*" />
      <field name="Xsrc" cname="xsrc" type="gint" />
      <field name="Ysrc" cname="ysrc" type="gint" />
      <field name="SliderSize" cname="slider_size" type="gint" />
      <field name="Lower" cname="lower" type="gdouble" />
      <field name="Upper" cname="upper" type="gdouble" />
      <field name="Position" cname="position" type="gdouble" />
      <field name="MaxSize" cname="max_size" type="gdouble" />
      <method name="DrawPos" cname="gtk_ruler_draw_pos">
        <return-type type="void" />
      </method>
      <method name="DrawTicks" cname="gtk_ruler_draw_ticks">
        <return-type type="void" />
      </method>
      <method name="GetMetric" cname="gtk_ruler_get_metric">
        <return-type type="GtkMetricType" />
      </method>
      <method name="GetRange" cname="gtk_ruler_get_range">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble*" name="lower" />
          <parameter type="gdouble*" name="upper" />
          <parameter type="gdouble*" name="position" />
          <parameter type="gdouble*" name="max_size" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_ruler_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="SetMetric" cname="gtk_ruler_set_metric">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkMetricType" name="metric" />
        </parameters>
      </method>
      <method name="SetRange" cname="gtk_ruler_set_range">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="lower" />
          <parameter type="gdouble" name="upper" />
          <parameter type="gdouble" name="position" />
          <parameter type="gdouble" name="max_size" />
        </parameters>
      </method>
    </object>
    <object name="Scale" cname="GtkScale" parent="GtkRange">
      <field name="Digits" cname="digits" type="gint" />
      <field name="DrawValue" cname="draw_value" bits="1" type="guint" />
      <field name="ValuePos" cname="value_pos" bits="2" type="guint" />
      <method name="GetDigits" cname="gtk_scale_get_digits">
        <return-type type="gint" />
      </method>
      <method name="GetDrawValue" cname="gtk_scale_get_draw_value">
        <return-type type="gboolean" />
      </method>
      <method name="GetLayout" cname="gtk_scale_get_layout">
        <return-type type="PangoLayout*" />
      </method>
      <method name="GetLayoutOffsets" cname="gtk_scale_get_layout_offsets">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_scale_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetValuePos" cname="gtk_scale_get_value_pos">
        <return-type type="GtkPositionType" />
      </method>
      <method name="SetDigits" cname="gtk_scale_set_digits">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="digits" />
        </parameters>
      </method>
      <method name="SetDrawValue" cname="gtk_scale_set_draw_value">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="draw_value" />
        </parameters>
      </method>
      <method name="SetValuePos" cname="gtk_scale_set_value_pos">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPositionType" name="pos" />
        </parameters>
      </method>
    </object>
    <object name="Scrollbar" cname="GtkScrollbar" parent="GtkRange">
      <method name="GetType" cname="gtk_scrollbar_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <object name="ScrolledWindow" cname="GtkScrolledWindow" parent="GtkBin">
      <field name="Hscrollbar" cname="hscrollbar" type="GtkWidget*" access="public" />
      <field name="Vscrollbar" cname="vscrollbar" type="GtkWidget*" access="public" />
      <field name="HscrollbarPolicy" cname="hscrollbar_policy" bits="2" type="guint" />
      <field name="VscrollbarPolicy" cname="vscrollbar_policy" bits="2" type="guint" />
      <field name="HscrollbarVisible" cname="hscrollbar_visible" bits="1" type="guint" />
      <field name="VscrollbarVisible" cname="vscrollbar_visible" bits="1" type="guint" />
      <field name="WindowPlacement" cname="window_placement" bits="2" type="guint" />
      <field name="FocusOut" cname="focus_out" bits="1" type="guint" />
      <field name="ShadowType" cname="shadow_type" type="guint16" />
      <method name="AddWithViewport" cname="gtk_scrolled_window_add_with_viewport">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
        </parameters>
      </method>
      <method name="GetHadjustment" cname="gtk_scrolled_window_get_hadjustment">
        <return-type type="GtkAdjustment*" />
      </method>
      <method name="GetHscrollbar" cname="gtk_scrolled_window_get_hscrollbar">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetPlacement" cname="gtk_scrolled_window_get_placement">
        <return-type type="GtkCornerType" />
      </method>
      <method name="GetPolicy" cname="gtk_scrolled_window_get_policy">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPolicyType*" name="hscrollbar_policy" />
          <parameter type="GtkPolicyType*" name="vscrollbar_policy" />
        </parameters>
      </method>
      <method name="GetShadowType" cname="gtk_scrolled_window_get_shadow_type">
        <return-type type="GtkShadowType" />
      </method>
      <method name="GetType" cname="gtk_scrolled_window_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVadjustment" cname="gtk_scrolled_window_get_vadjustment">
        <return-type type="GtkAdjustment*" />
      </method>
      <method name="GetVscrollbar" cname="gtk_scrolled_window_get_vscrollbar">
        <return-type type="GtkWidget*" />
      </method>
      <constructor cname="gtk_scrolled_window_new">
        <parameters>
          <parameter type="GtkAdjustment*" name="hadjustment" />
          <parameter type="GtkAdjustment*" name="vadjustment" />
        </parameters>
      </constructor>
      <method name="SetHadjustment" cname="gtk_scrolled_window_set_hadjustment">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAdjustment*" name="hadjustment" />
        </parameters>
      </method>
      <method name="SetPlacement" cname="gtk_scrolled_window_set_placement">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCornerType" name="window_placement" />
        </parameters>
      </method>
      <method name="SetPolicy" cname="gtk_scrolled_window_set_policy">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPolicyType" name="hscrollbar_policy" />
          <parameter type="GtkPolicyType" name="vscrollbar_policy" />
        </parameters>
      </method>
      <method name="SetShadowType" cname="gtk_scrolled_window_set_shadow_type">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkShadowType" name="type" />
        </parameters>
      </method>
      <method name="SetVadjustment" cname="gtk_scrolled_window_set_vadjustment">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAdjustment*" name="vadjustment" />
        </parameters>
      </method>
      <method name="UnsetPlacement" cname="gtk_scrolled_window_unset_placement">
        <return-type type="void" />
      </method>
    </object>
    <object name="Separator" cname="GtkSeparator" parent="GtkWidget">
      <method name="GetType" cname="gtk_separator_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <object name="SeparatorMenuItem" cname="GtkSeparatorMenuItem" parent="GtkMenuItem">
      <method name="GetType" cname="gtk_separator_menu_item_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_separator_menu_item_new" />
    </object>
    <object name="SeparatorToolItem" cname="GtkSeparatorToolItem" parent="GtkToolItem">
      <field name="Priv" cname="priv" type="GtkSeparatorToolItemPrivate*" />
      <method name="GetDraw" cname="gtk_separator_tool_item_get_draw">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_separator_tool_item_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_separator_tool_item_new" />
      <method name="SetDraw" cname="gtk_separator_tool_item_set_draw">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="draw" />
        </parameters>
      </method>
    </object>
    <object name="Settings" cname="GtkSettings" parent="GObject">
      <field name="QueuedSettings" cname="queued_settings" type="GData*" />
      <field name="PropertyValues" cname="property_values" type="GtkSettingsPropertyValue*" />
      <field name="RcContext" cname="rc_context" type="GtkRcContext*" />
      <field name="Screen" cname="screen" type="GdkScreen*" />
      <method name="GetDefault" cname="gtk_settings_get_default" shared="true">
        <return-type type="GtkSettings*" />
      </method>
      <method name="GetForScreen" cname="gtk_settings_get_for_screen" shared="true">
        <return-type type="GtkSettings*" />
        <parameters>
          <parameter type="GdkScreen*" name="screen" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_settings_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="InstallProperty" cname="gtk_settings_install_property" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GParamSpec*" name="pspec" />
        </parameters>
      </method>
      <method name="InstallPropertyParser" cname="gtk_settings_install_property_parser" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GParamSpec*" name="pspec" />
          <parameter type="GtkRcPropertyParser" name="parser" />
        </parameters>
      </method>
      <method name="SetDoubleProperty" cname="gtk_settings_set_double_property">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="gdouble" name="v_double" />
          <parameter type="const-gchar*" name="origin" />
        </parameters>
      </method>
      <method name="SetLongProperty" cname="gtk_settings_set_long_property">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="glong" name="v_long" />
          <parameter type="const-gchar*" name="origin" />
        </parameters>
      </method>
      <method name="SetPropertyValue" cname="gtk_settings_set_property_value">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="const-GtkSettingsValue*" name="svalue" />
        </parameters>
      </method>
      <method name="SetStringProperty" cname="gtk_settings_set_string_property">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="const-gchar*" name="v_string" />
          <parameter type="const-gchar*" name="origin" />
        </parameters>
      </method>
    </object>
    <object name="SizeGroup" cname="GtkSizeGroup" parent="GObject">
      <field name="Widgets" cname="widgets" type="GSList*" />
      <field name="Mode" cname="mode" type="guint8" />
      <field name="HaveWidth" cname="have_width" bits="1" type="guint" />
      <field name="HaveHeight" cname="have_height" bits="1" type="guint" />
      <field name="IgnoreHidden" cname="ignore_hidden" bits="1" type="guint" />
      <field name="Requisition" cname="requisition" type="GtkRequisition" />
      <method name="AddWidget" cname="gtk_size_group_add_widget">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="GetIgnoreHidden" cname="gtk_size_group_get_ignore_hidden">
        <return-type type="gboolean" />
      </method>
      <method name="GetMode" cname="gtk_size_group_get_mode">
        <return-type type="GtkSizeGroupMode" />
      </method>
      <method name="GetType" cname="gtk_size_group_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetWidgets" cname="gtk_size_group_get_widgets">
        <return-type type="GSList*" />
      </method>
      <constructor cname="gtk_size_group_new">
        <parameters>
          <parameter type="GtkSizeGroupMode" name="mode" />
        </parameters>
      </constructor>
      <method name="RemoveWidget" cname="gtk_size_group_remove_widget">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="SetIgnoreHidden" cname="gtk_size_group_set_ignore_hidden">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="ignore_hidden" />
        </parameters>
      </method>
      <method name="SetMode" cname="gtk_size_group_set_mode">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkSizeGroupMode" name="mode" />
        </parameters>
      </method>
    </object>
    <object name="Socket" cname="GtkSocket" parent="GtkContainer">
      <field name="RequestWidth" cname="request_width" type="guint16" />
      <field name="RequestHeight" cname="request_height" type="guint16" />
      <field name="CurrentWidth" cname="current_width" type="guint16" />
      <field name="CurrentHeight" cname="current_height" type="guint16" />
      <field name="PlugWindow" cname="plug_window" type="GdkWindow*" />
      <field name="PlugWidget" cname="plug_widget" type="GtkWidget*" />
      <field name="XembedVersion" cname="xembed_version" type="gshort" />
      <field name="SameApp" cname="same_app" bits="1" type="guint" />
      <field name="FocusIn" cname="focus_in" bits="1" type="guint" />
      <field name="HaveSize" cname="have_size" bits="1" type="guint" />
      <field name="NeedMap" cname="need_map" bits="1" type="guint" />
      <field name="IsMapped" cname="is_mapped" bits="1" type="guint" />
      <field name="Active" cname="active" bits="1" type="guint" />
      <field name="AccelGroup" cname="accel_group" type="GtkAccelGroup*" />
      <field name="Toplevel" cname="toplevel" type="GtkWidget*" />
      <method name="AddId" cname="gtk_socket_add_id">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkNativeWindow" name="window_id" />
        </parameters>
      </method>
      <method name="GetId" cname="gtk_socket_get_id">
        <return-type type="GdkNativeWindow" />
      </method>
      <method name="GetType" cname="gtk_socket_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_socket_new" />
      <method name="Steal" cname="gtk_socket_steal" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkNativeWindow" name="wid" />
        </parameters>
      </method>
    </object>
    <object name="SpinButton" cname="GtkSpinButton" parent="GtkEntry">
      <field name="Adjustment" cname="adjustment" type="GtkAdjustment*" />
      <field name="Panel" cname="panel" type="GdkWindow*" />
      <field name="Timer" cname="timer" type="guint32" />
      <field name="ClimbRate" cname="climb_rate" type="gdouble" />
      <field name="TimerStep" cname="timer_step" type="gdouble" />
      <field name="UpdatePolicy" cname="update_policy" type="GtkSpinButtonUpdatePolicy" />
      <field name="InChild" cname="in_child" bits="2" type="guint" />
      <field name="ClickChild" cname="click_child" bits="2" type="guint" />
      <field name="Button" cname="button" bits="2" type="guint" />
      <field name="NeedTimer" cname="need_timer" bits="1" type="guint" />
      <field name="TimerCalls" cname="timer_calls" bits="3" type="guint" />
      <field name="Digits" cname="digits" bits="10" type="guint" />
      <field name="Numeric" cname="numeric" bits="1" type="guint" />
      <field name="Wrap" cname="wrap" bits="1" type="guint" />
      <field name="SnapToTicks" cname="snap_to_ticks" bits="1" type="guint" />
      <method name="Configure" cname="gtk_spin_button_configure">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
          <parameter type="gdouble" name="climb_rate" />
          <parameter type="guint" name="digits" />
        </parameters>
      </method>
      <method name="GetAdjustment" cname="gtk_spin_button_get_adjustment">
        <return-type type="GtkAdjustment*" />
      </method>
      <method name="GetDigits" cname="gtk_spin_button_get_digits">
        <return-type type="guint" />
      </method>
      <method name="GetIncrements" cname="gtk_spin_button_get_increments">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble*" name="step" />
          <parameter type="gdouble*" name="page" />
        </parameters>
      </method>
      <method name="GetNumeric" cname="gtk_spin_button_get_numeric">
        <return-type type="gboolean" />
      </method>
      <method name="GetRange" cname="gtk_spin_button_get_range">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble*" name="min" />
          <parameter type="gdouble*" name="max" />
        </parameters>
      </method>
      <method name="GetSnapToTicks" cname="gtk_spin_button_get_snap_to_ticks">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_spin_button_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUpdatePolicy" cname="gtk_spin_button_get_update_policy">
        <return-type type="GtkSpinButtonUpdatePolicy" />
      </method>
      <method name="GetValue" cname="gtk_spin_button_get_value">
        <return-type type="gdouble" />
      </method>
      <method name="GetValueAsInt" cname="gtk_spin_button_get_value_as_int">
        <return-type type="gint" />
      </method>
      <method name="GetWrap" cname="gtk_spin_button_get_wrap">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gtk_spin_button_new">
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
          <parameter type="gdouble" name="climb_rate" />
          <parameter type="guint" name="digits" />
        </parameters>
      </constructor>
      <constructor cname="gtk_spin_button_new_with_range">
        <parameters>
          <parameter type="gdouble" name="min" />
          <parameter type="gdouble" name="max" />
          <parameter type="gdouble" name="step" />
        </parameters>
      </constructor>
      <method name="SetAdjustment" cname="gtk_spin_button_set_adjustment">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </method>
      <method name="SetDigits" cname="gtk_spin_button_set_digits">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="digits" />
        </parameters>
      </method>
      <method name="SetIncrements" cname="gtk_spin_button_set_increments">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="step" />
          <parameter type="gdouble" name="page" />
        </parameters>
      </method>
      <method name="SetNumeric" cname="gtk_spin_button_set_numeric">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="numeric" />
        </parameters>
      </method>
      <method name="SetRange" cname="gtk_spin_button_set_range">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="min" />
          <parameter type="gdouble" name="max" />
        </parameters>
      </method>
      <method name="SetSnapToTicks" cname="gtk_spin_button_set_snap_to_ticks">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="snap_to_ticks" />
        </parameters>
      </method>
      <method name="SetUpdatePolicy" cname="gtk_spin_button_set_update_policy">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkSpinButtonUpdatePolicy" name="policy" />
        </parameters>
      </method>
      <method name="SetValue" cname="gtk_spin_button_set_value">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="value" />
        </parameters>
      </method>
      <method name="SetWrap" cname="gtk_spin_button_set_wrap">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="wrap" />
        </parameters>
      </method>
      <method name="Spin" cname="gtk_spin_button_spin">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkSpinType" name="direction" />
          <parameter type="gdouble" name="increment" />
        </parameters>
      </method>
      <method name="Update" cname="gtk_spin_button_update">
        <return-type type="void" />
      </method>
    </object>
    <object name="Statusbar" cname="GtkStatusbar" parent="GtkHBox">
      <field name="Frame" cname="frame" type="GtkWidget*" />
      <field name="Label" cname="label" type="GtkWidget*" />
      <field name="Messages" cname="messages" type="GSList*" />
      <field name="Keys" cname="keys" type="GSList*" />
      <field name="SeqContextId" cname="seq_context_id" type="guint" />
      <field name="SeqMessageId" cname="seq_message_id" type="guint" />
      <field name="GripWindow" cname="grip_window" type="GdkWindow*" />
      <field name="HasResizeGrip" cname="has_resize_grip" bits="1" type="guint" />
      <method name="GetContextId" cname="gtk_statusbar_get_context_id">
        <return-type type="guint" />
        <parameters>
          <parameter type="const-gchar*" name="context_description" />
        </parameters>
      </method>
      <method name="GetHasResizeGrip" cname="gtk_statusbar_get_has_resize_grip">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_statusbar_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_statusbar_new" />
      <method name="Pop" cname="gtk_statusbar_pop">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="context_id" />
        </parameters>
      </method>
      <method name="Push" cname="gtk_statusbar_push">
        <return-type type="guint" />
        <parameters>
          <parameter type="guint" name="context_id" />
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </method>
      <method name="Remove" cname="gtk_statusbar_remove">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="context_id" />
          <parameter type="guint" name="message_id" />
        </parameters>
      </method>
      <method name="SetHasResizeGrip" cname="gtk_statusbar_set_has_resize_grip">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
    </object>
    <object name="StatusIcon" cname="GtkStatusIcon" parent="GObject">
      <field name="Priv" cname="priv" type="GtkStatusIconPrivate*" />
      <method name="GetBlinking" cname="gtk_status_icon_get_blinking">
        <return-type type="gboolean" />
      </method>
      <method name="GetGeometry" cname="gtk_status_icon_get_geometry">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkScreen**" name="screen" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkOrientation*" name="orientation" />
        </parameters>
      </method>
      <method name="GetIconName" cname="gtk_status_icon_get_icon_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetPixbuf" cname="gtk_status_icon_get_pixbuf">
        <return-type type="GdkPixbuf*" />
      </method>
      <method name="GetSize" cname="gtk_status_icon_get_size">
        <return-type type="gint" />
      </method>
      <method name="GetStock" cname="gtk_status_icon_get_stock">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetStorageType" cname="gtk_status_icon_get_storage_type">
        <return-type type="GtkImageType" />
      </method>
      <method name="GetType" cname="gtk_status_icon_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVisible" cname="gtk_status_icon_get_visible">
        <return-type type="gboolean" />
      </method>
      <method name="IsEmbedded" cname="gtk_status_icon_is_embedded">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gtk_status_icon_new" />
      <constructor cname="gtk_status_icon_new_from_file">
        <parameters>
          <parameter type="const-gchar*" name="filename" />
        </parameters>
      </constructor>
      <constructor cname="gtk_status_icon_new_from_icon_name">
        <parameters>
          <parameter type="const-gchar*" name="icon_name" />
        </parameters>
      </constructor>
      <constructor cname="gtk_status_icon_new_from_pixbuf">
        <parameters>
          <parameter type="GdkPixbuf*" name="pixbuf" />
        </parameters>
      </constructor>
      <constructor cname="gtk_status_icon_new_from_stock">
        <parameters>
          <parameter type="const-gchar*" name="stock_id" />
        </parameters>
      </constructor>
      <method name="PositionMenu" cname="gtk_status_icon_position_menu" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkMenu*" name="menu" />
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
          <parameter type="gboolean*" name="push_in" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="SetBlinking" cname="gtk_status_icon_set_blinking">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="blinking" />
        </parameters>
      </method>
      <method name="SetFromFile" cname="gtk_status_icon_set_from_file">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
        </parameters>
      </method>
      <method name="SetFromIconName" cname="gtk_status_icon_set_from_icon_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="icon_name" />
        </parameters>
      </method>
      <method name="SetFromPixbuf" cname="gtk_status_icon_set_from_pixbuf">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixbuf*" name="pixbuf" />
        </parameters>
      </method>
      <method name="SetFromStock" cname="gtk_status_icon_set_from_stock">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="stock_id" />
        </parameters>
      </method>
      <method name="SetTooltip" cname="gtk_status_icon_set_tooltip">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="tooltip_text" />
        </parameters>
      </method>
      <method name="SetVisible" cname="gtk_status_icon_set_visible">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="visible" />
        </parameters>
      </method>
    </object>
    <object name="Style" cname="GtkStyle" parent="GObject">
      <field name="Fg" cname="fg" array_len="5" type="GdkColor" access="public" />
      <field name="Bg" cname="bg" array_len="5" type="GdkColor" access="public" />
      <field name="Light" cname="light" array_len="5" type="GdkColor" access="public" />
      <field name="Dark" cname="dark" array_len="5" type="GdkColor" access="public" />
      <field name="Mid" cname="mid" array_len="5" type="GdkColor" access="public" />
      <field name="Text" cname="text" array_len="5" type="GdkColor" access="public" />
      <field name="Base" cname="base" array_len="5" type="GdkColor" access="public" />
      <field name="TextAa" cname="text_aa" array_len="5" type="GdkColor" access="public" />
      <field name="Black" cname="black" type="GdkColor" access="public" />
      <field name="White" cname="white" type="GdkColor" access="public" />
      <field name="FontDesc" cname="font_desc" type="PangoFontDescription*" access="public" />
      <field name="Xthickness" cname="xthickness" type="gint" access="public" />
      <field name="Ythickness" cname="ythickness" type="gint" access="public" />
      <field name="FgGc" cname="fg_gc" array_len="5" type="GdkGC*" access="public" />
      <field name="BgGc" cname="bg_gc" array_len="5" type="GdkGC*" access="public" />
      <field name="LightGc" cname="light_gc" array_len="5" type="GdkGC*" access="public" />
      <field name="DarkGc" cname="dark_gc" array_len="5" type="GdkGC*" access="public" />
      <field name="MidGc" cname="mid_gc" array_len="5" type="GdkGC*" access="public" />
      <field name="TextGc" cname="text_gc" array_len="5" type="GdkGC*" access="public" />
      <field name="BaseGc" cname="base_gc" array_len="5" type="GdkGC*" access="public" />
      <field name="TextAaGc" cname="text_aa_gc" array_len="5" type="GdkGC*" access="public" />
      <field name="BlackGc" cname="black_gc" type="GdkGC*" access="public" />
      <field name="WhiteGc" cname="white_gc" type="GdkGC*" access="public" />
      <field name="BgPixmap" cname="bg_pixmap" array_len="5" type="GdkPixmap*" access="public" />
      <field name="AttachCount" cname="attach_count" type="gint" />
      <field name="Depth" cname="depth" type="gint" />
      <field name="Colormap" cname="colormap" type="GdkColormap*" />
      <field name="PrivateFont" cname="private_font" type="GdkFont*" />
      <field name="PrivateFontDesc" cname="private_font_desc" type="PangoFontDescription*" />
      <field name="RcStyle" cname="rc_style" type="GtkRcStyle*" />
      <field name="Styles" cname="styles" type="GSList*" />
      <field name="PropertyCache" cname="property_cache" type="GArray*" />
      <field name="IconFactories" cname="icon_factories" type="GSList*" />
      <method name="ApplyDefaultBackground" cname="gtk_style_apply_default_background">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="gboolean" name="set_bg" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="Attach" cname="gtk_style_attach">
        <return-type type="GtkStyle*" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
        </parameters>
      </method>
      <method name="Copy" cname="gtk_style_copy">
        <return-type type="GtkStyle*" owned="true" />
      </method>
      <method name="Detach" cname="gtk_style_detach">
        <return-type type="void" />
      </method>
      <method name="GetFont" cname="gtk_style_get_font" deprecated="1">
        <return-type type="GdkFont*" />
      </method>
      <method name="GetType" cname="gtk_style_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="LookupColor" cname="gtk_style_lookup_color">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="color_name" />
          <parameter type="GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="LookupIconSet" cname="gtk_style_lookup_icon_set">
        <return-type type="GtkIconSet*" />
        <parameters>
          <parameter type="const-gchar*" name="stock_id" />
        </parameters>
      </method>
      <constructor cname="gtk_style_new" />
      <method name="Ref" cname="gtk_style_ref" deprecated="1">
        <return-type type="GtkStyle*" />
      </method>
      <method name="RenderIcon" cname="gtk_style_render_icon">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="const-GtkIconSource*" name="source" />
          <parameter type="GtkTextDirection" name="direction" />
          <parameter type="GtkStateType" name="state" />
          <parameter type="GtkIconSize" name="size" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
        </parameters>
      </method>
      <method name="SetBackground" cname="gtk_style_set_background">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
        </parameters>
      </method>
      <method name="SetFont" cname="gtk_style_set_font" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkFont*" name="font" />
        </parameters>
      </method>
      <method name="Unref" cname="gtk_style_unref" deprecated="1">
        <return-type type="void" />
      </method>
    </object>
    <object name="Table" cname="GtkTable" parent="GtkContainer">
      <field name="Children" cname="children" type="GList*" />
      <field name="Rows" cname="rows" type="GtkTableRowCol*" />
      <field name="Cols" cname="cols" type="GtkTableRowCol*" />
      <field name="Nrows" cname="nrows" type="guint16" />
      <field name="Ncols" cname="ncols" type="guint16" />
      <field name="ColumnSpacing" cname="column_spacing" type="guint16" />
      <field name="RowSpacing" cname="row_spacing" type="guint16" />
      <field name="Homogeneous" cname="homogeneous" bits="1" type="guint" />
      <method name="Attach" cname="gtk_table_attach">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="guint" name="left_attach" />
          <parameter type="guint" name="right_attach" />
          <parameter type="guint" name="top_attach" />
          <parameter type="guint" name="bottom_attach" />
          <parameter type="GtkAttachOptions" name="xoptions" />
          <parameter type="GtkAttachOptions" name="yoptions" />
          <parameter type="guint" name="xpadding" />
          <parameter type="guint" name="ypadding" />
        </parameters>
      </method>
      <method name="AttachDefaults" cname="gtk_table_attach_defaults">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="guint" name="left_attach" />
          <parameter type="guint" name="right_attach" />
          <parameter type="guint" name="top_attach" />
          <parameter type="guint" name="bottom_attach" />
        </parameters>
      </method>
      <method name="GetColSpacing" cname="gtk_table_get_col_spacing">
        <return-type type="guint" />
        <parameters>
          <parameter type="guint" name="column" />
        </parameters>
      </method>
      <method name="GetDefaultColSpacing" cname="gtk_table_get_default_col_spacing">
        <return-type type="guint" />
      </method>
      <method name="GetDefaultRowSpacing" cname="gtk_table_get_default_row_spacing">
        <return-type type="guint" />
      </method>
      <method name="GetHomogeneous" cname="gtk_table_get_homogeneous">
        <return-type type="gboolean" />
      </method>
      <method name="GetRowSpacing" cname="gtk_table_get_row_spacing">
        <return-type type="guint" />
        <parameters>
          <parameter type="guint" name="row" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_table_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_table_new">
        <parameters>
          <parameter type="guint" name="rows" />
          <parameter type="guint" name="columns" />
          <parameter type="gboolean" name="homogeneous" />
        </parameters>
      </constructor>
      <method name="Resize" cname="gtk_table_resize">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="rows" />
          <parameter type="guint" name="columns" />
        </parameters>
      </method>
      <method name="SetColSpacing" cname="gtk_table_set_col_spacing">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="column" />
          <parameter type="guint" name="spacing" />
        </parameters>
      </method>
      <method name="SetColSpacings" cname="gtk_table_set_col_spacings">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="spacing" />
        </parameters>
      </method>
      <method name="SetHomogeneous" cname="gtk_table_set_homogeneous">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="homogeneous" />
        </parameters>
      </method>
      <method name="SetRowSpacing" cname="gtk_table_set_row_spacing">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="row" />
          <parameter type="guint" name="spacing" />
        </parameters>
      </method>
      <method name="SetRowSpacings" cname="gtk_table_set_row_spacings">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="spacing" />
        </parameters>
      </method>
    </object>
    <object name="TearoffMenuItem" cname="GtkTearoffMenuItem" parent="GtkMenuItem">
      <field name="TornOff" cname="torn_off" bits="1" type="guint" />
      <method name="GetType" cname="gtk_tearoff_menu_item_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_tearoff_menu_item_new" />
    </object>
    <object name="TextBuffer" cname="GtkTextBuffer" parent="GObject">
      <field name="TagTable" cname="tag_table" type="GtkTextTagTable*" />
      <field name="Btree" cname="btree" type="GtkTextBTree*" />
      <field name="ClipboardContentsBuffers" cname="clipboard_contents_buffers" type="GSList*" />
      <field name="SelectionClipboards" cname="selection_clipboards" type="GSList*" />
      <field name="LogAttrCache" cname="log_attr_cache" type="GtkTextLogAttrCache*" />
      <field name="UserActionCount" cname="user_action_count" type="guint" />
      <field name="Modified" cname="modified" bits="1" type="guint" />
      <field name="HasSelection" cname="has_selection" bits="1" type="guint" />
      <method name="AddSelectionClipboard" cname="gtk_text_buffer_add_selection_clipboard">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkClipboard*" name="clipboard" />
        </parameters>
      </method>
      <method name="ApplyTag" cname="gtk_text_buffer_apply_tag">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextTag*" name="tag" />
          <parameter type="const-GtkTextIter*" name="start" />
          <parameter type="const-GtkTextIter*" name="end" />
        </parameters>
      </method>
      <method name="ApplyTagByName" cname="gtk_text_buffer_apply_tag_by_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="const-GtkTextIter*" name="start" />
          <parameter type="const-GtkTextIter*" name="end" />
        </parameters>
      </method>
      <method name="Backspace" cname="gtk_text_buffer_backspace">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="gboolean" name="interactive" />
          <parameter type="gboolean" name="default_editable" />
        </parameters>
      </method>
      <method name="BeginUserAction" cname="gtk_text_buffer_begin_user_action">
        <return-type type="void" />
      </method>
      <method name="CopyClipboard" cname="gtk_text_buffer_copy_clipboard">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkClipboard*" name="clipboard" />
        </parameters>
      </method>
      <method name="CreateChildAnchor" cname="gtk_text_buffer_create_child_anchor">
        <return-type type="GtkTextChildAnchor*" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
        </parameters>
      </method>
      <method name="CreateMark" cname="gtk_text_buffer_create_mark">
        <return-type type="GtkTextMark*" />
        <parameters>
          <parameter type="const-gchar*" name="mark_name" />
          <parameter type="const-GtkTextIter*" name="where" />
          <parameter type="gboolean" name="left_gravity" />
        </parameters>
      </method>
      <method name="CreateTag" cname="gtk_text_buffer_create_tag">
        <return-type type="GtkTextTag*" />
        <parameters>
          <parameter type="const-gchar*" name="tag_name" />
          <parameter type="const-gchar*" name="first_property_name" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="CutClipboard" cname="gtk_text_buffer_cut_clipboard">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkClipboard*" name="clipboard" />
          <parameter type="gboolean" name="default_editable" />
        </parameters>
      </method>
      <method name="Delete" cname="gtk_text_buffer_delete">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="start" />
          <parameter type="GtkTextIter*" name="end" />
        </parameters>
      </method>
      <method name="DeleteInteractive" cname="gtk_text_buffer_delete_interactive">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextIter*" name="start_iter" />
          <parameter type="GtkTextIter*" name="end_iter" />
          <parameter type="gboolean" name="default_editable" />
        </parameters>
      </method>
      <method name="DeleteMark" cname="gtk_text_buffer_delete_mark">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextMark*" name="mark" />
        </parameters>
      </method>
      <method name="DeleteMarkByName" cname="gtk_text_buffer_delete_mark_by_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="DeleteSelection" cname="gtk_text_buffer_delete_selection">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gboolean" name="interactive" />
          <parameter type="gboolean" name="default_editable" />
        </parameters>
      </method>
      <method name="Deserialize" cname="gtk_text_buffer_deserialize">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextBuffer*" name="content_buffer" />
          <parameter type="GdkAtom" name="format" />
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="const-guint8*" name="data" />
          <parameter type="gsize" name="length" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="DeserializeGetCanCreateTags" cname="gtk_text_buffer_deserialize_get_can_create_tags">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkAtom" name="format" />
        </parameters>
      </method>
      <method name="DeserializeSetCanCreateTags" cname="gtk_text_buffer_deserialize_set_can_create_tags">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkAtom" name="format" />
          <parameter type="gboolean" name="can_create_tags" />
        </parameters>
      </method>
      <method name="EndUserAction" cname="gtk_text_buffer_end_user_action">
        <return-type type="void" />
      </method>
      <method name="GetBounds" cname="gtk_text_buffer_get_bounds">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="start" />
          <parameter type="GtkTextIter*" name="end" />
        </parameters>
      </method>
      <method name="GetCharCount" cname="gtk_text_buffer_get_char_count">
        <return-type type="gint" />
      </method>
      <method name="GetCopyTargetList" cname="gtk_text_buffer_get_copy_target_list">
        <return-type type="GtkTargetList*" />
      </method>
      <method name="GetDeserializeFormats" cname="gtk_text_buffer_get_deserialize_formats">
        <return-type type="GdkAtom*" />
        <parameters>
          <parameter type="gint*" name="n_formats" />
        </parameters>
      </method>
      <method name="GetEndIter" cname="gtk_text_buffer_get_end_iter">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
        </parameters>
      </method>
      <method name="GetHasSelection" cname="gtk_text_buffer_get_has_selection">
        <return-type type="gboolean" />
      </method>
      <method name="GetInsert" cname="gtk_text_buffer_get_insert">
        <return-type type="GtkTextMark*" />
      </method>
      <method name="GetIterAtChildAnchor" cname="gtk_text_buffer_get_iter_at_child_anchor">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="GtkTextChildAnchor*" name="anchor" />
        </parameters>
      </method>
      <method name="GetIterAtLine" cname="gtk_text_buffer_get_iter_at_line">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="gint" name="line_number" />
        </parameters>
      </method>
      <method name="GetIterAtLineIndex" cname="gtk_text_buffer_get_iter_at_line_index">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="gint" name="line_number" />
          <parameter type="gint" name="byte_index" />
        </parameters>
      </method>
      <method name="GetIterAtLineOffset" cname="gtk_text_buffer_get_iter_at_line_offset">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="gint" name="line_number" />
          <parameter type="gint" name="char_offset" />
        </parameters>
      </method>
      <method name="GetIterAtMark" cname="gtk_text_buffer_get_iter_at_mark">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="GtkTextMark*" name="mark" />
        </parameters>
      </method>
      <method name="GetIterAtOffset" cname="gtk_text_buffer_get_iter_at_offset">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="gint" name="char_offset" />
        </parameters>
      </method>
      <method name="GetLineCount" cname="gtk_text_buffer_get_line_count">
        <return-type type="gint" />
      </method>
      <method name="GetMark" cname="gtk_text_buffer_get_mark">
        <return-type type="GtkTextMark*" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="GetModified" cname="gtk_text_buffer_get_modified">
        <return-type type="gboolean" />
      </method>
      <method name="GetPasteTargetList" cname="gtk_text_buffer_get_paste_target_list">
        <return-type type="GtkTargetList*" />
      </method>
      <method name="GetSelectionBound" cname="gtk_text_buffer_get_selection_bound">
        <return-type type="GtkTextMark*" />
      </method>
      <method name="GetSelectionBounds" cname="gtk_text_buffer_get_selection_bounds">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextIter*" name="start" />
          <parameter type="GtkTextIter*" name="end" />
        </parameters>
      </method>
      <method name="GetSerializeFormats" cname="gtk_text_buffer_get_serialize_formats">
        <return-type type="GdkAtom*" />
        <parameters>
          <parameter type="gint*" name="n_formats" />
        </parameters>
      </method>
      <method name="GetSlice" cname="gtk_text_buffer_get_slice">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-GtkTextIter*" name="start" />
          <parameter type="const-GtkTextIter*" name="end" />
          <parameter type="gboolean" name="include_hidden_chars" />
        </parameters>
      </method>
      <method name="GetStartIter" cname="gtk_text_buffer_get_start_iter">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
        </parameters>
      </method>
      <method name="GetTagTable" cname="gtk_text_buffer_get_tag_table">
        <return-type type="GtkTextTagTable*" />
      </method>
      <method name="GetText" cname="gtk_text_buffer_get_text">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-GtkTextIter*" name="start" />
          <parameter type="const-GtkTextIter*" name="end" />
          <parameter type="gboolean" name="include_hidden_chars" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_text_buffer_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Insert" cname="gtk_text_buffer_insert">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="const-gchar*" name="text" />
          <parameter type="gint" name="len" />
        </parameters>
      </method>
      <method name="InsertAtCursor" cname="gtk_text_buffer_insert_at_cursor">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
          <parameter type="gint" name="len" />
        </parameters>
      </method>
      <method name="InsertChildAnchor" cname="gtk_text_buffer_insert_child_anchor">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="GtkTextChildAnchor*" name="anchor" />
        </parameters>
      </method>
      <method name="InsertInteractive" cname="gtk_text_buffer_insert_interactive">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="const-gchar*" name="text" />
          <parameter type="gint" name="len" />
          <parameter type="gboolean" name="default_editable" />
        </parameters>
      </method>
      <method name="InsertInteractiveAtCursor" cname="gtk_text_buffer_insert_interactive_at_cursor">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
          <parameter type="gint" name="len" />
          <parameter type="gboolean" name="default_editable" />
        </parameters>
      </method>
      <method name="InsertPixbuf" cname="gtk_text_buffer_insert_pixbuf">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="GdkPixbuf*" name="pixbuf" />
        </parameters>
      </method>
      <method name="InsertRange" cname="gtk_text_buffer_insert_range">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="const-GtkTextIter*" name="start" />
          <parameter type="const-GtkTextIter*" name="end" />
        </parameters>
      </method>
      <method name="InsertRangeInteractive" cname="gtk_text_buffer_insert_range_interactive">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="const-GtkTextIter*" name="start" />
          <parameter type="const-GtkTextIter*" name="end" />
          <parameter type="gboolean" name="default_editable" />
        </parameters>
      </method>
      <method name="InsertWithTags" cname="gtk_text_buffer_insert_with_tags">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="const-gchar*" name="text" />
          <parameter type="gint" name="len" />
          <parameter type="GtkTextTag*" name="first_tag" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="InsertWithTagsByName" cname="gtk_text_buffer_insert_with_tags_by_name">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="const-gchar*" name="text" />
          <parameter type="gint" name="len" />
          <parameter type="const-gchar*" name="first_tag_name" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="MoveMark" cname="gtk_text_buffer_move_mark">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextMark*" name="mark" />
          <parameter type="const-GtkTextIter*" name="where" />
        </parameters>
      </method>
      <method name="MoveMarkByName" cname="gtk_text_buffer_move_mark_by_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="const-GtkTextIter*" name="where" />
        </parameters>
      </method>
      <constructor cname="gtk_text_buffer_new">
        <parameters>
          <parameter type="GtkTextTagTable*" name="table" />
        </parameters>
      </constructor>
      <method name="PasteClipboard" cname="gtk_text_buffer_paste_clipboard">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkClipboard*" name="clipboard" />
          <parameter type="GtkTextIter*" name="override_location" />
          <parameter type="gboolean" name="default_editable" />
        </parameters>
      </method>
      <method name="PlaceCursor" cname="gtk_text_buffer_place_cursor">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GtkTextIter*" name="where" />
        </parameters>
      </method>
      <method name="RegisterDeserializeFormat" cname="gtk_text_buffer_register_deserialize_format">
        <return-type type="GdkAtom" />
        <parameters>
          <parameter type="const-gchar*" name="mime_type" />
          <parameter type="GtkTextBufferDeserializeFunc" name="function" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="user_data_destroy" />
        </parameters>
      </method>
      <method name="RegisterDeserializeTagset" cname="gtk_text_buffer_register_deserialize_tagset">
        <return-type type="GdkAtom" />
        <parameters>
          <parameter type="const-gchar*" name="tagset_name" />
        </parameters>
      </method>
      <method name="RegisterSerializeFormat" cname="gtk_text_buffer_register_serialize_format">
        <return-type type="GdkAtom" />
        <parameters>
          <parameter type="const-gchar*" name="mime_type" />
          <parameter type="GtkTextBufferSerializeFunc" name="function" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="user_data_destroy" />
        </parameters>
      </method>
      <method name="RegisterSerializeTagset" cname="gtk_text_buffer_register_serialize_tagset">
        <return-type type="GdkAtom" />
        <parameters>
          <parameter type="const-gchar*" name="tagset_name" />
        </parameters>
      </method>
      <method name="RemoveAllTags" cname="gtk_text_buffer_remove_all_tags">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GtkTextIter*" name="start" />
          <parameter type="const-GtkTextIter*" name="end" />
        </parameters>
      </method>
      <method name="RemoveSelectionClipboard" cname="gtk_text_buffer_remove_selection_clipboard">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkClipboard*" name="clipboard" />
        </parameters>
      </method>
      <method name="RemoveTag" cname="gtk_text_buffer_remove_tag">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextTag*" name="tag" />
          <parameter type="const-GtkTextIter*" name="start" />
          <parameter type="const-GtkTextIter*" name="end" />
        </parameters>
      </method>
      <method name="RemoveTagByName" cname="gtk_text_buffer_remove_tag_by_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="const-GtkTextIter*" name="start" />
          <parameter type="const-GtkTextIter*" name="end" />
        </parameters>
      </method>
      <method name="SelectRange" cname="gtk_text_buffer_select_range">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GtkTextIter*" name="ins" />
          <parameter type="const-GtkTextIter*" name="bound" />
        </parameters>
      </method>
      <method name="Serialize" cname="gtk_text_buffer_serialize">
        <return-type type="guint8*" />
        <parameters>
          <parameter type="GtkTextBuffer*" name="content_buffer" />
          <parameter type="GdkAtom" name="format" />
          <parameter type="const-GtkTextIter*" name="start" />
          <parameter type="const-GtkTextIter*" name="end" />
          <parameter type="gsize*" name="length" />
        </parameters>
      </method>
      <method name="SetModified" cname="gtk_text_buffer_set_modified">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetText" cname="gtk_text_buffer_set_text">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
          <parameter type="gint" name="len" />
        </parameters>
      </method>
      <method name="UnregisterDeserializeFormat" cname="gtk_text_buffer_unregister_deserialize_format">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkAtom" name="format" />
        </parameters>
      </method>
      <method name="UnregisterSerializeFormat" cname="gtk_text_buffer_unregister_serialize_format">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkAtom" name="format" />
        </parameters>
      </method>
    </object>
    <object name="TextChildAnchor" cname="GtkTextChildAnchor" parent="GObject">
      <field name="Segment" cname="segment" type="gpointer" />
      <method name="GetDeleted" cname="gtk_text_child_anchor_get_deleted">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_text_child_anchor_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetWidgets" cname="gtk_text_child_anchor_get_widgets">
        <return-type type="GList*" />
      </method>
      <constructor cname="gtk_text_child_anchor_new" />
    </object>
    <object name="TextMark" cname="GtkTextMark" parent="GObject">
      <field name="Segment" cname="segment" type="gpointer" />
      <method name="GetBuffer" cname="gtk_text_mark_get_buffer">
        <return-type type="GtkTextBuffer*" />
      </method>
      <method name="GetDeleted" cname="gtk_text_mark_get_deleted">
        <return-type type="gboolean" />
      </method>
      <method name="GetLeftGravity" cname="gtk_text_mark_get_left_gravity">
        <return-type type="gboolean" />
      </method>
      <method name="GetName" cname="gtk_text_mark_get_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gtk_text_mark_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVisible" cname="gtk_text_mark_get_visible">
        <return-type type="gboolean" />
      </method>
      <method name="SetVisible" cname="gtk_text_mark_set_visible">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
    </object>
    <object name="TextTag" cname="GtkTextTag" parent="GObject">
      <field name="Table" cname="table" type="GtkTextTagTable*" />
      <field name="Name" cname="name" type="char*" />
      <field name="Priority" cname="priority" type="int" />
      <field name="Values" cname="values" type="GtkTextAttributes*" />
      <field name="BgColorSet" cname="bg_color_set" bits="1" type="guint" />
      <field name="BgStippleSet" cname="bg_stipple_set" bits="1" type="guint" />
      <field name="FgColorSet" cname="fg_color_set" bits="1" type="guint" />
      <field name="ScaleSet" cname="scale_set" bits="1" type="guint" />
      <field name="FgStippleSet" cname="fg_stipple_set" bits="1" type="guint" />
      <field name="JustificationSet" cname="justification_set" bits="1" type="guint" />
      <field name="LeftMarginSet" cname="left_margin_set" bits="1" type="guint" />
      <field name="IndentSet" cname="indent_set" bits="1" type="guint" />
      <field name="RiseSet" cname="rise_set" bits="1" type="guint" />
      <field name="StrikethroughSet" cname="strikethrough_set" bits="1" type="guint" />
      <field name="RightMarginSet" cname="right_margin_set" bits="1" type="guint" />
      <field name="PixelsAboveLinesSet" cname="pixels_above_lines_set" bits="1" type="guint" />
      <field name="PixelsBelowLinesSet" cname="pixels_below_lines_set" bits="1" type="guint" />
      <field name="PixelsInsideWrapSet" cname="pixels_inside_wrap_set" bits="1" type="guint" />
      <field name="TabsSet" cname="tabs_set" bits="1" type="guint" />
      <field name="UnderlineSet" cname="underline_set" bits="1" type="guint" />
      <field name="WrapModeSet" cname="wrap_mode_set" bits="1" type="guint" />
      <field name="BgFullHeightSet" cname="bg_full_height_set" bits="1" type="guint" />
      <field name="InvisibleSet" cname="invisible_set" bits="1" type="guint" />
      <field name="EditableSet" cname="editable_set" bits="1" type="guint" />
      <field name="LanguageSet" cname="language_set" bits="1" type="guint" />
      <field name="PgBgColorSet" cname="pg_bg_color_set" bits="1" type="guint" />
      <field name="Pad1" cname="pad1" bits="1" type="guint" />
      <field name="Pad2" cname="pad2" bits="1" type="guint" />
      <method name="Event" cname="gtk_text_tag_event">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GObject*" name="event_object" />
          <parameter type="GdkEvent*" name="event" />
          <parameter type="const-GtkTextIter*" name="iter" />
        </parameters>
      </method>
      <method name="GetPriority" cname="gtk_text_tag_get_priority">
        <return-type type="gint" />
      </method>
      <method name="GetType" cname="gtk_text_tag_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_text_tag_new">
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </constructor>
      <method name="SetPriority" cname="gtk_text_tag_set_priority">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="priority" />
        </parameters>
      </method>
    </object>
    <object name="TextTagTable" cname="GtkTextTagTable" parent="GObject">
      <field name="Hash" cname="hash" type="GHashTable*" />
      <field name="Anonymous" cname="anonymous" type="GSList*" />
      <field name="AnonCount" cname="anon_count" type="gint" />
      <field name="Buffers" cname="buffers" type="GSList*" />
      <method name="Add" cname="gtk_text_tag_table_add">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextTag*" name="tag" />
        </parameters>
      </method>
      <method name="Foreach" cname="gtk_text_tag_table_foreach">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextTagTableForeach" name="func" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="GetSize" cname="gtk_text_tag_table_get_size">
        <return-type type="gint" />
      </method>
      <method name="GetType" cname="gtk_text_tag_table_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Lookup" cname="gtk_text_tag_table_lookup">
        <return-type type="GtkTextTag*" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <constructor cname="gtk_text_tag_table_new" />
      <method name="Remove" cname="gtk_text_tag_table_remove">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextTag*" name="tag" />
        </parameters>
      </method>
    </object>
    <object name="TextView" cname="GtkTextView" parent="GtkContainer">
      <field name="Layout" cname="layout" type="struct-_GtkTextLayout*" />
      <field name="Buffer" cname="buffer" type="GtkTextBuffer*" />
      <field name="SelectionDragHandler" cname="selection_drag_handler" type="guint" />
      <field name="ScrollTimeout" cname="scroll_timeout" type="guint" />
      <field name="PixelsAboveLines" cname="pixels_above_lines" type="gint" />
      <field name="PixelsBelowLines" cname="pixels_below_lines" type="gint" />
      <field name="PixelsInsideWrap" cname="pixels_inside_wrap" type="gint" />
      <field name="WrapMode" cname="wrap_mode" type="GtkWrapMode" />
      <field name="Justify" cname="justify" type="GtkJustification" />
      <field name="LeftMargin" cname="left_margin" type="gint" />
      <field name="RightMargin" cname="right_margin" type="gint" />
      <field name="Indent" cname="indent" type="gint" />
      <field name="Tabs" cname="tabs" type="PangoTabArray*" />
      <field name="Editable" cname="editable" bits="1" type="guint" />
      <field name="OverwriteMode" cname="overwrite_mode" bits="1" type="guint" />
      <field name="CursorVisible" cname="cursor_visible" bits="1" type="guint" />
      <field name="NeedImReset" cname="need_im_reset" bits="1" type="guint" />
      <field name="AcceptsTab" cname="accepts_tab" bits="1" type="guint" />
      <field name="WidthChanged" cname="width_changed" bits="1" type="guint" />
      <field name="OnscreenValidated" cname="onscreen_validated" bits="1" type="guint" />
      <field name="MouseCursorObscured" cname="mouse_cursor_obscured" bits="1" type="guint" />
      <field name="TextWindow" cname="text_window" type="GtkTextWindow*" />
      <field name="LeftWindow" cname="left_window" type="GtkTextWindow*" />
      <field name="RightWindow" cname="right_window" type="GtkTextWindow*" />
      <field name="TopWindow" cname="top_window" type="GtkTextWindow*" />
      <field name="BottomWindow" cname="bottom_window" type="GtkTextWindow*" />
      <field name="Hadjustment" cname="hadjustment" type="GtkAdjustment*" />
      <field name="Vadjustment" cname="vadjustment" type="GtkAdjustment*" />
      <field name="Xoffset" cname="xoffset" type="gint" />
      <field name="Yoffset" cname="yoffset" type="gint" />
      <field name="Width" cname="width" type="gint" />
      <field name="Height" cname="height" type="gint" />
      <field name="VirtualCursorX" cname="virtual_cursor_x" type="gint" />
      <field name="VirtualCursorY" cname="virtual_cursor_y" type="gint" />
      <field name="FirstParaMark" cname="first_para_mark" type="GtkTextMark*" />
      <field name="FirstParaPixels" cname="first_para_pixels" type="gint" />
      <field name="DndMark" cname="dnd_mark" type="GtkTextMark*" />
      <field name="BlinkTimeout" cname="blink_timeout" type="guint" />
      <field name="FirstValidateIdle" cname="first_validate_idle" type="guint" />
      <field name="IncrementalValidateIdle" cname="incremental_validate_idle" type="guint" />
      <field name="ImContext" cname="im_context" type="GtkIMContext*" />
      <field name="PopupMenu" cname="popup_menu" type="GtkWidget*" />
      <field name="DragStartX" cname="drag_start_x" type="gint" />
      <field name="DragStartY" cname="drag_start_y" type="gint" />
      <field name="Children" cname="children" type="GSList*" />
      <field name="PendingScroll" cname="pending_scroll" type="GtkTextPendingScroll*" />
      <field name="PendingPlaceCursorButton" cname="pending_place_cursor_button" type="gint" />
      <method name="AddChildAtAnchor" cname="gtk_text_view_add_child_at_anchor">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="GtkTextChildAnchor*" name="anchor" />
        </parameters>
      </method>
      <method name="AddChildInWindow" cname="gtk_text_view_add_child_in_window">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="GtkTextWindowType" name="which_window" />
          <parameter type="gint" name="xpos" />
          <parameter type="gint" name="ypos" />
        </parameters>
      </method>
      <method name="BackwardDisplayLine" cname="gtk_text_view_backward_display_line">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
        </parameters>
      </method>
      <method name="BackwardDisplayLineStart" cname="gtk_text_view_backward_display_line_start">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
        </parameters>
      </method>
      <method name="BufferToWindowCoords" cname="gtk_text_view_buffer_to_window_coords">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextWindowType" name="win" />
          <parameter type="gint" name="buffer_x" />
          <parameter type="gint" name="buffer_y" />
          <parameter type="gint*" name="window_x" />
          <parameter type="gint*" name="window_y" />
        </parameters>
      </method>
      <method name="ForwardDisplayLine" cname="gtk_text_view_forward_display_line">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
        </parameters>
      </method>
      <method name="ForwardDisplayLineEnd" cname="gtk_text_view_forward_display_line_end">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
        </parameters>
      </method>
      <method name="GetAcceptsTab" cname="gtk_text_view_get_accepts_tab">
        <return-type type="gboolean" />
      </method>
      <method name="GetBorderWindowSize" cname="gtk_text_view_get_border_window_size">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkTextWindowType" name="type" />
        </parameters>
      </method>
      <method name="GetBuffer" cname="gtk_text_view_get_buffer">
        <return-type type="GtkTextBuffer*" />
      </method>
      <method name="GetCursorVisible" cname="gtk_text_view_get_cursor_visible">
        <return-type type="gboolean" />
      </method>
      <method name="GetDefaultAttributes" cname="gtk_text_view_get_default_attributes">
        <return-type type="GtkTextAttributes*" />
      </method>
      <method name="GetEditable" cname="gtk_text_view_get_editable">
        <return-type type="gboolean" />
      </method>
      <method name="GetIndent" cname="gtk_text_view_get_indent">
        <return-type type="gint" />
      </method>
      <method name="GetIterAtLocation" cname="gtk_text_view_get_iter_at_location">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="GetIterAtPosition" cname="gtk_text_view_get_iter_at_position">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="gint*" name="trailing" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="GetIterLocation" cname="gtk_text_view_get_iter_location">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GtkTextIter*" name="iter" />
          <parameter type="GdkRectangle*" name="location" />
        </parameters>
      </method>
      <method name="GetJustification" cname="gtk_text_view_get_justification">
        <return-type type="GtkJustification" />
      </method>
      <method name="GetLeftMargin" cname="gtk_text_view_get_left_margin">
        <return-type type="gint" />
      </method>
      <method name="GetLineAtY" cname="gtk_text_view_get_line_at_y">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="target_iter" />
          <parameter type="gint" name="y" />
          <parameter type="gint*" name="line_top" />
        </parameters>
      </method>
      <method name="GetLineYrange" cname="gtk_text_view_get_line_yrange">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GtkTextIter*" name="iter" />
          <parameter type="gint*" name="y" />
          <parameter type="gint*" name="height" />
        </parameters>
      </method>
      <method name="GetOverwrite" cname="gtk_text_view_get_overwrite">
        <return-type type="gboolean" />
      </method>
      <method name="GetPixelsAboveLines" cname="gtk_text_view_get_pixels_above_lines">
        <return-type type="gint" />
      </method>
      <method name="GetPixelsBelowLines" cname="gtk_text_view_get_pixels_below_lines">
        <return-type type="gint" />
      </method>
      <method name="GetPixelsInsideWrap" cname="gtk_text_view_get_pixels_inside_wrap">
        <return-type type="gint" />
      </method>
      <method name="GetRightMargin" cname="gtk_text_view_get_right_margin">
        <return-type type="gint" />
      </method>
      <method name="GetTabs" cname="gtk_text_view_get_tabs">
        <return-type type="PangoTabArray*" />
      </method>
      <method name="GetType" cname="gtk_text_view_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVisibleRect" cname="gtk_text_view_get_visible_rect">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRectangle*" name="visible_rect" />
        </parameters>
      </method>
      <method name="GetWindow" cname="gtk_text_view_get_window">
        <return-type type="GdkWindow*" />
        <parameters>
          <parameter type="GtkTextWindowType" name="win" />
        </parameters>
      </method>
      <method name="GetWindowType" cname="gtk_text_view_get_window_type">
        <return-type type="GtkTextWindowType" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
        </parameters>
      </method>
      <method name="GetWrapMode" cname="gtk_text_view_get_wrap_mode">
        <return-type type="GtkWrapMode" />
      </method>
      <method name="MoveChild" cname="gtk_text_view_move_child">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="gint" name="xpos" />
          <parameter type="gint" name="ypos" />
        </parameters>
      </method>
      <method name="MoveMarkOnscreen" cname="gtk_text_view_move_mark_onscreen">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextMark*" name="mark" />
        </parameters>
      </method>
      <method name="MoveVisually" cname="gtk_text_view_move_visually">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="gint" name="count" />
        </parameters>
      </method>
      <constructor cname="gtk_text_view_new" />
      <constructor cname="gtk_text_view_new_with_buffer">
        <parameters>
          <parameter type="GtkTextBuffer*" name="buffer" />
        </parameters>
      </constructor>
      <method name="PlaceCursorOnscreen" cname="gtk_text_view_place_cursor_onscreen">
        <return-type type="gboolean" />
      </method>
      <method name="ScrollMarkOnscreen" cname="gtk_text_view_scroll_mark_onscreen">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextMark*" name="mark" />
        </parameters>
      </method>
      <method name="ScrollToIter" cname="gtk_text_view_scroll_to_iter">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="gdouble" name="within_margin" />
          <parameter type="gboolean" name="use_align" />
          <parameter type="gdouble" name="xalign" />
          <parameter type="gdouble" name="yalign" />
        </parameters>
      </method>
      <method name="ScrollToMark" cname="gtk_text_view_scroll_to_mark">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextMark*" name="mark" />
          <parameter type="gdouble" name="within_margin" />
          <parameter type="gboolean" name="use_align" />
          <parameter type="gdouble" name="xalign" />
          <parameter type="gdouble" name="yalign" />
        </parameters>
      </method>
      <method name="SetAcceptsTab" cname="gtk_text_view_set_accepts_tab">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="accepts_tab" />
        </parameters>
      </method>
      <method name="SetBorderWindowSize" cname="gtk_text_view_set_border_window_size">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextWindowType" name="type" />
          <parameter type="gint" name="size" />
        </parameters>
      </method>
      <method name="SetBuffer" cname="gtk_text_view_set_buffer">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextBuffer*" name="buffer" />
        </parameters>
      </method>
      <method name="SetCursorVisible" cname="gtk_text_view_set_cursor_visible">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetEditable" cname="gtk_text_view_set_editable">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetIndent" cname="gtk_text_view_set_indent">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="indent" />
        </parameters>
      </method>
      <method name="SetJustification" cname="gtk_text_view_set_justification">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkJustification" name="justification" />
        </parameters>
      </method>
      <method name="SetLeftMargin" cname="gtk_text_view_set_left_margin">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="left_margin" />
        </parameters>
      </method>
      <method name="SetOverwrite" cname="gtk_text_view_set_overwrite">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="overwrite" />
        </parameters>
      </method>
      <method name="SetPixelsAboveLines" cname="gtk_text_view_set_pixels_above_lines">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="pixels_above_lines" />
        </parameters>
      </method>
      <method name="SetPixelsBelowLines" cname="gtk_text_view_set_pixels_below_lines">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="pixels_below_lines" />
        </parameters>
      </method>
      <method name="SetPixelsInsideWrap" cname="gtk_text_view_set_pixels_inside_wrap">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="pixels_inside_wrap" />
        </parameters>
      </method>
      <method name="SetRightMargin" cname="gtk_text_view_set_right_margin">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="right_margin" />
        </parameters>
      </method>
      <method name="SetTabs" cname="gtk_text_view_set_tabs">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoTabArray*" name="tabs" />
        </parameters>
      </method>
      <method name="SetWrapMode" cname="gtk_text_view_set_wrap_mode">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWrapMode" name="wrap_mode" />
        </parameters>
      </method>
      <method name="StartsDisplayLine" cname="gtk_text_view_starts_display_line">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GtkTextIter*" name="iter" />
        </parameters>
      </method>
      <method name="WindowToBufferCoords" cname="gtk_text_view_window_to_buffer_coords">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextWindowType" name="win" />
          <parameter type="gint" name="window_x" />
          <parameter type="gint" name="window_y" />
          <parameter type="gint*" name="buffer_x" />
          <parameter type="gint*" name="buffer_y" />
        </parameters>
      </method>
    </object>
    <object name="TipsQuery" cname="GtkTipsQuery" deprecated="1" parent="GtkLabel">
      <field name="EmitAlways" cname="emit_always" bits="1" type="guint" />
      <field name="InQuery" cname="in_query" bits="1" type="guint" />
      <field name="LabelInactive" cname="label_inactive" type="gchar*" />
      <field name="LabelNoTip" cname="label_no_tip" type="gchar*" />
      <field name="Caller" cname="caller" type="GtkWidget*" />
      <field name="LastCrossed" cname="last_crossed" type="GtkWidget*" />
      <field name="QueryCursor" cname="query_cursor" type="GdkCursor*" />
      <method name="GetType" cname="gtk_tips_query_get_type" deprecated="1" shared="true">
        <return-type type="GtkType" />
      </method>
      <constructor cname="gtk_tips_query_new" deprecated="1" />
      <method name="SetCaller" cname="gtk_tips_query_set_caller" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="caller" />
        </parameters>
      </method>
      <method name="SetLabels" cname="gtk_tips_query_set_labels" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="label_inactive" />
          <parameter type="const-gchar*" name="label_no_tip" />
        </parameters>
      </method>
      <method name="StartQuery" cname="gtk_tips_query_start_query" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="StopQuery" cname="gtk_tips_query_stop_query" deprecated="1">
        <return-type type="void" />
      </method>
    </object>
    <object name="ToggleAction" cname="GtkToggleAction" parent="GtkAction">
      <field name="PrivateData" cname="private_data" type="GtkToggleActionPrivate*" />
      <method name="GetActive" cname="gtk_toggle_action_get_active">
        <return-type type="gboolean" />
      </method>
      <method name="GetDrawAsRadio" cname="gtk_toggle_action_get_draw_as_radio">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_toggle_action_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_toggle_action_new">
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="const-gchar*" name="label" />
          <parameter type="const-gchar*" name="tooltip" />
          <parameter type="const-gchar*" name="stock_id" />
        </parameters>
      </constructor>
      <method name="SetActive" cname="gtk_toggle_action_set_active">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="is_active" />
        </parameters>
      </method>
      <method name="SetDrawAsRadio" cname="gtk_toggle_action_set_draw_as_radio">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="draw_as_radio" />
        </parameters>
      </method>
      <method name="Toggled" cname="gtk_toggle_action_toggled">
        <return-type type="void" />
      </method>
    </object>
    <object name="ToggleButton" cname="GtkToggleButton" parent="GtkButton">
      <field name="Active" cname="active" bits="1" type="guint" />
      <field name="DrawIndicator" cname="draw_indicator" bits="1" type="guint" />
      <field name="Inconsistent" cname="inconsistent" bits="1" type="guint" />
      <method name="GetActive" cname="gtk_toggle_button_get_active">
        <return-type type="gboolean" />
      </method>
      <method name="GetInconsistent" cname="gtk_toggle_button_get_inconsistent">
        <return-type type="gboolean" />
      </method>
      <method name="GetMode" cname="gtk_toggle_button_get_mode">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_toggle_button_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_toggle_button_new" />
      <constructor cname="gtk_toggle_button_new_with_label">
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <constructor cname="gtk_toggle_button_new_with_mnemonic">
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <method name="SetActive" cname="gtk_toggle_button_set_active">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="is_active" />
        </parameters>
      </method>
      <method name="SetInconsistent" cname="gtk_toggle_button_set_inconsistent">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetMode" cname="gtk_toggle_button_set_mode">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="draw_indicator" />
        </parameters>
      </method>
      <method name="Toggled" cname="gtk_toggle_button_toggled">
        <return-type type="void" />
      </method>
    </object>
    <object name="ToggleToolButton" cname="GtkToggleToolButton" parent="GtkToolButton">
      <field name="Priv" cname="priv" type="GtkToggleToolButtonPrivate*" />
      <method name="GetActive" cname="gtk_toggle_tool_button_get_active">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_toggle_tool_button_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_toggle_tool_button_new" />
      <constructor cname="gtk_toggle_tool_button_new_from_stock">
        <parameters>
          <parameter type="const-gchar*" name="stock_id" />
        </parameters>
      </constructor>
      <method name="SetActive" cname="gtk_toggle_tool_button_set_active">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="is_active" />
        </parameters>
      </method>
    </object>
    <object name="Toolbar" cname="GtkToolbar" parent="GtkContainer">
      <field name="NumChildren" cname="num_children" type="gint" access="public" />
      <field name="Children" cname="children" type="GList*" access="public" />
      <field name="Orientation" cname="orientation" type="GtkOrientation" access="public" />
      <field name="Style" cname="style" type="GtkToolbarStyle" access="public" />
      <field name="IconSize" cname="icon_size" type="GtkIconSize" access="public" />
      <field name="Tooltips" cname="tooltips" type="GtkTooltips*" access="public" />
      <field name="ButtonMaxw" cname="button_maxw" type="gint" />
      <field name="ButtonMaxh" cname="button_maxh" type="gint" />
      <field name="GtkReserved1" cname="_gtk_reserved1" type="guint" />
      <field name="GtkReserved2" cname="_gtk_reserved2" type="guint" />
      <field name="StyleSet" cname="style_set" bits="1" type="guint" />
      <field name="IconSizeSet" cname="icon_size_set" bits="1" type="guint" />
      <method name="AppendElement" cname="gtk_toolbar_append_element" deprecated="1">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="GtkToolbarChildType" name="type" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-char*" name="text" />
          <parameter type="const-char*" name="tooltip_text" />
          <parameter type="const-char*" name="tooltip_private_text" />
          <parameter type="GtkWidget*" name="icon" />
          <parameter type="GtkSignalFunc" name="callback" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="AppendItem" cname="gtk_toolbar_append_item" deprecated="1">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="const-char*" name="text" />
          <parameter type="const-char*" name="tooltip_text" />
          <parameter type="const-char*" name="tooltip_private_text" />
          <parameter type="GtkWidget*" name="icon" />
          <parameter type="GtkSignalFunc" name="callback" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="AppendSpace" cname="gtk_toolbar_append_space" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="AppendWidget" cname="gtk_toolbar_append_widget" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-char*" name="tooltip_text" />
          <parameter type="const-char*" name="tooltip_private_text" />
        </parameters>
      </method>
      <method name="GetDropIndex" cname="gtk_toolbar_get_drop_index">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="GetIconSize" cname="gtk_toolbar_get_icon_size">
        <return-type type="GtkIconSize" />
      </method>
      <method name="GetItemIndex" cname="gtk_toolbar_get_item_index">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkToolItem*" name="item" />
        </parameters>
      </method>
      <method name="GetNItems" cname="gtk_toolbar_get_n_items">
        <return-type type="gint" />
      </method>
      <method name="GetNthItem" cname="gtk_toolbar_get_nth_item">
        <return-type type="GtkToolItem*" />
        <parameters>
          <parameter type="gint" name="n" />
        </parameters>
      </method>
      <method name="GetOrientation" cname="gtk_toolbar_get_orientation">
        <return-type type="GtkOrientation" />
      </method>
      <method name="GetReliefStyle" cname="gtk_toolbar_get_relief_style">
        <return-type type="GtkReliefStyle" />
      </method>
      <method name="GetShowArrow" cname="gtk_toolbar_get_show_arrow">
        <return-type type="gboolean" />
      </method>
      <method name="GetStyle" cname="gtk_toolbar_get_style">
        <return-type type="GtkToolbarStyle" />
      </method>
      <method name="GetTooltips" cname="gtk_toolbar_get_tooltips">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_toolbar_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Insert" cname="gtk_toolbar_insert">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkToolItem*" name="item" />
          <parameter type="gint" name="pos" />
        </parameters>
      </method>
      <method name="InsertElement" cname="gtk_toolbar_insert_element" deprecated="1">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="GtkToolbarChildType" name="type" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-char*" name="text" />
          <parameter type="const-char*" name="tooltip_text" />
          <parameter type="const-char*" name="tooltip_private_text" />
          <parameter type="GtkWidget*" name="icon" />
          <parameter type="GtkSignalFunc" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="InsertItem" cname="gtk_toolbar_insert_item" deprecated="1">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="const-char*" name="text" />
          <parameter type="const-char*" name="tooltip_text" />
          <parameter type="const-char*" name="tooltip_private_text" />
          <parameter type="GtkWidget*" name="icon" />
          <parameter type="GtkSignalFunc" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="InsertSpace" cname="gtk_toolbar_insert_space" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="InsertStock" cname="gtk_toolbar_insert_stock" deprecated="1">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="const-gchar*" name="stock_id" />
          <parameter type="const-char*" name="tooltip_text" />
          <parameter type="const-char*" name="tooltip_private_text" />
          <parameter type="GtkSignalFunc" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="InsertWidget" cname="gtk_toolbar_insert_widget" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-char*" name="tooltip_text" />
          <parameter type="const-char*" name="tooltip_private_text" />
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <constructor cname="gtk_toolbar_new" />
      <method name="PrependElement" cname="gtk_toolbar_prepend_element" deprecated="1">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="GtkToolbarChildType" name="type" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-char*" name="text" />
          <parameter type="const-char*" name="tooltip_text" />
          <parameter type="const-char*" name="tooltip_private_text" />
          <parameter type="GtkWidget*" name="icon" />
          <parameter type="GtkSignalFunc" name="callback" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="PrependItem" cname="gtk_toolbar_prepend_item" deprecated="1">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="const-char*" name="text" />
          <parameter type="const-char*" name="tooltip_text" />
          <parameter type="const-char*" name="tooltip_private_text" />
          <parameter type="GtkWidget*" name="icon" />
          <parameter type="GtkSignalFunc" name="callback" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="PrependSpace" cname="gtk_toolbar_prepend_space" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="PrependWidget" cname="gtk_toolbar_prepend_widget" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-char*" name="tooltip_text" />
          <parameter type="const-char*" name="tooltip_private_text" />
        </parameters>
      </method>
      <method name="RemoveSpace" cname="gtk_toolbar_remove_space" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="SetDropHighlightItem" cname="gtk_toolbar_set_drop_highlight_item">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkToolItem*" name="tool_item" />
          <parameter type="gint" name="index_" />
        </parameters>
      </method>
      <method name="SetIconSize" cname="gtk_toolbar_set_icon_size" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkIconSize" name="icon_size" />
        </parameters>
      </method>
      <method name="SetOrientation" cname="gtk_toolbar_set_orientation">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkOrientation" name="orientation" />
        </parameters>
      </method>
      <method name="SetShowArrow" cname="gtk_toolbar_set_show_arrow">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="show_arrow" />
        </parameters>
      </method>
      <method name="SetStyle" cname="gtk_toolbar_set_style">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkToolbarStyle" name="style" />
        </parameters>
      </method>
      <method name="SetTooltips" cname="gtk_toolbar_set_tooltips">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="enable" />
        </parameters>
      </method>
      <method name="UnsetIconSize" cname="gtk_toolbar_unset_icon_size" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="UnsetStyle" cname="gtk_toolbar_unset_style">
        <return-type type="void" />
      </method>
    </object>
    <object name="Tooltips" cname="GtkTooltips" parent="GtkObject">
      <field name="TipWindow" cname="tip_window" type="GtkWidget*" />
      <field name="TipLabel" cname="tip_label" type="GtkWidget*" />
      <field name="ActiveTipsData" cname="active_tips_data" type="GtkTooltipsData*" />
      <field name="TipsDataList" cname="tips_data_list" type="GList*" />
      <field name="Delay" cname="delay" bits="30" type="guint" />
      <field name="Enabled" cname="enabled" bits="1" type="guint" />
      <field name="HaveGrab" cname="have_grab" bits="1" type="guint" />
      <field name="UseStickyDelay" cname="use_sticky_delay" bits="1" type="guint" />
      <field name="TimerTag" cname="timer_tag" type="gint" />
      <field name="LastPopdown" cname="last_popdown" type="GTimeVal" />
      <method name="Disable" cname="gtk_tooltips_disable">
        <return-type type="void" />
      </method>
      <method name="Enable" cname="gtk_tooltips_enable">
        <return-type type="void" />
      </method>
      <method name="ForceWindow" cname="gtk_tooltips_force_window">
        <return-type type="void" />
      </method>
      <method name="GetInfoFromTipWindow" cname="gtk_tooltips_get_info_from_tip_window" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWindow*" name="tip_window" />
          <parameter type="GtkTooltips**" name="tooltips" />
          <parameter type="GtkWidget**" name="current_widget" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_tooltips_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_tooltips_new" />
      <method name="SetDelay" cname="gtk_tooltips_set_delay" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="delay" />
        </parameters>
      </method>
      <method name="SetTip" cname="gtk_tooltips_set_tip">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="tip_text" />
          <parameter type="const-gchar*" name="tip_private" />
        </parameters>
      </method>
    </object>
    <object name="ToolButton" cname="GtkToolButton" parent="GtkToolItem">
      <field name="Priv" cname="priv" type="GtkToolButtonPrivate*" />
      <method name="GetIconName" cname="gtk_tool_button_get_icon_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetIconWidget" cname="gtk_tool_button_get_icon_widget">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetLabel" cname="gtk_tool_button_get_label">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetLabelWidget" cname="gtk_tool_button_get_label_widget">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetStockId" cname="gtk_tool_button_get_stock_id">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gtk_tool_button_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUseUnderline" cname="gtk_tool_button_get_use_underline">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gtk_tool_button_new">
        <parameters>
          <parameter type="GtkWidget*" name="icon_widget" />
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <constructor cname="gtk_tool_button_new_from_stock">
        <parameters>
          <parameter type="const-gchar*" name="stock_id" />
        </parameters>
      </constructor>
      <method name="SetIconName" cname="gtk_tool_button_set_icon_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="icon_name" />
        </parameters>
      </method>
      <method name="SetIconWidget" cname="gtk_tool_button_set_icon_widget">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="icon_widget" />
        </parameters>
      </method>
      <method name="SetLabel" cname="gtk_tool_button_set_label">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </method>
      <method name="SetLabelWidget" cname="gtk_tool_button_set_label_widget">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="label_widget" />
        </parameters>
      </method>
      <method name="SetStockId" cname="gtk_tool_button_set_stock_id">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="stock_id" />
        </parameters>
      </method>
      <method name="SetUseUnderline" cname="gtk_tool_button_set_use_underline">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="use_underline" />
        </parameters>
      </method>
    </object>
    <object name="ToolItem" cname="GtkToolItem" parent="GtkBin">
      <field name="Priv" cname="priv" type="GtkToolItemPrivate*" />
      <method name="GetExpand" cname="gtk_tool_item_get_expand">
        <return-type type="gboolean" />
      </method>
      <method name="GetHomogeneous" cname="gtk_tool_item_get_homogeneous">
        <return-type type="gboolean" />
      </method>
      <method name="GetIconSize" cname="gtk_tool_item_get_icon_size">
        <return-type type="GtkIconSize" />
      </method>
      <method name="GetIsImportant" cname="gtk_tool_item_get_is_important">
        <return-type type="gboolean" />
      </method>
      <method name="GetOrientation" cname="gtk_tool_item_get_orientation">
        <return-type type="GtkOrientation" />
      </method>
      <method name="GetProxyMenuItem" cname="gtk_tool_item_get_proxy_menu_item">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="const-gchar*" name="menu_item_id" />
        </parameters>
      </method>
      <method name="GetReliefStyle" cname="gtk_tool_item_get_relief_style">
        <return-type type="GtkReliefStyle" />
      </method>
      <method name="GetToolbarStyle" cname="gtk_tool_item_get_toolbar_style">
        <return-type type="GtkToolbarStyle" />
      </method>
      <method name="GetType" cname="gtk_tool_item_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUseDragWindow" cname="gtk_tool_item_get_use_drag_window">
        <return-type type="gboolean" />
      </method>
      <method name="GetVisibleHorizontal" cname="gtk_tool_item_get_visible_horizontal">
        <return-type type="gboolean" />
      </method>
      <method name="GetVisibleVertical" cname="gtk_tool_item_get_visible_vertical">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gtk_tool_item_new" />
      <method name="RebuildMenu" cname="gtk_tool_item_rebuild_menu">
        <return-type type="void" />
      </method>
      <method name="RetrieveProxyMenuItem" cname="gtk_tool_item_retrieve_proxy_menu_item">
        <return-type type="GtkWidget*" />
      </method>
      <method name="SetExpand" cname="gtk_tool_item_set_expand">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="expand" />
        </parameters>
      </method>
      <method name="SetHomogeneous" cname="gtk_tool_item_set_homogeneous">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="homogeneous" />
        </parameters>
      </method>
      <method name="SetIsImportant" cname="gtk_tool_item_set_is_important">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="is_important" />
        </parameters>
      </method>
      <method name="SetProxyMenuItem" cname="gtk_tool_item_set_proxy_menu_item">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="menu_item_id" />
          <parameter type="GtkWidget*" name="menu_item" />
        </parameters>
      </method>
      <method name="SetTooltip" cname="gtk_tool_item_set_tooltip">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTooltips*" name="tooltips" />
          <parameter type="const-gchar*" name="tip_text" />
          <parameter type="const-gchar*" name="tip_private" />
        </parameters>
      </method>
      <method name="SetUseDragWindow" cname="gtk_tool_item_set_use_drag_window">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="use_drag_window" />
        </parameters>
      </method>
      <method name="SetVisibleHorizontal" cname="gtk_tool_item_set_visible_horizontal">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="visible_horizontal" />
        </parameters>
      </method>
      <method name="SetVisibleVertical" cname="gtk_tool_item_set_visible_vertical">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="visible_vertical" />
        </parameters>
      </method>
    </object>
    <object name="TreeModelFilter" cname="GtkTreeModelFilter" parent="GObject">
      <field name="Priv" cname="priv" type="GtkTreeModelFilterPrivate*" />
      <method name="ClearCache" cname="gtk_tree_model_filter_clear_cache">
        <return-type type="void" />
      </method>
      <method name="ConvertChildIterToIter" cname="gtk_tree_model_filter_convert_child_iter_to_iter">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeIter*" name="filter_iter" />
          <parameter type="GtkTreeIter*" name="child_iter" />
        </parameters>
      </method>
      <method name="ConvertChildPathToPath" cname="gtk_tree_model_filter_convert_child_path_to_path">
        <return-type type="GtkTreePath*" />
        <parameters>
          <parameter type="GtkTreePath*" name="child_path" />
        </parameters>
      </method>
      <method name="ConvertIterToChildIter" cname="gtk_tree_model_filter_convert_iter_to_child_iter">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="child_iter" />
          <parameter type="GtkTreeIter*" name="filter_iter" />
        </parameters>
      </method>
      <method name="ConvertPathToChildPath" cname="gtk_tree_model_filter_convert_path_to_child_path">
        <return-type type="GtkTreePath*" />
        <parameters>
          <parameter type="GtkTreePath*" name="filter_path" />
        </parameters>
      </method>
      <method name="GetModel" cname="gtk_tree_model_filter_get_model">
        <return-type type="GtkTreeModel*" />
      </method>
      <method name="GetType" cname="gtk_tree_model_filter_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_tree_model_filter_new">
        <parameters>
          <parameter type="GtkTreeModel*" name="child_model" />
          <parameter type="GtkTreePath*" name="root" />
        </parameters>
      </constructor>
      <method name="Refilter" cname="gtk_tree_model_filter_refilter">
        <return-type type="void" />
      </method>
      <method name="SetModifyFunc" cname="gtk_tree_model_filter_set_modify_func">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="n_columns" />
          <parameter type="GType*" name="types" />
          <parameter type="GtkTreeModelFilterModifyFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="SetVisibleColumn" cname="gtk_tree_model_filter_set_visible_column">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="column" />
        </parameters>
      </method>
      <method name="SetVisibleFunc" cname="gtk_tree_model_filter_set_visible_func">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeModelFilterVisibleFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </method>
    </object>
    <object name="TreeModelSort" cname="GtkTreeModelSort" parent="GObject">
      <field name="Root" cname="root" type="gpointer" />
      <field name="Stamp" cname="stamp" type="gint" />
      <field name="ChildFlags" cname="child_flags" type="guint" />
      <field name="ChildModel" cname="child_model" type="GtkTreeModel*" />
      <field name="ZeroRefCount" cname="zero_ref_count" type="gint" />
      <field name="SortList" cname="sort_list" type="GList*" />
      <field name="SortColumnId" cname="sort_column_id" type="gint" />
      <field name="Order" cname="order" type="GtkSortType" />
      <field name="DefaultSortFunc" cname="default_sort_func" type="GtkTreeIterCompareFunc" />
      <field name="DefaultSortData" cname="default_sort_data" type="gpointer" />
      <field name="DefaultSortDestroy" cname="default_sort_destroy" type="GtkDestroyNotify" />
      <field name="ChangedId" cname="changed_id" type="guint" />
      <field name="InsertedId" cname="inserted_id" type="guint" />
      <field name="HasChildToggledId" cname="has_child_toggled_id" type="guint" />
      <field name="DeletedId" cname="deleted_id" type="guint" />
      <field name="ReorderedId" cname="reordered_id" type="guint" />
      <method name="ClearCache" cname="gtk_tree_model_sort_clear_cache">
        <return-type type="void" />
      </method>
      <method name="ConvertChildIterToIter" cname="gtk_tree_model_sort_convert_child_iter_to_iter">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="sort_iter" />
          <parameter type="GtkTreeIter*" name="child_iter" />
        </parameters>
      </method>
      <method name="ConvertChildPathToPath" cname="gtk_tree_model_sort_convert_child_path_to_path">
        <return-type type="GtkTreePath*" />
        <parameters>
          <parameter type="GtkTreePath*" name="child_path" />
        </parameters>
      </method>
      <method name="ConvertIterToChildIter" cname="gtk_tree_model_sort_convert_iter_to_child_iter">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="child_iter" />
          <parameter type="GtkTreeIter*" name="sorted_iter" />
        </parameters>
      </method>
      <method name="ConvertPathToChildPath" cname="gtk_tree_model_sort_convert_path_to_child_path">
        <return-type type="GtkTreePath*" />
        <parameters>
          <parameter type="GtkTreePath*" name="sorted_path" />
        </parameters>
      </method>
      <method name="GetModel" cname="gtk_tree_model_sort_get_model">
        <return-type type="GtkTreeModel*" />
      </method>
      <method name="GetType" cname="gtk_tree_model_sort_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="IterIsValid" cname="gtk_tree_model_sort_iter_is_valid">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <constructor cname="gtk_tree_model_sort_new_with_model">
        <parameters>
          <parameter type="GtkTreeModel*" name="child_model" />
        </parameters>
      </constructor>
      <method name="ResetDefaultSortFunc" cname="gtk_tree_model_sort_reset_default_sort_func">
        <return-type type="void" />
      </method>
    </object>
    <object name="TreeSelection" cname="GtkTreeSelection" parent="GObject">
      <field name="TreeView" cname="tree_view" type="GtkTreeView*" />
      <field name="Type" cname="type" type="GtkSelectionMode" />
      <field name="UserFunc" cname="user_func" type="GtkTreeSelectionFunc" />
      <field name="UserData" cname="user_data" type="gpointer" />
      <field name="Destroy" cname="destroy" type="GtkDestroyNotify" />
      <method name="CountSelectedRows" cname="gtk_tree_selection_count_selected_rows">
        <return-type type="gint" />
      </method>
      <method name="GetMode" cname="gtk_tree_selection_get_mode">
        <return-type type="GtkSelectionMode" />
      </method>
      <method name="GetSelected" cname="gtk_tree_selection_get_selected">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeModel**" name="model" />
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="GetSelectedRows" cname="gtk_tree_selection_get_selected_rows">
        <return-type type="GList*" />
        <parameters>
          <parameter type="GtkTreeModel**" name="model" />
        </parameters>
      </method>
      <method name="GetTreeView" cname="gtk_tree_selection_get_tree_view">
        <return-type type="GtkTreeView*" />
      </method>
      <method name="GetType" cname="gtk_tree_selection_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUserData" cname="gtk_tree_selection_get_user_data">
        <return-type type="gpointer" />
      </method>
      <method name="IterIsSelected" cname="gtk_tree_selection_iter_is_selected">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="PathIsSelected" cname="gtk_tree_selection_path_is_selected">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
      <method name="SelectAll" cname="gtk_tree_selection_select_all">
        <return-type type="void" />
      </method>
      <method name="SelectIter" cname="gtk_tree_selection_select_iter">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="SelectPath" cname="gtk_tree_selection_select_path">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
      <method name="SelectRange" cname="gtk_tree_selection_select_range">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="start_path" />
          <parameter type="GtkTreePath*" name="end_path" />
        </parameters>
      </method>
      <method name="SelectedForeach" cname="gtk_tree_selection_selected_foreach">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeSelectionForeachFunc" name="func" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="SetMode" cname="gtk_tree_selection_set_mode">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkSelectionMode" name="type" />
        </parameters>
      </method>
      <method name="SetSelectFunction" cname="gtk_tree_selection_set_select_function">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeSelectionFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="UnselectAll" cname="gtk_tree_selection_unselect_all">
        <return-type type="void" />
      </method>
      <method name="UnselectIter" cname="gtk_tree_selection_unselect_iter">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="UnselectPath" cname="gtk_tree_selection_unselect_path">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
      <method name="UnselectRange" cname="gtk_tree_selection_unselect_range">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="start_path" />
          <parameter type="GtkTreePath*" name="end_path" />
        </parameters>
      </method>
    </object>
    <object name="TreeStore" cname="GtkTreeStore" parent="GObject">
      <field name="Stamp" cname="stamp" type="gint" />
      <field name="Root" cname="root" type="gpointer" />
      <field name="Last" cname="last" type="gpointer" />
      <field name="NColumns" cname="n_columns" type="gint" />
      <field name="SortColumnId" cname="sort_column_id" type="gint" />
      <field name="SortList" cname="sort_list" type="GList*" />
      <field name="Order" cname="order" type="GtkSortType" />
      <field name="ColumnHeaders" cname="column_headers" type="GType*" />
      <field name="DefaultSortFunc" cname="default_sort_func" type="GtkTreeIterCompareFunc" />
      <field name="DefaultSortData" cname="default_sort_data" type="gpointer" />
      <field name="DefaultSortDestroy" cname="default_sort_destroy" type="GtkDestroyNotify" />
      <field name="ColumnsDirty" cname="columns_dirty" bits="1" type="guint" />
      <method name="Append" cname="gtk_tree_store_append">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="parent" />
        </parameters>
      </method>
      <method name="Clear" cname="gtk_tree_store_clear">
        <return-type type="void" />
      </method>
      <method name="GetType" cname="gtk_tree_store_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Insert" cname="gtk_tree_store_insert">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="parent" />
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="InsertAfter" cname="gtk_tree_store_insert_after">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="parent" />
          <parameter type="GtkTreeIter*" name="sibling" />
        </parameters>
      </method>
      <method name="InsertBefore" cname="gtk_tree_store_insert_before">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="parent" />
          <parameter type="GtkTreeIter*" name="sibling" />
        </parameters>
      </method>
      <method name="InsertWithValues" cname="gtk_tree_store_insert_with_values">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="parent" />
          <parameter type="gint" name="position" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="InsertWithValuesv" cname="gtk_tree_store_insert_with_valuesv">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="parent" />
          <parameter type="gint" name="position" />
          <parameter type="gint*" name="columns" />
          <parameter type="GValue*" name="values" />
          <parameter type="gint" name="n_values" />
        </parameters>
      </method>
      <method name="IsAncestor" cname="gtk_tree_store_is_ancestor">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="descendant" />
        </parameters>
      </method>
      <method name="IterDepth" cname="gtk_tree_store_iter_depth">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="IterIsValid" cname="gtk_tree_store_iter_is_valid">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="MoveAfter" cname="gtk_tree_store_move_after">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="position" />
        </parameters>
      </method>
      <method name="MoveBefore" cname="gtk_tree_store_move_before">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="position" />
        </parameters>
      </method>
      <constructor cname="gtk_tree_store_new">
        <parameters>
          <parameter type="gint" name="n_columns" />
          <parameter ellipsis="true" />
        </parameters>
      </constructor>
      <constructor cname="gtk_tree_store_newv">
        <parameters>
          <parameter type="gint" name="n_columns" />
          <parameter type="GType*" name="types" />
        </parameters>
      </constructor>
      <method name="Prepend" cname="gtk_tree_store_prepend">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="parent" />
        </parameters>
      </method>
      <method name="Remove" cname="gtk_tree_store_remove">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="Reorder" cname="gtk_tree_store_reorder">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="parent" />
          <parameter type="gint*" name="new_order" />
        </parameters>
      </method>
      <method name="Set" cname="gtk_tree_store_set">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="SetColumnTypes" cname="gtk_tree_store_set_column_types">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="n_columns" />
          <parameter type="GType*" name="types" />
        </parameters>
      </method>
      <method name="SetValist" cname="gtk_tree_store_set_valist">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="va_list" name="var_args" />
        </parameters>
      </method>
      <method name="SetValue" cname="gtk_tree_store_set_value">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="gint" name="column" />
          <parameter type="GValue*" name="value" />
        </parameters>
      </method>
      <method name="Swap" cname="gtk_tree_store_swap">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="a" />
          <parameter type="GtkTreeIter*" name="b" />
        </parameters>
      </method>
    </object>
    <object name="TreeView" cname="GtkTreeView" parent="GtkContainer">
      <field name="Priv" cname="priv" type="GtkTreeViewPrivate*" />
      <method name="AppendColumn" cname="gtk_tree_view_append_column">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkTreeViewColumn*" name="column" />
        </parameters>
      </method>
      <method name="CollapseAll" cname="gtk_tree_view_collapse_all">
        <return-type type="void" />
      </method>
      <method name="CollapseRow" cname="gtk_tree_view_collapse_row">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
      <method name="ColumnsAutosize" cname="gtk_tree_view_columns_autosize">
        <return-type type="void" />
      </method>
      <method name="CreateRowDragIcon" cname="gtk_tree_view_create_row_drag_icon">
        <return-type type="GdkPixmap*" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
      <method name="EnableModelDragDest" cname="gtk_tree_view_enable_model_drag_dest">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GtkTargetEntry*" name="targets" />
          <parameter type="gint" name="n_targets" />
          <parameter type="GdkDragAction" name="actions" />
        </parameters>
      </method>
      <method name="EnableModelDragSource" cname="gtk_tree_view_enable_model_drag_source">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkModifierType" name="start_button_mask" />
          <parameter type="const-GtkTargetEntry*" name="targets" />
          <parameter type="gint" name="n_targets" />
          <parameter type="GdkDragAction" name="actions" />
        </parameters>
      </method>
      <method name="ExpandAll" cname="gtk_tree_view_expand_all">
        <return-type type="void" />
      </method>
      <method name="ExpandRow" cname="gtk_tree_view_expand_row">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="gboolean" name="open_all" />
        </parameters>
      </method>
      <method name="ExpandToPath" cname="gtk_tree_view_expand_to_path">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
      <method name="GetBackgroundArea" cname="gtk_tree_view_get_background_area">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkTreeViewColumn*" name="column" />
          <parameter type="GdkRectangle*" name="rect" />
        </parameters>
      </method>
      <method name="GetBinWindow" cname="gtk_tree_view_get_bin_window">
        <return-type type="GdkWindow*" />
      </method>
      <method name="GetCellArea" cname="gtk_tree_view_get_cell_area">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkTreeViewColumn*" name="column" />
          <parameter type="GdkRectangle*" name="rect" />
        </parameters>
      </method>
      <method name="GetColumn" cname="gtk_tree_view_get_column">
        <return-type type="GtkTreeViewColumn*" />
        <parameters>
          <parameter type="gint" name="n" />
        </parameters>
      </method>
      <method name="GetColumns" cname="gtk_tree_view_get_columns">
        <return-type type="GList*" />
      </method>
      <method name="GetCursor" cname="gtk_tree_view_get_cursor">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath**" name="path" />
          <parameter type="GtkTreeViewColumn**" name="focus_column" />
        </parameters>
      </method>
      <method name="GetDestRowAtPos" cname="gtk_tree_view_get_dest_row_at_pos">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="drag_x" />
          <parameter type="gint" name="drag_y" />
          <parameter type="GtkTreePath**" name="path" />
          <parameter type="GtkTreeViewDropPosition*" name="pos" />
        </parameters>
      </method>
      <method name="GetDragDestRow" cname="gtk_tree_view_get_drag_dest_row">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath**" name="path" />
          <parameter type="GtkTreeViewDropPosition*" name="pos" />
        </parameters>
      </method>
      <method name="GetEnableSearch" cname="gtk_tree_view_get_enable_search">
        <return-type type="gboolean" />
      </method>
      <method name="GetEnableTreeLines" cname="gtk_tree_view_get_enable_tree_lines">
        <return-type type="gboolean" />
      </method>
      <method name="GetExpanderColumn" cname="gtk_tree_view_get_expander_column">
        <return-type type="GtkTreeViewColumn*" />
      </method>
      <method name="GetFixedHeightMode" cname="gtk_tree_view_get_fixed_height_mode">
        <return-type type="gboolean" />
      </method>
      <method name="GetGridLines" cname="gtk_tree_view_get_grid_lines">
        <return-type type="GtkTreeViewGridLines" />
      </method>
      <method name="GetHadjustment" cname="gtk_tree_view_get_hadjustment">
        <return-type type="GtkAdjustment*" />
      </method>
      <method name="GetHeadersClickable" cname="gtk_tree_view_get_headers_clickable">
        <return-type type="gboolean" />
      </method>
      <method name="GetHeadersVisible" cname="gtk_tree_view_get_headers_visible">
        <return-type type="gboolean" />
      </method>
      <method name="GetHoverExpand" cname="gtk_tree_view_get_hover_expand">
        <return-type type="gboolean" />
      </method>
      <method name="GetHoverSelection" cname="gtk_tree_view_get_hover_selection">
        <return-type type="gboolean" />
      </method>
      <method name="GetModel" cname="gtk_tree_view_get_model">
        <return-type type="GtkTreeModel*" />
      </method>
      <method name="GetPathAtPos" cname="gtk_tree_view_get_path_at_pos">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="GtkTreePath**" name="path" />
          <parameter type="GtkTreeViewColumn**" name="column" />
          <parameter type="gint*" name="cell_x" />
          <parameter type="gint*" name="cell_y" />
        </parameters>
      </method>
      <method name="GetReorderable" cname="gtk_tree_view_get_reorderable">
        <return-type type="gboolean" />
      </method>
      <method name="GetRowSeparatorFunc" cname="gtk_tree_view_get_row_separator_func">
        <return-type type="GtkTreeViewRowSeparatorFunc" />
      </method>
      <method name="GetRubberBanding" cname="gtk_tree_view_get_rubber_banding">
        <return-type type="gboolean" />
      </method>
      <method name="GetRulesHint" cname="gtk_tree_view_get_rules_hint">
        <return-type type="gboolean" />
      </method>
      <method name="GetSearchColumn" cname="gtk_tree_view_get_search_column">
        <return-type type="gint" />
      </method>
      <method name="GetSearchEntry" cname="gtk_tree_view_get_search_entry">
        <return-type type="GtkEntry*" />
      </method>
      <method name="GetSearchEqualFunc" cname="gtk_tree_view_get_search_equal_func">
        <return-type type="GtkTreeViewSearchEqualFunc" />
      </method>
      <method name="GetSearchPositionFunc" cname="gtk_tree_view_get_search_position_func">
        <return-type type="GtkTreeViewSearchPositionFunc" />
      </method>
      <method name="GetSelection" cname="gtk_tree_view_get_selection">
        <return-type type="GtkTreeSelection*" />
      </method>
      <method name="GetType" cname="gtk_tree_view_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVadjustment" cname="gtk_tree_view_get_vadjustment">
        <return-type type="GtkAdjustment*" />
      </method>
      <method name="GetVisibleRange" cname="gtk_tree_view_get_visible_range">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreePath**" name="start_path" />
          <parameter type="GtkTreePath**" name="end_path" />
        </parameters>
      </method>
      <method name="GetVisibleRect" cname="gtk_tree_view_get_visible_rect">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRectangle*" name="visible_rect" />
        </parameters>
      </method>
      <method name="InsertColumn" cname="gtk_tree_view_insert_column">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkTreeViewColumn*" name="column" />
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="InsertColumnWithAttributes" cname="gtk_tree_view_insert_column_with_attributes">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="position" />
          <parameter type="const-gchar*" name="title" />
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="InsertColumnWithDataFunc" cname="gtk_tree_view_insert_column_with_data_func">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="position" />
          <parameter type="const-gchar*" name="title" />
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter type="GtkTreeCellDataFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GDestroyNotify" name="dnotify" />
        </parameters>
      </method>
      <method name="MapExpandedRows" cname="gtk_tree_view_map_expanded_rows">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeViewMappingFunc" name="func" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="ModeGetType" cname="gtk_tree_view_mode_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="MoveColumnAfter" cname="gtk_tree_view_move_column_after">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeViewColumn*" name="column" />
          <parameter type="GtkTreeViewColumn*" name="base_column" />
        </parameters>
      </method>
      <constructor cname="gtk_tree_view_new" />
      <constructor cname="gtk_tree_view_new_with_model">
        <parameters>
          <parameter type="GtkTreeModel*" name="model" />
        </parameters>
      </constructor>
      <method name="RemoveColumn" cname="gtk_tree_view_remove_column">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkTreeViewColumn*" name="column" />
        </parameters>
      </method>
      <method name="RowActivated" cname="gtk_tree_view_row_activated">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkTreeViewColumn*" name="column" />
        </parameters>
      </method>
      <method name="RowExpanded" cname="gtk_tree_view_row_expanded">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
      <method name="ScrollToCell" cname="gtk_tree_view_scroll_to_cell">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkTreeViewColumn*" name="column" />
          <parameter type="gboolean" name="use_align" />
          <parameter type="gfloat" name="row_align" />
          <parameter type="gfloat" name="col_align" />
        </parameters>
      </method>
      <method name="ScrollToPoint" cname="gtk_tree_view_scroll_to_point">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="tree_x" />
          <parameter type="gint" name="tree_y" />
        </parameters>
      </method>
      <method name="SetColumnDragFunction" cname="gtk_tree_view_set_column_drag_function">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeViewColumnDropFunc" name="func" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="SetCursor" cname="gtk_tree_view_set_cursor">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkTreeViewColumn*" name="focus_column" />
          <parameter type="gboolean" name="start_editing" />
        </parameters>
      </method>
      <method name="SetCursorOnCell" cname="gtk_tree_view_set_cursor_on_cell">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkTreeViewColumn*" name="focus_column" />
          <parameter type="GtkCellRenderer*" name="focus_cell" />
          <parameter type="gboolean" name="start_editing" />
        </parameters>
      </method>
      <method name="SetDestroyCountFunc" cname="gtk_tree_view_set_destroy_count_func">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeDestroyCountFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="SetDragDestRow" cname="gtk_tree_view_set_drag_dest_row">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkTreeViewDropPosition" name="pos" />
        </parameters>
      </method>
      <method name="SetEnableSearch" cname="gtk_tree_view_set_enable_search">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="enable_search" />
        </parameters>
      </method>
      <method name="SetEnableTreeLines" cname="gtk_tree_view_set_enable_tree_lines">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="enabled" />
        </parameters>
      </method>
      <method name="SetExpanderColumn" cname="gtk_tree_view_set_expander_column">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeViewColumn*" name="column" />
        </parameters>
      </method>
      <method name="SetFixedHeightMode" cname="gtk_tree_view_set_fixed_height_mode">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="enable" />
        </parameters>
      </method>
      <method name="SetGridLines" cname="gtk_tree_view_set_grid_lines">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeViewGridLines" name="grid_lines" />
        </parameters>
      </method>
      <method name="SetHadjustment" cname="gtk_tree_view_set_hadjustment">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </method>
      <method name="SetHeadersClickable" cname="gtk_tree_view_set_headers_clickable">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetHeadersVisible" cname="gtk_tree_view_set_headers_visible">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="headers_visible" />
        </parameters>
      </method>
      <method name="SetHoverExpand" cname="gtk_tree_view_set_hover_expand">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="expand" />
        </parameters>
      </method>
      <method name="SetHoverSelection" cname="gtk_tree_view_set_hover_selection">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="hover" />
        </parameters>
      </method>
      <method name="SetModel" cname="gtk_tree_view_set_model">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeModel*" name="model" />
        </parameters>
      </method>
      <method name="SetReorderable" cname="gtk_tree_view_set_reorderable">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="reorderable" />
        </parameters>
      </method>
      <method name="SetRowSeparatorFunc" cname="gtk_tree_view_set_row_separator_func">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeViewRowSeparatorFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="SetRubberBanding" cname="gtk_tree_view_set_rubber_banding">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="enable" />
        </parameters>
      </method>
      <method name="SetRulesHint" cname="gtk_tree_view_set_rules_hint">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetSearchColumn" cname="gtk_tree_view_set_search_column">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="column" />
        </parameters>
      </method>
      <method name="SetSearchEntry" cname="gtk_tree_view_set_search_entry">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkEntry*" name="entry" />
        </parameters>
      </method>
      <method name="SetSearchEqualFunc" cname="gtk_tree_view_set_search_equal_func">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeViewSearchEqualFunc" name="search_equal_func" />
          <parameter type="gpointer" name="search_user_data" />
          <parameter type="GtkDestroyNotify" name="search_destroy" />
        </parameters>
      </method>
      <method name="SetSearchPositionFunc" cname="gtk_tree_view_set_search_position_func">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeViewSearchPositionFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="SetVadjustment" cname="gtk_tree_view_set_vadjustment">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </method>
      <method name="TreeToWidgetCoords" cname="gtk_tree_view_tree_to_widget_coords">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="tx" />
          <parameter type="gint" name="ty" />
          <parameter type="gint*" name="wx" />
          <parameter type="gint*" name="wy" />
        </parameters>
      </method>
      <method name="UnsetRowsDragDest" cname="gtk_tree_view_unset_rows_drag_dest">
        <return-type type="void" />
      </method>
      <method name="UnsetRowsDragSource" cname="gtk_tree_view_unset_rows_drag_source">
        <return-type type="void" />
      </method>
      <method name="WidgetToTreeCoords" cname="gtk_tree_view_widget_to_tree_coords">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="wx" />
          <parameter type="gint" name="wy" />
          <parameter type="gint*" name="tx" />
          <parameter type="gint*" name="ty" />
        </parameters>
      </method>
    </object>
    <object name="TreeViewColumn" cname="GtkTreeViewColumn" parent="GtkObject">
      <field name="TreeView" cname="tree_view" type="GtkWidget*" />
      <field name="Button" cname="button" type="GtkWidget*" />
      <field name="Child" cname="child" type="GtkWidget*" />
      <field name="Arrow" cname="arrow" type="GtkWidget*" />
      <field name="Alignment" cname="alignment" type="GtkWidget*" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="EditableWidget" cname="editable_widget" type="GtkCellEditable*" />
      <field name="Xalign" cname="xalign" type="gfloat" />
      <field name="PropertyChangedSignal" cname="property_changed_signal" type="guint" />
      <field name="Spacing" cname="spacing" type="gint" />
      <field name="ColumnType" cname="column_type" type="GtkTreeViewColumnSizing" />
      <field name="RequestedWidth" cname="requested_width" type="gint" />
      <field name="ButtonRequest" cname="button_request" type="gint" />
      <field name="ResizedWidth" cname="resized_width" type="gint" />
      <field name="Width" cname="width" type="gint" />
      <field name="FixedWidth" cname="fixed_width" type="gint" />
      <field name="MinWidth" cname="min_width" type="gint" />
      <field name="MaxWidth" cname="max_width" type="gint" />
      <field name="DragX" cname="drag_x" type="gint" />
      <field name="DragY" cname="drag_y" type="gint" />
      <field name="Title" cname="title" type="gchar*" />
      <field name="CellList" cname="cell_list" type="GList*" />
      <field name="SortClickedSignal" cname="sort_clicked_signal" type="guint" />
      <field name="SortColumnChangedSignal" cname="sort_column_changed_signal" type="guint" />
      <field name="SortColumnId" cname="sort_column_id" type="gint" />
      <field name="SortOrder" cname="sort_order" type="GtkSortType" />
      <field name="Visible" cname="visible" bits="1" type="guint" />
      <field name="Resizable" cname="resizable" bits="1" type="guint" />
      <field name="Clickable" cname="clickable" bits="1" type="guint" />
      <field name="Dirty" cname="dirty" bits="1" type="guint" />
      <field name="ShowSortIndicator" cname="show_sort_indicator" bits="1" type="guint" />
      <field name="MaybeReordered" cname="maybe_reordered" bits="1" type="guint" />
      <field name="Reorderable" cname="reorderable" bits="1" type="guint" />
      <field name="UseResizedWidth" cname="use_resized_width" bits="1" type="guint" />
      <field name="Expand" cname="expand" bits="1" type="guint" />
      <method name="AddAttribute" cname="gtk_tree_view_column_add_attribute">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell_renderer" />
          <parameter type="const-gchar*" name="attribute" />
          <parameter type="gint" name="column" />
        </parameters>
      </method>
      <method name="CellGetPosition" cname="gtk_tree_view_column_cell_get_position">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell_renderer" />
          <parameter type="gint*" name="start_pos" />
          <parameter type="gint*" name="width" />
        </parameters>
      </method>
      <method name="CellGetSize" cname="gtk_tree_view_column_cell_get_size">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRectangle*" name="cell_area" />
          <parameter type="gint*" name="x_offset" />
          <parameter type="gint*" name="y_offset" />
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="height" />
        </parameters>
      </method>
      <method name="CellIsVisible" cname="gtk_tree_view_column_cell_is_visible">
        <return-type type="gboolean" />
      </method>
      <method name="CellSetCellData" cname="gtk_tree_view_column_cell_set_cell_data">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="gboolean" name="is_expander" />
          <parameter type="gboolean" name="is_expanded" />
        </parameters>
      </method>
      <method name="Clear" cname="gtk_tree_view_column_clear">
        <return-type type="void" />
      </method>
      <method name="ClearAttributes" cname="gtk_tree_view_column_clear_attributes">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell_renderer" />
        </parameters>
      </method>
      <method name="Clicked" cname="gtk_tree_view_column_clicked">
        <return-type type="void" />
      </method>
      <method name="FocusCell" cname="gtk_tree_view_column_focus_cell">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell" />
        </parameters>
      </method>
      <method name="GetAlignment" cname="gtk_tree_view_column_get_alignment">
        <return-type type="gfloat" />
      </method>
      <method name="GetCellRenderers" cname="gtk_tree_view_column_get_cell_renderers">
        <return-type type="GList*" />
      </method>
      <method name="GetClickable" cname="gtk_tree_view_column_get_clickable">
        <return-type type="gboolean" />
      </method>
      <method name="GetExpand" cname="gtk_tree_view_column_get_expand">
        <return-type type="gboolean" />
      </method>
      <method name="GetFixedWidth" cname="gtk_tree_view_column_get_fixed_width">
        <return-type type="gint" />
      </method>
      <method name="GetMaxWidth" cname="gtk_tree_view_column_get_max_width">
        <return-type type="gint" />
      </method>
      <method name="GetMinWidth" cname="gtk_tree_view_column_get_min_width">
        <return-type type="gint" />
      </method>
      <method name="GetReorderable" cname="gtk_tree_view_column_get_reorderable">
        <return-type type="gboolean" />
      </method>
      <method name="GetResizable" cname="gtk_tree_view_column_get_resizable">
        <return-type type="gboolean" />
      </method>
      <method name="GetSizing" cname="gtk_tree_view_column_get_sizing">
        <return-type type="GtkTreeViewColumnSizing" />
      </method>
      <method name="GetSortColumnId" cname="gtk_tree_view_column_get_sort_column_id">
        <return-type type="gint" />
      </method>
      <method name="GetSortIndicator" cname="gtk_tree_view_column_get_sort_indicator">
        <return-type type="gboolean" />
      </method>
      <method name="GetSortOrder" cname="gtk_tree_view_column_get_sort_order">
        <return-type type="GtkSortType" />
      </method>
      <method name="GetSpacing" cname="gtk_tree_view_column_get_spacing">
        <return-type type="gint" />
      </method>
      <method name="GetTitle" cname="gtk_tree_view_column_get_title">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gtk_tree_view_column_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVisible" cname="gtk_tree_view_column_get_visible">
        <return-type type="gboolean" />
      </method>
      <method name="GetWidget" cname="gtk_tree_view_column_get_widget">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetWidth" cname="gtk_tree_view_column_get_width">
        <return-type type="gint" />
      </method>
      <constructor cname="gtk_tree_view_column_new" />
      <constructor cname="gtk_tree_view_column_new_with_attributes">
        <parameters>
          <parameter type="const-gchar*" name="title" />
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter ellipsis="true" />
        </parameters>
      </constructor>
      <method name="PackEnd" cname="gtk_tree_view_column_pack_end">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter type="gboolean" name="expand" />
        </parameters>
      </method>
      <method name="PackStart" cname="gtk_tree_view_column_pack_start">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter type="gboolean" name="expand" />
        </parameters>
      </method>
      <method name="QueueResize" cname="gtk_tree_view_column_queue_resize">
        <return-type type="void" />
      </method>
      <method name="SetAlignment" cname="gtk_tree_view_column_set_alignment">
        <return-type type="void" />
        <parameters>
          <parameter type="gfloat" name="xalign" />
        </parameters>
      </method>
      <method name="SetAttributes" cname="gtk_tree_view_column_set_attributes">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell_renderer" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="SetCellDataFunc" cname="gtk_tree_view_column_set_cell_data_func">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell_renderer" />
          <parameter type="GtkTreeCellDataFunc" name="func" />
          <parameter type="gpointer" name="func_data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="SetClickable" cname="gtk_tree_view_column_set_clickable">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="clickable" />
        </parameters>
      </method>
      <method name="SetExpand" cname="gtk_tree_view_column_set_expand">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="expand" />
        </parameters>
      </method>
      <method name="SetFixedWidth" cname="gtk_tree_view_column_set_fixed_width">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="fixed_width" />
        </parameters>
      </method>
      <method name="SetMaxWidth" cname="gtk_tree_view_column_set_max_width">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="max_width" />
        </parameters>
      </method>
      <method name="SetMinWidth" cname="gtk_tree_view_column_set_min_width">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="min_width" />
        </parameters>
      </method>
      <method name="SetReorderable" cname="gtk_tree_view_column_set_reorderable">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="reorderable" />
        </parameters>
      </method>
      <method name="SetResizable" cname="gtk_tree_view_column_set_resizable">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="resizable" />
        </parameters>
      </method>
      <method name="SetSizing" cname="gtk_tree_view_column_set_sizing">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeViewColumnSizing" name="type" />
        </parameters>
      </method>
      <method name="SetSortColumnId" cname="gtk_tree_view_column_set_sort_column_id">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="sort_column_id" />
        </parameters>
      </method>
      <method name="SetSortIndicator" cname="gtk_tree_view_column_set_sort_indicator">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetSortOrder" cname="gtk_tree_view_column_set_sort_order">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkSortType" name="order" />
        </parameters>
      </method>
      <method name="SetSpacing" cname="gtk_tree_view_column_set_spacing">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="spacing" />
        </parameters>
      </method>
      <method name="SetTitle" cname="gtk_tree_view_column_set_title">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="title" />
        </parameters>
      </method>
      <method name="SetVisible" cname="gtk_tree_view_column_set_visible">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="visible" />
        </parameters>
      </method>
      <method name="SetWidget" cname="gtk_tree_view_column_set_widget">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
    </object>
    <object name="UIManager" cname="GtkUIManager" parent="GObject">
      <field name="PrivateData" cname="private_data" type="GtkUIManagerPrivate*" />
      <method name="AddUi" cname="gtk_ui_manager_add_ui">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="merge_id" />
          <parameter type="const-gchar*" name="path" />
          <parameter type="const-gchar*" name="name" />
          <parameter type="const-gchar*" name="action" />
          <parameter type="GtkUIManagerItemType" name="type" />
          <parameter type="gboolean" name="top" />
        </parameters>
      </method>
      <method name="AddUiFromFile" cname="gtk_ui_manager_add_ui_from_file">
        <return-type type="guint" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="AddUiFromString" cname="gtk_ui_manager_add_ui_from_string">
        <return-type type="guint" />
        <parameters>
          <parameter type="const-gchar*" name="buffer" />
          <parameter type="gssize" name="length" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="EnsureUpdate" cname="gtk_ui_manager_ensure_update">
        <return-type type="void" />
      </method>
      <method name="GetAccelGroup" cname="gtk_ui_manager_get_accel_group">
        <return-type type="GtkAccelGroup*" />
      </method>
      <method name="GetAction" cname="gtk_ui_manager_get_action">
        <return-type type="GtkAction*" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="GetActionGroups" cname="gtk_ui_manager_get_action_groups">
        <return-type type="GList*" />
      </method>
      <method name="GetAddTearoffs" cname="gtk_ui_manager_get_add_tearoffs">
        <return-type type="gboolean" />
      </method>
      <method name="GetToplevels" cname="gtk_ui_manager_get_toplevels">
        <return-type type="GSList*" />
        <parameters>
          <parameter type="GtkUIManagerItemType" name="types" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_ui_manager_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUi" cname="gtk_ui_manager_get_ui">
        <return-type type="gchar*" />
      </method>
      <method name="GetWidget" cname="gtk_ui_manager_get_widget">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="InsertActionGroup" cname="gtk_ui_manager_insert_action_group">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkActionGroup*" name="action_group" />
          <parameter type="gint" name="pos" />
        </parameters>
      </method>
      <constructor cname="gtk_ui_manager_new" />
      <constructor cname="gtk_ui_manager_new_merge_id">
        <parameters>
          <parameter type="GtkUIManager*" name="self" />
        </parameters>
      </constructor>
      <method name="RemoveActionGroup" cname="gtk_ui_manager_remove_action_group">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkActionGroup*" name="action_group" />
        </parameters>
      </method>
      <method name="RemoveUi" cname="gtk_ui_manager_remove_ui">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="merge_id" />
        </parameters>
      </method>
      <method name="SetAddTearoffs" cname="gtk_ui_manager_set_add_tearoffs">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="add_tearoffs" />
        </parameters>
      </method>
    </object>
    <object name="VBox" cname="GtkVBox" parent="GtkBox">
      <method name="GetType" cname="gtk_vbox_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_vbox_new">
        <parameters>
          <parameter type="gboolean" name="homogeneous" />
          <parameter type="gint" name="spacing" />
        </parameters>
      </constructor>
    </object>
    <object name="VButtonBox" cname="GtkVButtonBox" parent="GtkButtonBox">
      <method name="GetLayoutDefault" cname="gtk_vbutton_box_get_layout_default" deprecated="1" shared="true">
        <return-type type="GtkButtonBoxStyle" />
      </method>
      <method name="GetSpacingDefault" cname="gtk_vbutton_box_get_spacing_default" deprecated="1" shared="true">
        <return-type type="gint" />
      </method>
      <method name="GetType" cname="gtk_vbutton_box_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_vbutton_box_new" />
      <method name="SetLayoutDefault" cname="gtk_vbutton_box_set_layout_default" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkButtonBoxStyle" name="layout" />
        </parameters>
      </method>
      <method name="SetSpacingDefault" cname="gtk_vbutton_box_set_spacing_default" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="spacing" />
        </parameters>
      </method>
    </object>
    <object name="Viewport" cname="GtkViewport" parent="GtkBin">
      <field name="ShadowType" cname="shadow_type" type="GtkShadowType" />
      <field name="ViewWindow" cname="view_window" type="GdkWindow*" />
      <field name="BinWindow" cname="bin_window" type="GdkWindow*" />
      <field name="Hadjustment" cname="hadjustment" type="GtkAdjustment*" />
      <field name="Vadjustment" cname="vadjustment" type="GtkAdjustment*" />
      <method name="GetHadjustment" cname="gtk_viewport_get_hadjustment">
        <return-type type="GtkAdjustment*" />
      </method>
      <method name="GetShadowType" cname="gtk_viewport_get_shadow_type">
        <return-type type="GtkShadowType" />
      </method>
      <method name="GetType" cname="gtk_viewport_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVadjustment" cname="gtk_viewport_get_vadjustment">
        <return-type type="GtkAdjustment*" />
      </method>
      <constructor cname="gtk_viewport_new">
        <parameters>
          <parameter type="GtkAdjustment*" name="hadjustment" />
          <parameter type="GtkAdjustment*" name="vadjustment" />
        </parameters>
      </constructor>
      <method name="SetHadjustment" cname="gtk_viewport_set_hadjustment">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </method>
      <method name="SetShadowType" cname="gtk_viewport_set_shadow_type">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkShadowType" name="type" />
        </parameters>
      </method>
      <method name="SetVadjustment" cname="gtk_viewport_set_vadjustment">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </method>
    </object>
    <object name="VPaned" cname="GtkVPaned" parent="GtkPaned">
      <method name="GetType" cname="gtk_vpaned_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_vpaned_new" />
    </object>
    <object name="VRuler" cname="GtkVRuler" parent="GtkRuler">
      <method name="GetType" cname="gtk_vruler_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_vruler_new" />
    </object>
    <object name="VScale" cname="GtkVScale" parent="GtkScale">
      <method name="GetType" cname="gtk_vscale_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_vscale_new">
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </constructor>
      <constructor cname="gtk_vscale_new_with_range">
        <parameters>
          <parameter type="gdouble" name="min" />
          <parameter type="gdouble" name="max" />
          <parameter type="gdouble" name="step" />
        </parameters>
      </constructor>
    </object>
    <object name="VScrollbar" cname="GtkVScrollbar" parent="GtkScrollbar">
      <method name="GetType" cname="gtk_vscrollbar_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_vscrollbar_new">
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </constructor>
    </object>
    <object name="VSeparator" cname="GtkVSeparator" parent="GtkSeparator">
      <method name="GetType" cname="gtk_vseparator_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_vseparator_new" />
    </object>
    <object name="Widget" cname="GtkWidget" parent="GtkObject">
      <field name="PrivateFlags" cname="private_flags" type="guint16" />
      <field name="State" cname="state" type="guint8" />
      <field name="SavedState" cname="saved_state" type="guint8" />
      <field name="Name" cname="name" type="gchar*" />
      <field name="Style" cname="style" type="GtkStyle*" access="public" />
      <field name="Requisition" cname="requisition" type="GtkRequisition" access="public" />
      <field name="Allocation" cname="allocation" type="GtkAllocation" access="public" />
      <field name="Window" cname="window" type="GdkWindow*" access="public" />
      <field name="Parent" cname="parent" type="GtkWidget*" access="public" />
      <method name="Activate" cname="gtk_widget_activate">
        <return-type type="gboolean" />
      </method>
      <method name="AddAccelerator" cname="gtk_widget_add_accelerator">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="accel_signal" />
          <parameter type="GtkAccelGroup*" name="accel_group" />
          <parameter type="guint" name="accel_key" />
          <parameter type="GdkModifierType" name="accel_mods" />
          <parameter type="GtkAccelFlags" name="accel_flags" />
        </parameters>
      </method>
      <method name="AddEvents" cname="gtk_widget_add_events">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="events" />
        </parameters>
      </method>
      <method name="AddMnemonicLabel" cname="gtk_widget_add_mnemonic_label">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="label" />
        </parameters>
      </method>
      <method name="CanActivateAccel" cname="gtk_widget_can_activate_accel">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="signal_id" />
        </parameters>
      </method>
      <method name="ChildFocus" cname="gtk_widget_child_focus">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkDirectionType" name="direction" />
        </parameters>
      </method>
      <method name="ChildNotify" cname="gtk_widget_child_notify">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="child_property" />
        </parameters>
      </method>
      <method name="ClassFindStyleProperty" cname="gtk_widget_class_find_style_property" shared="true">
        <return-type type="GParamSpec*" />
        <parameters>
          <parameter type="GtkWidgetClass*" name="klass" />
          <parameter type="const-gchar*" name="property_name" />
        </parameters>
      </method>
      <method name="ClassInstallStyleProperty" cname="gtk_widget_class_install_style_property" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidgetClass*" name="klass" />
          <parameter type="GParamSpec*" name="pspec" />
        </parameters>
      </method>
      <method name="ClassInstallStylePropertyParser" cname="gtk_widget_class_install_style_property_parser" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidgetClass*" name="klass" />
          <parameter type="GParamSpec*" name="pspec" />
          <parameter type="GtkRcPropertyParser" name="parser" />
        </parameters>
      </method>
      <method name="ClassListStyleProperties" cname="gtk_widget_class_list_style_properties" shared="true">
        <return-type type="GParamSpec**" />
        <parameters>
          <parameter type="GtkWidgetClass*" name="klass" />
          <parameter type="guint*" name="n_properties" />
        </parameters>
      </method>
      <method name="ClassPath" cname="gtk_widget_class_path">
        <return-type type="void" />
        <parameters>
          <parameter type="guint*" name="path_length" />
          <parameter type="gchar**" name="path" />
          <parameter type="gchar**" name="path_reversed" />
        </parameters>
      </method>
      <method name="CreatePangoContext" cname="gtk_widget_create_pango_context">
        <return-type type="PangoContext*" />
      </method>
      <method name="CreatePangoLayout" cname="gtk_widget_create_pango_layout">
        <return-type type="PangoLayout*" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </method>
      <method name="Destroy" cname="gtk_widget_destroy">
        <return-type type="void" />
      </method>
      <method name="Destroyed" cname="gtk_widget_destroyed">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget**" name="widget_pointer" />
        </parameters>
      </method>
      <method name="Draw" cname="gtk_widget_draw" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRectangle*" name="area" />
        </parameters>
      </method>
      <method name="EnsureStyle" cname="gtk_widget_ensure_style">
        <return-type type="void" />
      </method>
      <method name="Event" cname="gtk_widget_event">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="FreezeChildNotify" cname="gtk_widget_freeze_child_notify">
        <return-type type="void" />
      </method>
      <method name="GetAccessible" cname="gtk_widget_get_accessible">
        <return-type type="AtkObject*" />
      </method>
      <method name="GetAction" cname="gtk_widget_get_action">
        <return-type type="GtkAction*" />
      </method>
      <method name="GetAncestor" cname="gtk_widget_get_ancestor">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="GType" name="widget_type" />
        </parameters>
      </method>
      <method name="GetChildRequisition" cname="gtk_widget_get_child_requisition">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRequisition*" name="requisition" />
        </parameters>
      </method>
      <method name="GetChildVisible" cname="gtk_widget_get_child_visible">
        <return-type type="gboolean" />
      </method>
      <method name="GetClipboard" cname="gtk_widget_get_clipboard">
        <return-type type="GtkClipboard*" />
        <parameters>
          <parameter type="GdkAtom" name="selection" />
        </parameters>
      </method>
      <method name="GetColormap" cname="gtk_widget_get_colormap">
        <return-type type="GdkColormap*" />
      </method>
      <method name="GetCompositeName" cname="gtk_widget_get_composite_name">
        <return-type type="gchar*" />
      </method>
      <method name="GetDefaultColormap" cname="gtk_widget_get_default_colormap" shared="true">
        <return-type type="GdkColormap*" />
      </method>
      <method name="GetDefaultDirection" cname="gtk_widget_get_default_direction" shared="true">
        <return-type type="GtkTextDirection" />
      </method>
      <method name="GetDefaultStyle" cname="gtk_widget_get_default_style" shared="true">
        <return-type type="GtkStyle*" />
      </method>
      <method name="GetDefaultVisual" cname="gtk_widget_get_default_visual" shared="true">
        <return-type type="GdkVisual*" />
      </method>
      <method name="GetDirection" cname="gtk_widget_get_direction">
        <return-type type="GtkTextDirection" />
      </method>
      <method name="GetDisplay" cname="gtk_widget_get_display">
        <return-type type="GdkDisplay*" />
      </method>
      <method name="GetEvents" cname="gtk_widget_get_events">
        <return-type type="gint" />
      </method>
      <method name="GetExtensionEvents" cname="gtk_widget_get_extension_events">
        <return-type type="GdkExtensionMode" />
      </method>
      <method name="GetModifierStyle" cname="gtk_widget_get_modifier_style">
        <return-type type="GtkRcStyle*" />
      </method>
      <method name="GetName" cname="gtk_widget_get_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetNoShowAll" cname="gtk_widget_get_no_show_all">
        <return-type type="gboolean" />
      </method>
      <method name="GetPangoContext" cname="gtk_widget_get_pango_context">
        <return-type type="PangoContext*" />
      </method>
      <method name="GetParent" cname="gtk_widget_get_parent">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetParentWindow" cname="gtk_widget_get_parent_window">
        <return-type type="GdkWindow*" />
      </method>
      <method name="GetPointer" cname="gtk_widget_get_pointer">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
        </parameters>
      </method>
      <method name="GetRootWindow" cname="gtk_widget_get_root_window">
        <return-type type="GdkWindow*" />
      </method>
      <method name="GetScreen" cname="gtk_widget_get_screen">
        <return-type type="GdkScreen*" />
      </method>
      <method name="GetSettings" cname="gtk_widget_get_settings">
        <return-type type="GtkSettings*" />
      </method>
      <method name="GetSizeRequest" cname="gtk_widget_get_size_request">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="height" />
        </parameters>
      </method>
      <method name="GetStyle" cname="gtk_widget_get_style">
        <return-type type="GtkStyle*" />
      </method>
      <method name="GetToplevel" cname="gtk_widget_get_toplevel">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetType" cname="gtk_widget_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVisual" cname="gtk_widget_get_visual">
        <return-type type="GdkVisual*" />
      </method>
      <method name="GrabDefault" cname="gtk_widget_grab_default">
        <return-type type="void" />
      </method>
      <method name="GrabFocus" cname="gtk_widget_grab_focus">
        <return-type type="void" />
      </method>
      <method name="HasScreen" cname="gtk_widget_has_screen">
        <return-type type="gboolean" />
      </method>
      <method name="Hide" cname="gtk_widget_hide">
        <return-type type="void" />
      </method>
      <method name="HideAll" cname="gtk_widget_hide_all">
        <return-type type="void" />
      </method>
      <method name="HideOnDelete" cname="gtk_widget_hide_on_delete">
        <return-type type="gboolean" />
      </method>
      <method name="InputShapeCombineMask" cname="gtk_widget_input_shape_combine_mask">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkBitmap*" name="shape_mask" />
          <parameter type="gint" name="offset_x" />
          <parameter type="gint" name="offset_y" />
        </parameters>
      </method>
      <method name="Intersect" cname="gtk_widget_intersect">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GdkRectangle*" name="intersection" />
        </parameters>
      </method>
      <method name="IsAncestor" cname="gtk_widget_is_ancestor">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="ancestor" />
        </parameters>
      </method>
      <method name="IsComposited" cname="gtk_widget_is_composited">
        <return-type type="gboolean" />
      </method>
      <method name="IsFocus" cname="gtk_widget_is_focus">
        <return-type type="gboolean" />
      </method>
      <method name="ListAccelClosures" cname="gtk_widget_list_accel_closures">
        <return-type type="GList*" />
      </method>
      <method name="ListMnemonicLabels" cname="gtk_widget_list_mnemonic_labels">
        <return-type type="GList*" />
      </method>
      <method name="Map" cname="gtk_widget_map">
        <return-type type="void" />
      </method>
      <method name="MnemonicActivate" cname="gtk_widget_mnemonic_activate">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gboolean" name="group_cycling" />
        </parameters>
      </method>
      <method name="ModifyBase" cname="gtk_widget_modify_base">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStateType" name="state" />
          <parameter type="const-GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="ModifyBg" cname="gtk_widget_modify_bg">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStateType" name="state" />
          <parameter type="const-GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="ModifyFg" cname="gtk_widget_modify_fg">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStateType" name="state" />
          <parameter type="const-GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="ModifyFont" cname="gtk_widget_modify_font">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoFontDescription*" name="font_desc" />
        </parameters>
      </method>
      <method name="ModifyStyle" cname="gtk_widget_modify_style">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRcStyle*" name="style" />
        </parameters>
      </method>
      <method name="ModifyText" cname="gtk_widget_modify_text">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStateType" name="state" />
          <parameter type="const-GdkColor*" name="color" />
        </parameters>
      </method>
      <constructor cname="gtk_widget_new">
        <parameters>
          <parameter type="GType" name="type" />
          <parameter type="const-gchar*" name="first_property_name" />
          <parameter ellipsis="true" />
        </parameters>
      </constructor>
      <method name="Path" cname="gtk_widget_path">
        <return-type type="void" />
        <parameters>
          <parameter type="guint*" name="path_length" />
          <parameter type="gchar**" name="path" />
          <parameter type="gchar**" name="path_reversed" />
        </parameters>
      </method>
      <method name="PopColormap" cname="gtk_widget_pop_colormap" shared="true">
        <return-type type="void" />
      </method>
      <method name="PopCompositeChild" cname="gtk_widget_pop_composite_child" shared="true">
        <return-type type="void" />
      </method>
      <method name="PushColormap" cname="gtk_widget_push_colormap" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkColormap*" name="cmap" />
        </parameters>
      </method>
      <method name="PushCompositeChild" cname="gtk_widget_push_composite_child" shared="true">
        <return-type type="void" />
      </method>
      <method name="QueueClear" cname="gtk_widget_queue_clear" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="QueueClearArea" cname="gtk_widget_queue_clear_area" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="QueueDraw" cname="gtk_widget_queue_draw">
        <return-type type="void" />
      </method>
      <method name="QueueDrawArea" cname="gtk_widget_queue_draw_area">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="QueueResize" cname="gtk_widget_queue_resize">
        <return-type type="void" />
      </method>
      <method name="QueueResizeNoRedraw" cname="gtk_widget_queue_resize_no_redraw">
        <return-type type="void" />
      </method>
      <method name="Realize" cname="gtk_widget_realize">
        <return-type type="void" />
      </method>
      <method name="Ref" cname="gtk_widget_ref">
        <return-type type="GtkWidget*" />
      </method>
      <method name="RegionIntersect" cname="gtk_widget_region_intersect">
        <return-type type="GdkRegion*" />
        <parameters>
          <parameter type="GdkRegion*" name="region" />
        </parameters>
      </method>
      <method name="RemoveAccelerator" cname="gtk_widget_remove_accelerator">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkAccelGroup*" name="accel_group" />
          <parameter type="guint" name="accel_key" />
          <parameter type="GdkModifierType" name="accel_mods" />
        </parameters>
      </method>
      <method name="RemoveMnemonicLabel" cname="gtk_widget_remove_mnemonic_label">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="label" />
        </parameters>
      </method>
      <method name="RenderIcon" cname="gtk_widget_render_icon">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="const-gchar*" name="stock_id" />
          <parameter type="GtkIconSize" name="size" />
          <parameter type="const-gchar*" name="detail" />
        </parameters>
      </method>
      <method name="Reparent" cname="gtk_widget_reparent">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="new_parent" />
        </parameters>
      </method>
      <method name="ResetRcStyles" cname="gtk_widget_reset_rc_styles">
        <return-type type="void" />
      </method>
      <method name="ResetShapes" cname="gtk_widget_reset_shapes">
        <return-type type="void" />
      </method>
      <method name="SendExpose" cname="gtk_widget_send_expose">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="Set" cname="gtk_widget_set" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="first_property_name" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="SetAccelPath" cname="gtk_widget_set_accel_path">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="accel_path" />
          <parameter type="GtkAccelGroup*" name="accel_group" />
        </parameters>
      </method>
      <method name="SetAppPaintable" cname="gtk_widget_set_app_paintable">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="app_paintable" />
        </parameters>
      </method>
      <method name="SetChildVisible" cname="gtk_widget_set_child_visible">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="is_visible" />
        </parameters>
      </method>
      <method name="SetColormap" cname="gtk_widget_set_colormap">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkColormap*" name="colormap" />
        </parameters>
      </method>
      <method name="SetCompositeName" cname="gtk_widget_set_composite_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="SetDefaultColormap" cname="gtk_widget_set_default_colormap" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkColormap*" name="colormap" />
        </parameters>
      </method>
      <method name="SetDefaultDirection" cname="gtk_widget_set_default_direction" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextDirection" name="dir" />
        </parameters>
      </method>
      <method name="SetDirection" cname="gtk_widget_set_direction">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextDirection" name="dir" />
        </parameters>
      </method>
      <method name="SetDoubleBuffered" cname="gtk_widget_set_double_buffered">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="double_buffered" />
        </parameters>
      </method>
      <method name="SetEvents" cname="gtk_widget_set_events">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="events" />
        </parameters>
      </method>
      <method name="SetExtensionEvents" cname="gtk_widget_set_extension_events">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkExtensionMode" name="mode" />
        </parameters>
      </method>
      <method name="SetName" cname="gtk_widget_set_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="SetNoShowAll" cname="gtk_widget_set_no_show_all">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="no_show_all" />
        </parameters>
      </method>
      <method name="SetParent" cname="gtk_widget_set_parent">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="parent" />
        </parameters>
      </method>
      <method name="SetParentWindow" cname="gtk_widget_set_parent_window">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="parent_window" />
        </parameters>
      </method>
      <method name="SetRedrawOnAllocate" cname="gtk_widget_set_redraw_on_allocate">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="redraw_on_allocate" />
        </parameters>
      </method>
      <method name="SetScrollAdjustments" cname="gtk_widget_set_scroll_adjustments">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkAdjustment*" name="hadjustment" />
          <parameter type="GtkAdjustment*" name="vadjustment" />
        </parameters>
      </method>
      <method name="SetSensitive" cname="gtk_widget_set_sensitive">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="sensitive" />
        </parameters>
      </method>
      <method name="SetSizeRequest" cname="gtk_widget_set_size_request">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="SetState" cname="gtk_widget_set_state">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStateType" name="state" />
        </parameters>
      </method>
      <method name="SetStyle" cname="gtk_widget_set_style">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
        </parameters>
      </method>
      <method name="SetUposition" cname="gtk_widget_set_uposition" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="SetUsize" cname="gtk_widget_set_usize" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="ShapeCombineMask" cname="gtk_widget_shape_combine_mask">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkBitmap*" name="shape_mask" />
          <parameter type="gint" name="offset_x" />
          <parameter type="gint" name="offset_y" />
        </parameters>
      </method>
      <method name="Show" cname="gtk_widget_show">
        <return-type type="void" />
      </method>
      <method name="ShowAll" cname="gtk_widget_show_all">
        <return-type type="void" />
      </method>
      <method name="ShowNow" cname="gtk_widget_show_now">
        <return-type type="void" />
      </method>
      <method name="SizeAllocate" cname="gtk_widget_size_allocate">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAllocation*" name="allocation" />
        </parameters>
      </method>
      <method name="SizeRequest" cname="gtk_widget_size_request">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRequisition*" name="requisition" />
        </parameters>
      </method>
      <method name="StyleGet" cname="gtk_widget_style_get">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="first_property_name" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="StyleGetProperty" cname="gtk_widget_style_get_property">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="property_name" />
          <parameter type="GValue*" name="value" />
        </parameters>
      </method>
      <method name="StyleGetValist" cname="gtk_widget_style_get_valist">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="first_property_name" />
          <parameter type="va_list" name="var_args" />
        </parameters>
      </method>
      <method name="ThawChildNotify" cname="gtk_widget_thaw_child_notify">
        <return-type type="void" />
      </method>
      <method name="TranslateCoordinates" cname="gtk_widget_translate_coordinates">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="dest_widget" />
          <parameter type="gint" name="src_x" />
          <parameter type="gint" name="src_y" />
          <parameter type="gint*" name="dest_x" />
          <parameter type="gint*" name="dest_y" />
        </parameters>
      </method>
      <method name="Unmap" cname="gtk_widget_unmap">
        <return-type type="void" />
      </method>
      <method name="Unparent" cname="gtk_widget_unparent">
        <return-type type="void" />
      </method>
      <method name="Unrealize" cname="gtk_widget_unrealize">
        <return-type type="void" />
      </method>
      <method name="Unref" cname="gtk_widget_unref">
        <return-type type="void" />
      </method>
    </object>
    <object name="Window" cname="GtkWindow" parent="GtkBin">
      <field name="Title" cname="title" type="gchar*" />
      <field name="WmclassName" cname="wmclass_name" type="gchar*" />
      <field name="WmclassClass" cname="wmclass_class" type="gchar*" />
      <field name="WmRole" cname="wm_role" type="gchar*" />
      <field name="FocusWidget" cname="focus_widget" type="GtkWidget*" />
      <field name="DefaultWidget" cname="default_widget" type="GtkWidget*" />
      <field name="TransientParent" cname="transient_parent" type="GtkWindow*" />
      <field name="GeometryInfo" cname="geometry_info" type="GtkWindowGeometryInfo*" />
      <field name="Frame" cname="frame" type="GdkWindow*" />
      <field name="Group" cname="group" type="GtkWindowGroup*" />
      <field name="ConfigureRequestCount" cname="configure_request_count" type="guint16" />
      <field name="AllowShrink" cname="allow_shrink" bits="1" type="guint" />
      <field name="AllowGrow" cname="allow_grow" bits="1" type="guint" />
      <field name="ConfigureNotifyReceived" cname="configure_notify_received" bits="1" type="guint" />
      <field name="NeedDefaultPosition" cname="need_default_position" bits="1" type="guint" />
      <field name="NeedDefaultSize" cname="need_default_size" bits="1" type="guint" />
      <field name="Position" cname="position" bits="3" type="guint" />
      <field name="Type" cname="type" bits="4" type="guint" />
      <field name="HasUserRefCount" cname="has_user_ref_count" bits="1" type="guint" />
      <field name="HasFocus" cname="has_focus" bits="1" type="guint" />
      <field name="Modal" cname="modal" bits="1" type="guint" />
      <field name="DestroyWithParent" cname="destroy_with_parent" bits="1" type="guint" />
      <field name="HasFrame" cname="has_frame" bits="1" type="guint" />
      <field name="IconifyInitially" cname="iconify_initially" bits="1" type="guint" />
      <field name="StickInitially" cname="stick_initially" bits="1" type="guint" />
      <field name="MaximizeInitially" cname="maximize_initially" bits="1" type="guint" />
      <field name="Decorated" cname="decorated" bits="1" type="guint" />
      <field name="TypeHint" cname="type_hint" bits="3" type="guint" />
      <field name="Gravity" cname="gravity" bits="5" type="guint" />
      <field name="IsActive" cname="is_active" bits="1" type="guint" />
      <field name="HasToplevelFocus" cname="has_toplevel_focus" bits="1" type="guint" />
      <field name="FrameLeft" cname="frame_left" type="guint" />
      <field name="FrameTop" cname="frame_top" type="guint" />
      <field name="FrameRight" cname="frame_right" type="guint" />
      <field name="FrameBottom" cname="frame_bottom" type="guint" />
      <field name="KeysChangedHandler" cname="keys_changed_handler" type="guint" />
      <field name="MnemonicModifier" cname="mnemonic_modifier" type="GdkModifierType" />
      <field name="Screen" cname="screen" type="GdkScreen*" />
      <method name="ActivateDefault" cname="gtk_window_activate_default">
        <return-type type="gboolean" />
      </method>
      <method name="ActivateFocus" cname="gtk_window_activate_focus">
        <return-type type="gboolean" />
      </method>
      <method name="ActivateKey" cname="gtk_window_activate_key">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkEventKey*" name="event" />
        </parameters>
      </method>
      <method name="AddAccelGroup" cname="gtk_window_add_accel_group">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAccelGroup*" name="accel_group" />
        </parameters>
      </method>
      <method name="AddEmbeddedXid" cname="gtk_window_add_embedded_xid">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="xid" />
        </parameters>
      </method>
      <method name="AddMnemonic" cname="gtk_window_add_mnemonic">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="keyval" />
          <parameter type="GtkWidget*" name="target" />
        </parameters>
      </method>
      <method name="BeginMoveDrag" cname="gtk_window_begin_move_drag">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="button" />
          <parameter type="gint" name="root_x" />
          <parameter type="gint" name="root_y" />
          <parameter type="guint32" name="timestamp" />
        </parameters>
      </method>
      <method name="BeginResizeDrag" cname="gtk_window_begin_resize_drag">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindowEdge" name="edge" />
          <parameter type="gint" name="button" />
          <parameter type="gint" name="root_x" />
          <parameter type="gint" name="root_y" />
          <parameter type="guint32" name="timestamp" />
        </parameters>
      </method>
      <method name="Deiconify" cname="gtk_window_deiconify">
        <return-type type="void" />
      </method>
      <method name="Fullscreen" cname="gtk_window_fullscreen">
        <return-type type="void" />
      </method>
      <method name="GetAcceptFocus" cname="gtk_window_get_accept_focus">
        <return-type type="gboolean" />
      </method>
      <method name="GetDecorated" cname="gtk_window_get_decorated">
        <return-type type="gboolean" />
      </method>
      <method name="GetDefaultIconList" cname="gtk_window_get_default_icon_list" shared="true">
        <return-type type="GList*" />
      </method>
      <method name="GetDefaultSize" cname="gtk_window_get_default_size">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="height" />
        </parameters>
      </method>
      <method name="GetDeletable" cname="gtk_window_get_deletable">
        <return-type type="gboolean" />
      </method>
      <method name="GetDestroyWithParent" cname="gtk_window_get_destroy_with_parent">
        <return-type type="gboolean" />
      </method>
      <method name="GetFocus" cname="gtk_window_get_focus">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetFocusOnMap" cname="gtk_window_get_focus_on_map">
        <return-type type="gboolean" />
      </method>
      <method name="GetFrameDimensions" cname="gtk_window_get_frame_dimensions">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="left" />
          <parameter type="gint*" name="top" />
          <parameter type="gint*" name="right" />
          <parameter type="gint*" name="bottom" />
        </parameters>
      </method>
      <method name="GetGravity" cname="gtk_window_get_gravity">
        <return-type type="GdkGravity" />
      </method>
      <method name="GetGroup" cname="gtk_window_get_group">
        <return-type type="GtkWindowGroup*" />
      </method>
      <method name="GetHasFrame" cname="gtk_window_get_has_frame">
        <return-type type="gboolean" />
      </method>
      <method name="GetIcon" cname="gtk_window_get_icon">
        <return-type type="GdkPixbuf*" />
      </method>
      <method name="GetIconList" cname="gtk_window_get_icon_list">
        <return-type type="GList*" />
      </method>
      <method name="GetIconName" cname="gtk_window_get_icon_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetMnemonicModifier" cname="gtk_window_get_mnemonic_modifier">
        <return-type type="GdkModifierType" />
      </method>
      <method name="GetModal" cname="gtk_window_get_modal">
        <return-type type="gboolean" />
      </method>
      <method name="GetPosition" cname="gtk_window_get_position">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="root_x" />
          <parameter type="gint*" name="root_y" />
        </parameters>
      </method>
      <method name="GetResizable" cname="gtk_window_get_resizable">
        <return-type type="gboolean" />
      </method>
      <method name="GetRole" cname="gtk_window_get_role">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetScreen" cname="gtk_window_get_screen">
        <return-type type="GdkScreen*" />
      </method>
      <method name="GetSize" cname="gtk_window_get_size">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="height" />
        </parameters>
      </method>
      <method name="GetSkipPagerHint" cname="gtk_window_get_skip_pager_hint">
        <return-type type="gboolean" />
      </method>
      <method name="GetSkipTaskbarHint" cname="gtk_window_get_skip_taskbar_hint">
        <return-type type="gboolean" />
      </method>
      <method name="GetTitle" cname="gtk_window_get_title">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetTransientFor" cname="gtk_window_get_transient_for">
        <return-type type="GtkWindow*" />
      </method>
      <method name="GetType" cname="gtk_window_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetTypeHint" cname="gtk_window_get_type_hint">
        <return-type type="GdkWindowTypeHint" />
      </method>
      <method name="GetUrgencyHint" cname="gtk_window_get_urgency_hint">
        <return-type type="gboolean" />
      </method>
      <method name="HasToplevelFocus" cname="gtk_window_has_toplevel_focus">
        <return-type type="gboolean" />
      </method>
      <method name="Iconify" cname="gtk_window_iconify">
        <return-type type="void" />
      </method>
      <method name="IsActive" cname="gtk_window_is_active">
        <return-type type="gboolean" />
      </method>
      <method name="ListToplevels" cname="gtk_window_list_toplevels" shared="true">
        <return-type type="GList*" />
      </method>
      <method name="Maximize" cname="gtk_window_maximize">
        <return-type type="void" />
      </method>
      <method name="MnemonicActivate" cname="gtk_window_mnemonic_activate">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="keyval" />
          <parameter type="GdkModifierType" name="modifier" />
        </parameters>
      </method>
      <method name="Move" cname="gtk_window_move">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <constructor cname="gtk_window_new">
        <parameters>
          <parameter type="GtkWindowType" name="type" />
        </parameters>
      </constructor>
      <method name="ParseGeometry" cname="gtk_window_parse_geometry">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="geometry" />
        </parameters>
      </method>
      <method name="Present" cname="gtk_window_present">
        <return-type type="void" />
      </method>
      <method name="PresentWithTime" cname="gtk_window_present_with_time">
        <return-type type="void" />
        <parameters>
          <parameter type="guint32" name="timestamp" />
        </parameters>
      </method>
      <method name="PropagateKeyEvent" cname="gtk_window_propagate_key_event">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkEventKey*" name="event" />
        </parameters>
      </method>
      <method name="RemoveAccelGroup" cname="gtk_window_remove_accel_group">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAccelGroup*" name="accel_group" />
        </parameters>
      </method>
      <method name="RemoveEmbeddedXid" cname="gtk_window_remove_embedded_xid">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="xid" />
        </parameters>
      </method>
      <method name="RemoveMnemonic" cname="gtk_window_remove_mnemonic">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="keyval" />
          <parameter type="GtkWidget*" name="target" />
        </parameters>
      </method>
      <method name="ReshowWithInitialSize" cname="gtk_window_reshow_with_initial_size">
        <return-type type="void" />
      </method>
      <method name="Resize" cname="gtk_window_resize">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="SetAcceptFocus" cname="gtk_window_set_accept_focus">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetAutoStartupNotification" cname="gtk_window_set_auto_startup_notification" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetDecorated" cname="gtk_window_set_decorated">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetDefault" cname="gtk_window_set_default">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="default_widget" />
        </parameters>
      </method>
      <method name="SetDefaultIcon" cname="gtk_window_set_default_icon" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixbuf*" name="icon" />
        </parameters>
      </method>
      <method name="SetDefaultIconFromFile" cname="gtk_window_set_default_icon_from_file" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
          <parameter type="GError**" name="err" />
        </parameters>
      </method>
      <method name="SetDefaultIconList" cname="gtk_window_set_default_icon_list" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GList*" name="list" />
        </parameters>
      </method>
      <method name="SetDefaultIconName" cname="gtk_window_set_default_icon_name" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="SetDefaultSize" cname="gtk_window_set_default_size">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="SetDeletable" cname="gtk_window_set_deletable">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetDestroyWithParent" cname="gtk_window_set_destroy_with_parent">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetFocus" cname="gtk_window_set_focus">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="focus" />
        </parameters>
      </method>
      <method name="SetFocusOnMap" cname="gtk_window_set_focus_on_map">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetFrameDimensions" cname="gtk_window_set_frame_dimensions">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="left" />
          <parameter type="gint" name="top" />
          <parameter type="gint" name="right" />
          <parameter type="gint" name="bottom" />
        </parameters>
      </method>
      <method name="SetGeometryHints" cname="gtk_window_set_geometry_hints">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="geometry_widget" />
          <parameter type="GdkGeometry*" name="geometry" />
          <parameter type="GdkWindowHints" name="geom_mask" />
        </parameters>
      </method>
      <method name="SetGravity" cname="gtk_window_set_gravity">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGravity" name="gravity" />
        </parameters>
      </method>
      <method name="SetHasFrame" cname="gtk_window_set_has_frame">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetIcon" cname="gtk_window_set_icon">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixbuf*" name="icon" />
        </parameters>
      </method>
      <method name="SetIconFromFile" cname="gtk_window_set_icon_from_file">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
          <parameter type="GError**" name="err" />
        </parameters>
      </method>
      <method name="SetIconList" cname="gtk_window_set_icon_list">
        <return-type type="void" />
        <parameters>
          <parameter type="GList*" name="list" />
        </parameters>
      </method>
      <method name="SetIconName" cname="gtk_window_set_icon_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="SetKeepAbove" cname="gtk_window_set_keep_above">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetKeepBelow" cname="gtk_window_set_keep_below">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetMnemonicModifier" cname="gtk_window_set_mnemonic_modifier">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkModifierType" name="modifier" />
        </parameters>
      </method>
      <method name="SetModal" cname="gtk_window_set_modal">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="modal" />
        </parameters>
      </method>
      <method name="SetPolicy" cname="gtk_window_set_policy" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="allow_shrink" />
          <parameter type="gint" name="allow_grow" />
          <parameter type="gint" name="auto_shrink" />
        </parameters>
      </method>
      <method name="SetPosition" cname="gtk_window_set_position">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWindowPosition" name="position" />
        </parameters>
      </method>
      <method name="SetResizable" cname="gtk_window_set_resizable">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="resizable" />
        </parameters>
      </method>
      <method name="SetRole" cname="gtk_window_set_role">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="role" />
        </parameters>
      </method>
      <method name="SetScreen" cname="gtk_window_set_screen">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkScreen*" name="screen" />
        </parameters>
      </method>
      <method name="SetSkipPagerHint" cname="gtk_window_set_skip_pager_hint">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetSkipTaskbarHint" cname="gtk_window_set_skip_taskbar_hint">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetTitle" cname="gtk_window_set_title">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="title" />
        </parameters>
      </method>
      <method name="SetTransientFor" cname="gtk_window_set_transient_for">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWindow*" name="parent" />
        </parameters>
      </method>
      <method name="SetTypeHint" cname="gtk_window_set_type_hint">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindowTypeHint" name="hint" />
        </parameters>
      </method>
      <method name="SetUrgencyHint" cname="gtk_window_set_urgency_hint">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetWmclass" cname="gtk_window_set_wmclass">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="wmclass_name" />
          <parameter type="const-gchar*" name="wmclass_class" />
        </parameters>
      </method>
      <method name="Stick" cname="gtk_window_stick">
        <return-type type="void" />
      </method>
      <method name="Unfullscreen" cname="gtk_window_unfullscreen">
        <return-type type="void" />
      </method>
      <method name="Unmaximize" cname="gtk_window_unmaximize">
        <return-type type="void" />
      </method>
      <method name="Unstick" cname="gtk_window_unstick">
        <return-type type="void" />
      </method>
    </object>
    <object name="WindowGroup" cname="GtkWindowGroup" parent="GObject">
      <field name="Grabs" cname="grabs" type="GSList*" />
      <method name="AddWindow" cname="gtk_window_group_add_window">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWindow*" name="window" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_window_group_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_window_group_new" />
      <method name="RemoveWindow" cname="gtk_window_group_remove_window">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWindow*" name="window" />
        </parameters>
      </method>
    </object>
    <struct name="AccelGroupEntry" cname="GtkAccelGroupEntry">
      <field name="Key" cname="key" type="GtkAccelKey" />
      <field name="Closure" cname="closure" type="GClosure*" />
      <field name="AccelPathQuark" cname="accel_path_quark" type="GQuark" />
    </struct>
    <struct name="AccelKey" cname="GtkAccelKey">
      <field name="AccelKey" cname="accel_key" type="guint" />
      <field name="AccelMods" cname="accel_mods" type="GdkModifierType" />
      <field name="AccelFlags" cname="accel_flags" bits="16" type="guint" />
    </struct>
    <struct name="ActionEntry" cname="GtkActionEntry">
      <field name="Name" cname="name" type="const-gchar*" />
      <field name="StockId" cname="stock_id" type="const-gchar*" />
      <field name="Label" cname="label" type="const-gchar*" />
      <field name="Accelerator" cname="accelerator" type="const-gchar*" />
      <field name="Tooltip" cname="tooltip" type="const-gchar*" />
      <field name="Callback" cname="callback" type="GCallback" />
    </struct>
    <alias name="Allocation" cname="GtkAllocation" type="GdkRectangle" />
    <struct name="Arg" cname="GtkArg" deprecated="1">
      <field name="Type" cname="type" type="GtkType" />
      <field name="Name" cname="name" type="gchar*" />
      <field name="CharData" cname="char_data" type="gchar" />
    </struct>
    <struct name="BindingArg" cname="GtkBindingArg">
      <field name="ArgType" cname="arg_type" type="GType" />
      <field name="LongData" cname="long_data" type="glong" />
    </struct>
    <struct name="BindingEntry" cname="GtkBindingEntry">
      <field name="Keyval" cname="keyval" type="guint" />
      <field name="Modifiers" cname="modifiers" type="GdkModifierType" />
      <field name="BindingSet" cname="binding_set" type="GtkBindingSet*" />
      <field name="Destroyed" cname="destroyed" bits="1" type="guint" />
      <field name="InEmission" cname="in_emission" bits="1" type="guint" />
      <field name="SetNext" cname="set_next" type="GtkBindingEntry*" />
      <field name="HashNext" cname="hash_next" type="GtkBindingEntry*" />
      <field name="Signals" cname="signals" type="GtkBindingSignal*" />
      <method name="AddSignal" cname="gtk_binding_entry_add_signal" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkBindingSet*" name="binding_set" />
          <parameter type="guint" name="keyval" />
          <parameter type="GdkModifierType" name="modifiers" />
          <parameter type="const-gchar*" name="signal_name" />
          <parameter type="guint" name="n_args" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="AddSignall" cname="gtk_binding_entry_add_signall" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkBindingSet*" name="binding_set" />
          <parameter type="guint" name="keyval" />
          <parameter type="GdkModifierType" name="modifiers" />
          <parameter type="const-gchar*" name="signal_name" />
          <parameter type="GSList*" name="binding_args" />
        </parameters>
      </method>
      <method name="Clear" cname="gtk_binding_entry_clear" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkBindingSet*" name="binding_set" />
          <parameter type="guint" name="keyval" />
          <parameter type="GdkModifierType" name="modifiers" />
        </parameters>
      </method>
      <method name="Remove" cname="gtk_binding_entry_remove" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkBindingSet*" name="binding_set" />
          <parameter type="guint" name="keyval" />
          <parameter type="GdkModifierType" name="modifiers" />
        </parameters>
      </method>
    </struct>
    <struct name="BindingSet" cname="GtkBindingSet" opaque="true">
      <field name="SetName" cname="set_name" type="gchar*" access="public" writeable="true" />
      <field name="Priority" cname="priority" type="gint" access="public" writeable="true" />
      <field name="WidgetPathPspecs" cname="widget_path_pspecs" type="GSList*" access="public" writeable="true" />
      <field name="WidgetClassPspecs" cname="widget_class_pspecs" type="GSList*" access="public" writeable="true" />
      <field name="ClassBranchPspecs" cname="class_branch_pspecs" type="GSList*" access="public" writeable="true" />
      <field name="Entries" cname="entries" type="GtkBindingEntry*" access="public" writeable="true" />
      <field name="Current" cname="current" type="GtkBindingEntry*" access="public" writeable="true" />
      <field name="Parsed" cname="parsed" bits="1" type="guint" access="public" writeable="true" />
      <method name="Activate" cname="gtk_binding_set_activate">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="keyval" />
          <parameter type="GdkModifierType" name="modifiers" />
          <parameter type="GtkObject*" name="object" />
        </parameters>
      </method>
      <method name="AddPath" cname="gtk_binding_set_add_path">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPathType" name="path_type" />
          <parameter type="const-gchar*" name="path_pattern" />
          <parameter type="GtkPathPriorityType" name="priority" />
        </parameters>
      </method>
      <method name="ByClass" cname="gtk_binding_set_by_class" shared="true">
        <return-type type="GtkBindingSet*" />
        <parameters>
          <parameter type="gpointer" name="object_class" />
        </parameters>
      </method>
      <method name="Find" cname="gtk_binding_set_find" shared="true">
        <return-type type="GtkBindingSet*" />
        <parameters>
          <parameter type="const-gchar*" name="set_name" />
        </parameters>
      </method>
      <constructor cname="gtk_binding_set_new">
        <parameters>
          <parameter type="const-gchar*" name="set_name" />
        </parameters>
      </constructor>
    </struct>
    <struct name="BindingSignal" cname="GtkBindingSignal">
      <field name="Next" cname="next" type="GtkBindingSignal*" />
      <field name="SignalName" cname="signal_name" type="gchar*" />
      <field name="NArgs" cname="n_args" type="guint" />
      <field name="Args" cname="args" type="GtkBindingArg*" />
    </struct>
    <struct name="Border" cname="GtkBorder">
      <field name="Left" cname="left" type="gint" />
      <field name="Right" cname="right" type="gint" />
      <field name="Top" cname="top" type="gint" />
      <field name="Bottom" cname="bottom" type="gint" />
      <method name="Copy" cname="gtk_border_copy">
        <return-type type="GtkBorder*" owned="true" />
      </method>
      <method name="Free" cname="gtk_border_free">
        <return-type type="void" />
      </method>
      <method name="GetType" cname="gtk_border_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </struct>
    <struct name="BoxChild" cname="GtkBoxChild">
      <field name="Widget" cname="widget" type="GtkWidget*" />
      <field name="Padding" cname="padding" type="guint16" />
      <field name="Expand" cname="expand" bits="1" type="guint" />
      <field name="Fill" cname="fill" bits="1" type="guint" />
      <field name="Pack" cname="pack" bits="1" type="guint" />
      <field name="IsSecondary" cname="is_secondary" bits="1" type="guint" />
    </struct>
    <struct name="CListCellInfo" cname="GtkCListCellInfo" deprecated="1">
      <field name="Row" cname="row" type="gint" />
      <field name="Column" cname="column" type="gint" />
    </struct>
    <struct name="CListColumn" cname="GtkCListColumn" deprecated="1">
      <field name="Title" cname="title" type="gchar*" />
      <field name="Area" cname="area" type="GdkRectangle" />
      <field name="Button" cname="button" type="GtkWidget*" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="Width" cname="width" type="gint" />
      <field name="MinWidth" cname="min_width" type="gint" />
      <field name="MaxWidth" cname="max_width" type="gint" />
      <field name="Justification" cname="justification" type="GtkJustification" />
      <field name="Visible" cname="visible" bits="1" type="guint" />
      <field name="WidthSet" cname="width_set" bits="1" type="guint" />
      <field name="Resizeable" cname="resizeable" bits="1" type="guint" />
      <field name="AutoResize" cname="auto_resize" bits="1" type="guint" />
      <field name="ButtonPassive" cname="button_passive" bits="1" type="guint" />
      <method name="TitleActive" cname="gtk_clist_column_title_active" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCList*" name="clist" />
          <parameter type="gint" name="column" />
        </parameters>
      </method>
      <method name="TitlePassive" cname="gtk_clist_column_title_passive" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCList*" name="clist" />
          <parameter type="gint" name="column" />
        </parameters>
      </method>
      <method name="TitlesActive" cname="gtk_clist_column_titles_active" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCList*" name="clist" />
        </parameters>
      </method>
      <method name="TitlesHide" cname="gtk_clist_column_titles_hide" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCList*" name="clist" />
        </parameters>
      </method>
      <method name="TitlesPassive" cname="gtk_clist_column_titles_passive" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCList*" name="clist" />
        </parameters>
      </method>
      <method name="TitlesShow" cname="gtk_clist_column_titles_show" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCList*" name="clist" />
        </parameters>
      </method>
    </struct>
    <struct name="CListDestInfo" cname="GtkCListDestInfo" deprecated="1">
      <field name="Cell" cname="cell" type="GtkCListCellInfo" />
      <field name="InsertPos" cname="insert_pos" type="GtkCListDragPos" />
    </struct>
    <struct name="CListRow" cname="GtkCListRow" deprecated="1">
      <field name="Cell" cname="cell" type="GtkCell*" />
      <field name="State" cname="state" type="GtkStateType" />
      <field name="Foreground" cname="foreground" type="GdkColor" />
      <field name="Background" cname="background" type="GdkColor" />
      <field name="Style" cname="style" type="GtkStyle*" />
      <field name="Data" cname="data" type="gpointer" />
      <field name="Destroy" cname="destroy" type="GtkDestroyNotify" />
      <field name="FgSet" cname="fg_set" bits="1" type="guint" />
      <field name="BgSet" cname="bg_set" bits="1" type="guint" />
      <field name="Selectable" cname="selectable" bits="1" type="guint" />
      <method name="IsVisible" cname="gtk_clist_row_is_visible" deprecated="1" shared="true">
        <return-type type="GtkVisibility" />
        <parameters>
          <parameter type="GtkCList*" name="clist" />
          <parameter type="gint" name="row" />
        </parameters>
      </method>
      <method name="Move" cname="gtk_clist_row_move" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCList*" name="clist" />
          <parameter type="gint" name="source_row" />
          <parameter type="gint" name="dest_row" />
        </parameters>
      </method>
    </struct>
    <struct name="CTreeNode" cname="GtkCTreeNode" deprecated="1">
      <field name="List" cname="list" type="GList" />
      <method name="GetCellStyle" cname="gtk_ctree_node_get_cell_style" deprecated="1" shared="true">
        <return-type type="GtkStyle*" />
        <parameters>
          <parameter type="GtkCTree*" name="ctree" />
          <parameter type="GtkCTreeNode*" name="node" />
          <parameter type="gint" name="column" />
        </parameters>
      </method>
      <method name="GetCellType" cname="gtk_ctree_node_get_cell_type" deprecated="1" shared="true">
        <return-type type="GtkCellType" />
        <parameters>
          <parameter type="GtkCTree*" name="ctree" />
          <parameter type="GtkCTreeNode*" name="node" />
          <parameter type="gint" name="column" />
        </parameters>
      </method>
      <method name="GetPixmap" cname="gtk_ctree_node_get_pixmap" deprecated="1" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkCTree*" name="ctree" />
          <parameter type="GtkCTreeNode*" name="node" />
          <parameter type="gint" name="column" />
          <parameter type="GdkPixmap**" name="pixmap" />
          <parameter type="GdkBitmap**" name="mask" />
        </parameters>
      </method>
      <method name="GetPixtext" cname="gtk_ctree_node_get_pixtext" deprecated="1" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkCTree*" name="ctree" />
          <parameter type="GtkCTreeNode*" name="node" />
          <parameter type="gint" name="column" />
          <parameter type="gchar**" name="text" />
          <parameter type="guint8*" name="spacing" />
          <parameter type="GdkPixmap**" name="pixmap" />
          <parameter type="GdkBitmap**" name="mask" />
        </parameters>
      </method>
      <method name="GetRowData" cname="gtk_ctree_node_get_row_data" deprecated="1" shared="true">
        <return-type type="gpointer" />
        <parameters>
          <parameter type="GtkCTree*" name="ctree" />
          <parameter type="GtkCTreeNode*" name="node" />
        </parameters>
      </method>
      <method name="GetRowStyle" cname="gtk_ctree_node_get_row_style" deprecated="1" shared="true">
        <return-type type="GtkStyle*" />
        <parameters>
          <parameter type="GtkCTree*" name="ctree" />
          <parameter type="GtkCTreeNode*" name="node" />
        </parameters>
      </method>
      <method name="GetSelectable" cname="gtk_ctree_node_get_selectable" deprecated="1" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkCTree*" name="ctree" />
          <parameter type="GtkCTreeNode*" name="node" />
        </parameters>
      </method>
      <method name="GetText" cname="gtk_ctree_node_get_text" deprecated="1" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkCTree*" name="ctree" />
          <parameter type="GtkCTreeNode*" name="node" />
          <parameter type="gint" name="column" />
          <parameter type="gchar**" name="text" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_ctree_node_get_type" deprecated="1" shared="true">
        <return-type type="GType" />
      </method>
      <method name="IsVisible" cname="gtk_ctree_node_is_visible" deprecated="1" shared="true">
        <return-type type="GtkVisibility" />
        <parameters>
          <parameter type="GtkCTree*" name="ctree" />
          <parameter type="GtkCTreeNode*" name="node" />
        </parameters>
      </method>
      <method name="Moveto" cname="gtk_ctree_node_moveto" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTree*" name="ctree" />
          <parameter type="GtkCTreeNode*" name="node" />
          <parameter type="gint" name="column" />
          <parameter type="gfloat" name="row_align" />
          <parameter type="gfloat" name="col_align" />
        </parameters>
      </method>
      <method name="Nth" cname="gtk_ctree_node_nth" deprecated="1" shared="true">
        <return-type type="GtkCTreeNode*" />
        <parameters>
          <parameter type="GtkCTree*" name="ctree" />
          <parameter type="guint" name="row" />
        </parameters>
      </method>
      <method name="SetBackground" cname="gtk_ctree_node_set_background" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTree*" name="ctree" />
          <parameter type="GtkCTreeNode*" name="node" />
          <parameter type="const-GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="SetCellStyle" cname="gtk_ctree_node_set_cell_style" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTree*" name="ctree" />
          <parameter type="GtkCTreeNode*" name="node" />
          <parameter type="gint" name="column" />
          <parameter type="GtkStyle*" name="style" />
        </parameters>
      </method>
      <method name="SetForeground" cname="gtk_ctree_node_set_foreground" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTree*" name="ctree" />
          <parameter type="GtkCTreeNode*" name="node" />
          <parameter type="const-GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="SetPixmap" cname="gtk_ctree_node_set_pixmap" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTree*" name="ctree" />
          <parameter type="GtkCTreeNode*" name="node" />
          <parameter type="gint" name="column" />
          <parameter type="GdkPixmap*" name="pixmap" />
          <parameter type="GdkBitmap*" name="mask" />
        </parameters>
      </method>
      <method name="SetPixtext" cname="gtk_ctree_node_set_pixtext" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTree*" name="ctree" />
          <parameter type="GtkCTreeNode*" name="node" />
          <parameter type="gint" name="column" />
          <parameter type="const-gchar*" name="text" />
          <parameter type="guint8" name="spacing" />
          <parameter type="GdkPixmap*" name="pixmap" />
          <parameter type="GdkBitmap*" name="mask" />
        </parameters>
      </method>
      <method name="SetRowData" cname="gtk_ctree_node_set_row_data" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTree*" name="ctree" />
          <parameter type="GtkCTreeNode*" name="node" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="SetRowDataFull" cname="gtk_ctree_node_set_row_data_full" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTree*" name="ctree" />
          <parameter type="GtkCTreeNode*" name="node" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="SetRowStyle" cname="gtk_ctree_node_set_row_style" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTree*" name="ctree" />
          <parameter type="GtkCTreeNode*" name="node" />
          <parameter type="GtkStyle*" name="style" />
        </parameters>
      </method>
      <method name="SetSelectable" cname="gtk_ctree_node_set_selectable" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTree*" name="ctree" />
          <parameter type="GtkCTreeNode*" name="node" />
          <parameter type="gboolean" name="selectable" />
        </parameters>
      </method>
      <method name="SetShift" cname="gtk_ctree_node_set_shift" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTree*" name="ctree" />
          <parameter type="GtkCTreeNode*" name="node" />
          <parameter type="gint" name="column" />
          <parameter type="gint" name="vertical" />
          <parameter type="gint" name="horizontal" />
        </parameters>
      </method>
      <method name="SetText" cname="gtk_ctree_node_set_text" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCTree*" name="ctree" />
          <parameter type="GtkCTreeNode*" name="node" />
          <parameter type="gint" name="column" />
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </method>
    </struct>
    <struct name="CTreeRow" cname="GtkCTreeRow" deprecated="1">
      <field name="Row" cname="row" type="GtkCListRow" />
      <field name="Parent" cname="parent" type="GtkCTreeNode*" />
      <field name="Sibling" cname="sibling" type="GtkCTreeNode*" />
      <field name="Children" cname="children" type="GtkCTreeNode*" />
      <field name="PixmapClosed" cname="pixmap_closed" type="GdkPixmap*" />
      <field name="MaskClosed" cname="mask_closed" type="GdkBitmap*" />
      <field name="PixmapOpened" cname="pixmap_opened" type="GdkPixmap*" />
      <field name="MaskOpened" cname="mask_opened" type="GdkBitmap*" />
      <field name="Level" cname="level" type="guint16" />
      <field name="IsLeaf" cname="is_leaf" bits="1" type="guint" />
      <field name="Expanded" cname="expanded" bits="1" type="guint" />
    </struct>
    <struct name="Cell" cname="GtkCell" deprecated="1">
      <field name="Type" cname="type" type="GtkCellType" />
      <field name="Vertical" cname="vertical" type="gint16" />
      <field name="Horizontal" cname="horizontal" type="gint16" />
      <field name="Style" cname="style" type="GtkStyle*" />
      <field name="Text" cname="text" type="gchar*" />
    </struct>
    <struct name="CellPixText" cname="GtkCellPixText" deprecated="1">
      <field name="Type" cname="type" type="GtkCellType" />
      <field name="Vertical" cname="vertical" type="gint16" />
      <field name="Horizontal" cname="horizontal" type="gint16" />
      <field name="Style" cname="style" type="GtkStyle*" />
      <field name="Text" cname="text" type="gchar*" />
      <field name="Spacing" cname="spacing" type="guint8" />
      <field name="Pixmap" cname="pixmap" type="GdkPixmap*" />
      <field name="Mask" cname="mask" type="GdkBitmap*" />
    </struct>
    <struct name="CellPixmap" cname="GtkCellPixmap" deprecated="1">
      <field name="Type" cname="type" type="GtkCellType" />
      <field name="Vertical" cname="vertical" type="gint16" />
      <field name="Horizontal" cname="horizontal" type="gint16" />
      <field name="Style" cname="style" type="GtkStyle*" />
      <field name="Pixmap" cname="pixmap" type="GdkPixmap*" />
      <field name="Mask" cname="mask" type="GdkBitmap*" />
    </struct>
    <struct name="CellText" cname="GtkCellText" deprecated="1">
      <field name="Type" cname="type" type="GtkCellType" />
      <field name="Vertical" cname="vertical" type="gint16" />
      <field name="Horizontal" cname="horizontal" type="gint16" />
      <field name="Style" cname="style" type="GtkStyle*" />
      <field name="Text" cname="text" type="gchar*" />
    </struct>
    <struct name="CellWidget" cname="GtkCellWidget" deprecated="1">
      <field name="Type" cname="type" type="GtkCellType" />
      <field name="Vertical" cname="vertical" type="gint16" />
      <field name="Horizontal" cname="horizontal" type="gint16" />
      <field name="Style" cname="style" type="GtkStyle*" />
      <field name="Widget" cname="widget" type="GtkWidget*" />
    </struct>
    <alias name="ClassInitFunc" cname="GtkClassInitFunc" type="GBaseInitFunc" />
    <alias name="EnumValue" cname="GtkEnumValue" type="GEnumValue" />
    <struct name="FileFilterInfo" cname="GtkFileFilterInfo">
      <field name="Contains" cname="contains" type="GtkFileFilterFlags" />
      <field name="Filename" cname="filename" type="const-gchar*" />
      <field name="Uri" cname="uri" type="const-gchar*" />
      <field name="DisplayName" cname="display_name" type="const-gchar*" />
      <field name="MimeType" cname="mime_type" type="const-gchar*" />
    </struct>
    <struct name="FileInfo" cname="GtkFileInfo" opaque="true">
      <method name="Copy" cname="gtk_file_info_copy">
        <return-type type="GtkFileInfo*" owned="true" />
      </method>
      <method name="Free" cname="gtk_file_info_free">
        <return-type type="void" />
      </method>
      <method name="GetDisplayKey" cname="gtk_file_info_get_display_key">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetDisplayName" cname="gtk_file_info_get_display_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetIconName" cname="gtk_file_info_get_icon_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetIsFolder" cname="gtk_file_info_get_is_folder">
        <return-type type="gboolean" />
      </method>
      <method name="GetIsHidden" cname="gtk_file_info_get_is_hidden">
        <return-type type="gboolean" />
      </method>
      <method name="GetMimeType" cname="gtk_file_info_get_mime_type">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetModificationTime" cname="gtk_file_info_get_modification_time">
        <return-type type="GtkFileTime" />
      </method>
      <method name="GetSize" cname="gtk_file_info_get_size">
        <return-type type="gint64" />
      </method>
      <method name="GetType" cname="gtk_file_info_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_file_info_new" />
      <method name="RenderIcon" cname="gtk_file_info_render_icon">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="gint" name="pixel_size" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="SetDisplayName" cname="gtk_file_info_set_display_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="display_name" />
        </parameters>
      </method>
      <method name="SetIconName" cname="gtk_file_info_set_icon_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="con_name" />
        </parameters>
      </method>
      <method name="SetIsFolder" cname="gtk_file_info_set_is_folder">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="is_folder" />
        </parameters>
      </method>
      <method name="SetIsHidden" cname="gtk_file_info_set_is_hidden">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="is_hidden" />
        </parameters>
      </method>
      <method name="SetMimeType" cname="gtk_file_info_set_mime_type">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="mime_type" />
        </parameters>
      </method>
      <method name="SetModificationTime" cname="gtk_file_info_set_modification_time">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFileTime" name="modification_time" />
        </parameters>
      </method>
      <method name="SetSize" cname="gtk_file_info_set_size">
        <return-type type="void" />
        <parameters>
          <parameter type="gint64" name="size" />
        </parameters>
      </method>
    </struct>
    <struct name="FilePath" cname="GtkFilePath" opaque="true">
      <method name="GetType" cname="gtk_file_path_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </struct>
    <struct name="FileSystemHandleClass" cname="GtkFileSystemHandleClass">
      <field name="ParentClass" cname="parent_class" type="GObjectClass" />
    </struct>
    <struct name="FileSystemVolume" cname="GtkFileSystemVolume" opaque="true">
      <method name="Free" cname="gtk_file_system_volume_free" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFileSystem*" name="file_system" />
          <parameter type="GtkFileSystemVolume*" name="volume" />
        </parameters>
      </method>
      <method name="GetBasePath" cname="gtk_file_system_volume_get_base_path" shared="true">
        <return-type type="GtkFilePath*" />
        <parameters>
          <parameter type="GtkFileSystem*" name="file_system" />
          <parameter type="GtkFileSystemVolume*" name="volume" />
        </parameters>
      </method>
      <method name="GetDisplayName" cname="gtk_file_system_volume_get_display_name" shared="true">
        <return-type type="char*" />
        <parameters>
          <parameter type="GtkFileSystem*" name="file_system" />
          <parameter type="GtkFileSystemVolume*" name="volume" />
        </parameters>
      </method>
      <method name="GetIconName" cname="gtk_file_system_volume_get_icon_name" shared="true">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="GtkFileSystem*" name="file_system" />
          <parameter type="GtkFileSystemVolume*" name="volume" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="GetIsMounted" cname="gtk_file_system_volume_get_is_mounted" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkFileSystem*" name="file_system" />
          <parameter type="GtkFileSystemVolume*" name="volume" />
        </parameters>
      </method>
      <method name="Mount" cname="gtk_file_system_volume_mount" shared="true">
        <return-type type="GtkFileSystemHandle*" />
        <parameters>
          <parameter type="GtkFileSystem*" name="file_system" />
          <parameter type="GtkFileSystemVolume*" name="volume" />
          <parameter type="GtkFileSystemVolumeMountCallback" name="callback" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="RenderIcon" cname="gtk_file_system_volume_render_icon" shared="true">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="GtkFileSystem*" name="file_system" />
          <parameter type="GtkFileSystemVolume*" name="volume" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="gint" name="pixel_size" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
    </struct>
    <alias name="FileTime" cname="GtkFileTime" type="gint64" />
    <struct name="FixedChild" cname="GtkFixedChild">
      <field name="Widget" cname="widget" type="GtkWidget*" />
      <field name="X" cname="x" type="gint" />
      <field name="Y" cname="y" type="gint" />
    </struct>
    <alias name="FlagValue" cname="GtkFlagValue" type="GFlagsValue" />
    <alias name="FundamentalType" cname="GtkFundamentalType" type="GType" />
    <struct name="IMContextInfo" cname="GtkIMContextInfo">
      <field name="ContextId" cname="context_id" type="const-gchar*" />
      <field name="ContextName" cname="context_name" type="const-gchar*" />
      <field name="Domain" cname="domain" type="const-gchar*" />
      <field name="DomainDirname" cname="domain_dirname" type="const-gchar*" />
      <field name="DefaultLocales" cname="default_locales" type="const-gchar*" />
    </struct>
    <struct name="IconInfo" cname="GtkIconInfo" opaque="true">
      <method name="Copy" cname="gtk_icon_info_copy">
        <return-type type="GtkIconInfo*" owned="true" />
      </method>
      <method name="Free" cname="gtk_icon_info_free">
        <return-type type="void" />
      </method>
      <method name="GetAttachPoints" cname="gtk_icon_info_get_attach_points">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkPoint**" name="points" />
          <parameter type="gint*" name="n_points" />
        </parameters>
      </method>
      <method name="GetBaseSize" cname="gtk_icon_info_get_base_size">
        <return-type type="gint" />
      </method>
      <method name="GetBuiltinPixbuf" cname="gtk_icon_info_get_builtin_pixbuf">
        <return-type type="GdkPixbuf*" />
      </method>
      <method name="GetDisplayName" cname="gtk_icon_info_get_display_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetEmbeddedRect" cname="gtk_icon_info_get_embedded_rect">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkRectangle*" name="rectangle" />
        </parameters>
      </method>
      <method name="GetFilename" cname="gtk_icon_info_get_filename">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gtk_icon_info_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="LoadIcon" cname="gtk_icon_info_load_icon">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="SetRawCoordinates" cname="gtk_icon_info_set_raw_coordinates">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="raw_coordinates" />
        </parameters>
      </method>
    </struct>
    <struct name="IconSet" cname="GtkIconSet" opaque="true">
      <method name="AddSource" cname="gtk_icon_set_add_source">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GtkIconSource*" name="source" />
        </parameters>
      </method>
      <method name="Copy" cname="gtk_icon_set_copy">
        <return-type type="GtkIconSet*" owned="true" />
      </method>
      <method name="GetSizes" cname="gtk_icon_set_get_sizes">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkIconSize**" name="sizes" />
          <parameter type="gint*" name="n_sizes" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_icon_set_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_icon_set_new" />
      <constructor cname="gtk_icon_set_new_from_pixbuf">
        <parameters>
          <parameter type="GdkPixbuf*" name="pixbuf" />
        </parameters>
      </constructor>
      <method name="Ref" cname="gtk_icon_set_ref">
        <return-type type="GtkIconSet*" />
      </method>
      <method name="RenderIcon" cname="gtk_icon_set_render_icon">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GtkTextDirection" name="direction" />
          <parameter type="GtkStateType" name="state" />
          <parameter type="GtkIconSize" name="size" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-char*" name="detail" />
        </parameters>
      </method>
      <method name="Unref" cname="gtk_icon_set_unref">
        <return-type type="void" />
      </method>
    </struct>
    <struct name="IconSource" cname="GtkIconSource" opaque="true">
      <method name="Copy" cname="gtk_icon_source_copy">
        <return-type type="GtkIconSource*" owned="true" />
      </method>
      <method name="Free" cname="gtk_icon_source_free">
        <return-type type="void" />
      </method>
      <method name="GetDirection" cname="gtk_icon_source_get_direction">
        <return-type type="GtkTextDirection" />
      </method>
      <method name="GetDirectionWildcarded" cname="gtk_icon_source_get_direction_wildcarded">
        <return-type type="gboolean" />
      </method>
      <method name="GetFilename" cname="gtk_icon_source_get_filename">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetIconName" cname="gtk_icon_source_get_icon_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetPixbuf" cname="gtk_icon_source_get_pixbuf">
        <return-type type="GdkPixbuf*" />
      </method>
      <method name="GetSize" cname="gtk_icon_source_get_size">
        <return-type type="GtkIconSize" />
      </method>
      <method name="GetSizeWildcarded" cname="gtk_icon_source_get_size_wildcarded">
        <return-type type="gboolean" />
      </method>
      <method name="GetState" cname="gtk_icon_source_get_state">
        <return-type type="GtkStateType" />
      </method>
      <method name="GetStateWildcarded" cname="gtk_icon_source_get_state_wildcarded">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_icon_source_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_icon_source_new" />
      <method name="SetDirection" cname="gtk_icon_source_set_direction">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextDirection" name="direction" />
        </parameters>
      </method>
      <method name="SetDirectionWildcarded" cname="gtk_icon_source_set_direction_wildcarded">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetFilename" cname="gtk_icon_source_set_filename">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
        </parameters>
      </method>
      <method name="SetIconName" cname="gtk_icon_source_set_icon_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="icon_name" />
        </parameters>
      </method>
      <method name="SetPixbuf" cname="gtk_icon_source_set_pixbuf">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixbuf*" name="pixbuf" />
        </parameters>
      </method>
      <method name="SetSize" cname="gtk_icon_source_set_size">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkIconSize" name="size" />
        </parameters>
      </method>
      <method name="SetSizeWildcarded" cname="gtk_icon_source_set_size_wildcarded">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetState" cname="gtk_icon_source_set_state">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStateType" name="state" />
        </parameters>
      </method>
      <method name="SetStateWildcarded" cname="gtk_icon_source_set_state_wildcarded">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
    </struct>
    <struct name="ImageAnimationData" cname="GtkImageAnimationData">
      <field name="Anim" cname="anim" type="GdkPixbufAnimation*" />
      <field name="Iter" cname="iter" type="GdkPixbufAnimationIter*" />
      <field name="FrameTimeout" cname="frame_timeout" type="guint" />
    </struct>
    <struct name="ImageIconNameData" cname="GtkImageIconNameData">
      <field name="IconName" cname="icon_name" type="gchar*" />
      <field name="Pixbuf" cname="pixbuf" type="GdkPixbuf*" />
      <field name="ThemeChangeId" cname="theme_change_id" type="guint" />
    </struct>
    <struct name="ImageIconSetData" cname="GtkImageIconSetData">
      <field name="IconSet" cname="icon_set" type="GtkIconSet*" />
    </struct>
    <struct name="ImageImageData" cname="GtkImageImageData">
      <field name="Image" cname="image" type="GdkImage*" />
    </struct>
    <struct name="ImagePixbufData" cname="GtkImagePixbufData">
      <field name="Pixbuf" cname="pixbuf" type="GdkPixbuf*" />
    </struct>
    <struct name="ImagePixmapData" cname="GtkImagePixmapData">
      <field name="Pixmap" cname="pixmap" type="GdkPixmap*" />
    </struct>
    <struct name="ImageStockData" cname="GtkImageStockData">
      <field name="StockId" cname="stock_id" type="gchar*" />
    </struct>
    <struct name="ItemFactoryEntry" cname="GtkItemFactoryEntry" deprecated="1">
      <field name="Path" cname="path" type="gchar*" />
      <field name="Accelerator" cname="accelerator" type="gchar*" />
      <field name="Callback" cname="callback" type="GtkItemFactoryCallback" />
      <field name="CallbackAction" cname="callback_action" type="guint" />
      <field name="ItemType" cname="item_type" type="gchar*" />
      <field name="ExtraData" cname="extra_data" type="gconstpointer" />
    </struct>
    <struct name="ItemFactoryItem" cname="GtkItemFactoryItem" deprecated="1">
      <field name="Path" cname="path" type="gchar*" />
      <field name="Widgets" cname="widgets" type="GSList*" />
    </struct>
    <struct name="LabelSelectionInfo" cname="GtkLabelSelectionInfo" opaque="true" />
    <struct name="MenuEntry" cname="GtkMenuEntry">
      <field name="Path" cname="path" type="gchar*" />
      <field name="Accelerator" cname="accelerator" type="gchar*" />
      <field name="Callback" cname="callback" type="GtkMenuCallback" />
      <field name="CallbackData" cname="callback_data" type="gpointer" />
      <field name="Widget" cname="widget" type="GtkWidget*" />
    </struct>
    <struct name="NotebookPage" cname="GtkNotebookPage" opaque="true">
      <method name="Num" cname="gtk_notebook_page_num" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkNotebook*" name="notebook" />
          <parameter type="GtkWidget*" name="child" />
        </parameters>
      </method>
    </struct>
    <alias name="ObjectInitFunc" cname="GtkObjectInitFunc" type="GInstanceInitFunc" />
    <struct name="PageRange" cname="GtkPageRange">
      <field name="Start" cname="start" type="gint" />
      <field name="End" cname="end" type="gint" />
    </struct>
    <struct name="PaperSize" cname="GtkPaperSize" opaque="true">
      <method name="Copy" cname="gtk_paper_size_copy">
        <return-type type="GtkPaperSize*" owned="true" />
      </method>
      <method name="Free" cname="gtk_paper_size_free">
        <return-type type="void" />
      </method>
      <method name="GetDefault" cname="gtk_paper_size_get_default" shared="true">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetDefaultBottomMargin" cname="gtk_paper_size_get_default_bottom_margin">
        <return-type type="gdouble" />
        <parameters>
          <parameter type="GtkUnit" name="unit" />
        </parameters>
      </method>
      <method name="GetDefaultLeftMargin" cname="gtk_paper_size_get_default_left_margin">
        <return-type type="gdouble" />
        <parameters>
          <parameter type="GtkUnit" name="unit" />
        </parameters>
      </method>
      <method name="GetDefaultRightMargin" cname="gtk_paper_size_get_default_right_margin">
        <return-type type="gdouble" />
        <parameters>
          <parameter type="GtkUnit" name="unit" />
        </parameters>
      </method>
      <method name="GetDefaultTopMargin" cname="gtk_paper_size_get_default_top_margin">
        <return-type type="gdouble" />
        <parameters>
          <parameter type="GtkUnit" name="unit" />
        </parameters>
      </method>
      <method name="GetDisplayName" cname="gtk_paper_size_get_display_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetHeight" cname="gtk_paper_size_get_height">
        <return-type type="gdouble" />
        <parameters>
          <parameter type="GtkUnit" name="unit" />
        </parameters>
      </method>
      <method name="GetName" cname="gtk_paper_size_get_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetPpdName" cname="gtk_paper_size_get_ppd_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gtk_paper_size_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetWidth" cname="gtk_paper_size_get_width">
        <return-type type="gdouble" />
        <parameters>
          <parameter type="GtkUnit" name="unit" />
        </parameters>
      </method>
      <method name="IsCustom" cname="gtk_paper_size_is_custom">
        <return-type type="gboolean" />
      </method>
      <method name="IsEqual" cname="gtk_paper_size_is_equal">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkPaperSize*" name="size2" />
        </parameters>
      </method>
      <constructor cname="gtk_paper_size_new">
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </constructor>
      <constructor cname="gtk_paper_size_new_custom">
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="const-gchar*" name="display_name" />
          <parameter type="gdouble" name="width" />
          <parameter type="gdouble" name="height" />
          <parameter type="GtkUnit" name="unit" />
        </parameters>
      </constructor>
      <constructor cname="gtk_paper_size_new_from_ppd">
        <parameters>
          <parameter type="const-gchar*" name="ppd_name" />
          <parameter type="const-gchar*" name="ppd_display_name" />
          <parameter type="gdouble" name="width" />
          <parameter type="gdouble" name="height" />
        </parameters>
      </constructor>
      <method name="SetSize" cname="gtk_paper_size_set_size">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="width" />
          <parameter type="gdouble" name="height" />
          <parameter type="GtkUnit" name="unit" />
        </parameters>
      </method>
    </struct>
    <struct name="PreviewInfo" cname="GtkPreviewInfo" deprecated="1">
      <field name="Lookup" cname="lookup" type="guchar*" />
      <field name="Gamma" cname="gamma" type="gdouble" />
    </struct>
    <struct name="RadioActionEntry" cname="GtkRadioActionEntry">
      <field name="Name" cname="name" type="const-gchar*" />
      <field name="StockId" cname="stock_id" type="const-gchar*" />
      <field name="Label" cname="label" type="const-gchar*" />
      <field name="Accelerator" cname="accelerator" type="const-gchar*" />
      <field name="Tooltip" cname="tooltip" type="const-gchar*" />
      <field name="Value" cname="value" type="gint" />
    </struct>
    <struct name="RangeLayout" cname="GtkRangeLayout" opaque="true" />
    <struct name="RangeStepTimer" cname="GtkRangeStepTimer" opaque="true" />
    <struct name="RcContext" cname="GtkRcContext" opaque="true" />
    <struct name="RcProperty" cname="GtkRcProperty">
      <field name="TypeName" cname="type_name" type="GQuark" />
      <field name="PropertyName" cname="property_name" type="GQuark" />
      <field name="Origin" cname="origin" type="gchar*" />
      <field name="Value" cname="value" type="GValue" />
      <method name="ParseBorder" cname="gtk_rc_property_parse_border" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GParamSpec*" name="pspec" />
          <parameter type="const-GString*" name="gstring" />
          <parameter type="GValue*" name="property_value" />
        </parameters>
      </method>
      <method name="ParseColor" cname="gtk_rc_property_parse_color" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GParamSpec*" name="pspec" />
          <parameter type="const-GString*" name="gstring" />
          <parameter type="GValue*" name="property_value" />
        </parameters>
      </method>
      <method name="ParseEnum" cname="gtk_rc_property_parse_enum" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GParamSpec*" name="pspec" />
          <parameter type="const-GString*" name="gstring" />
          <parameter type="GValue*" name="property_value" />
        </parameters>
      </method>
      <method name="ParseFlags" cname="gtk_rc_property_parse_flags" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GParamSpec*" name="pspec" />
          <parameter type="const-GString*" name="gstring" />
          <parameter type="GValue*" name="property_value" />
        </parameters>
      </method>
      <method name="ParseRequisition" cname="gtk_rc_property_parse_requisition" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GParamSpec*" name="pspec" />
          <parameter type="const-GString*" name="gstring" />
          <parameter type="GValue*" name="property_value" />
        </parameters>
      </method>
    </struct>
    <struct name="RecentData" cname="GtkRecentData">
      <field name="DisplayName" cname="display_name" type="gchar*" />
      <field name="Description" cname="description" type="gchar*" />
      <field name="MimeType" cname="mime_type" type="gchar*" />
      <field name="AppName" cname="app_name" type="gchar*" />
      <field name="AppExec" cname="app_exec" type="gchar*" />
      <field name="Groups" cname="groups" type="gchar**" />
      <field name="IsPrivate" cname="is_private" type="gboolean" />
    </struct>
    <struct name="RecentFilterInfo" cname="GtkRecentFilterInfo">
      <field name="Contains" cname="contains" type="GtkRecentFilterFlags" />
      <field name="Uri" cname="uri" type="const-gchar*" />
      <field name="DisplayName" cname="display_name" type="const-gchar*" />
      <field name="MimeType" cname="mime_type" type="const-gchar*" />
      <field name="Applications" cname="applications" type="const-gchar**" />
      <field name="Groups" cname="groups" type="const-gchar**" />
      <field name="Age" cname="age" type="gint" />
    </struct>
    <struct name="RecentInfo" cname="GtkRecentInfo" opaque="true">
      <method name="Exists" cname="gtk_recent_info_exists">
        <return-type type="gboolean" />
      </method>
      <method name="GetAdded" cname="gtk_recent_info_get_added">
        <return-type type="time_t" />
      </method>
      <method name="GetAge" cname="gtk_recent_info_get_age">
        <return-type type="gint" />
      </method>
      <method name="GetApplicationInfo" cname="gtk_recent_info_get_application_info">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="app_name" />
          <parameter type="gchar**" name="app_exec" />
          <parameter type="guint*" name="count" />
          <parameter type="time_t*" name="time_" />
        </parameters>
      </method>
      <method name="GetApplications" cname="gtk_recent_info_get_applications">
        <return-type type="gchar**" />
        <parameters>
          <parameter type="gsize*" name="length" />
        </parameters>
      </method>
      <method name="GetDescription" cname="gtk_recent_info_get_description">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetDisplayName" cname="gtk_recent_info_get_display_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetGroups" cname="gtk_recent_info_get_groups">
        <return-type type="gchar**" />
        <parameters>
          <parameter type="gsize*" name="length" />
        </parameters>
      </method>
      <method name="GetIcon" cname="gtk_recent_info_get_icon">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="gint" name="size" />
        </parameters>
      </method>
      <method name="GetMimeType" cname="gtk_recent_info_get_mime_type">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetModified" cname="gtk_recent_info_get_modified">
        <return-type type="time_t" />
      </method>
      <method name="GetPrivateHint" cname="gtk_recent_info_get_private_hint">
        <return-type type="gboolean" />
      </method>
      <method name="GetShortName" cname="gtk_recent_info_get_short_name">
        <return-type type="gchar*" />
      </method>
      <method name="GetType" cname="gtk_recent_info_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUri" cname="gtk_recent_info_get_uri">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetUriDisplay" cname="gtk_recent_info_get_uri_display">
        <return-type type="gchar*" />
      </method>
      <method name="GetVisited" cname="gtk_recent_info_get_visited">
        <return-type type="time_t" />
      </method>
      <method name="HasApplication" cname="gtk_recent_info_has_application">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="app_name" />
        </parameters>
      </method>
      <method name="HasGroup" cname="gtk_recent_info_has_group">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="group_name" />
        </parameters>
      </method>
      <method name="IsLocal" cname="gtk_recent_info_is_local">
        <return-type type="gboolean" />
      </method>
      <method name="LastApplication" cname="gtk_recent_info_last_application">
        <return-type type="gchar*" />
      </method>
      <method name="Match" cname="gtk_recent_info_match">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkRecentInfo*" name="info_b" />
        </parameters>
      </method>
      <method name="Ref" cname="gtk_recent_info_ref">
        <return-type type="GtkRecentInfo*" />
      </method>
      <method name="Unref" cname="gtk_recent_info_unref">
        <return-type type="void" />
      </method>
    </struct>
    <struct name="Requisition" cname="GtkRequisition">
      <field name="Width" cname="width" type="gint" />
      <field name="Height" cname="height" type="gint" />
      <method name="Copy" cname="gtk_requisition_copy">
        <return-type type="GtkRequisition*" owned="true" />
      </method>
      <method name="Free" cname="gtk_requisition_free">
        <return-type type="void" />
      </method>
      <method name="GetType" cname="gtk_requisition_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </struct>
    <struct name="RulerMetric" cname="GtkRulerMetric">
      <field name="MetricName" cname="metric_name" type="gchar*" />
      <field name="Abbrev" cname="abbrev" type="gchar*" />
      <field name="PixelsPerUnit" cname="pixels_per_unit" type="gdouble" />
      <field name="RulerScale" cname="ruler_scale" array_len="10" type="gdouble" />
      <field name="Subdivide" cname="subdivide" array_len="5" type="gint" />
    </struct>
    <struct name="SelectionData" cname="GtkSelectionData">
      <field name="Selection" cname="selection" type="GdkAtom" />
      <field name="Target" cname="target" type="GdkAtom" />
      <field name="Type" cname="type" type="GdkAtom" />
      <field name="Format" cname="format" type="gint" />
      <field name="Data" cname="data" type="guchar*" />
      <field name="Length" cname="length" type="gint" />
      <field name="Display" cname="display" type="GdkDisplay*" />
      <method name="Copy" cname="gtk_selection_data_copy">
        <return-type type="GtkSelectionData*" owned="true" />
      </method>
      <method name="Free" cname="gtk_selection_data_free">
        <return-type type="void" />
      </method>
      <method name="GetPixbuf" cname="gtk_selection_data_get_pixbuf">
        <return-type type="GdkPixbuf*" />
      </method>
      <method name="GetTargets" cname="gtk_selection_data_get_targets">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkAtom**" name="targets" />
          <parameter type="gint*" name="n_atoms" />
        </parameters>
      </method>
      <method name="GetText" cname="gtk_selection_data_get_text">
        <return-type type="guchar*" />
      </method>
      <method name="GetType" cname="gtk_selection_data_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUris" cname="gtk_selection_data_get_uris">
        <return-type type="gchar**" />
      </method>
      <method name="Set" cname="gtk_selection_data_set">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkAtom" name="type" />
          <parameter type="gint" name="format" />
          <parameter type="const-guchar*" name="data" />
          <parameter type="gint" name="length" />
        </parameters>
      </method>
      <method name="SetPixbuf" cname="gtk_selection_data_set_pixbuf">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkPixbuf*" name="pixbuf" />
        </parameters>
      </method>
      <method name="SetText" cname="gtk_selection_data_set_text">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="str" />
          <parameter type="gint" name="len" />
        </parameters>
      </method>
      <method name="SetUris" cname="gtk_selection_data_set_uris">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gchar**" name="uris" />
        </parameters>
      </method>
      <method name="TargetsIncludeImage" cname="gtk_selection_data_targets_include_image">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gboolean" name="writable" />
        </parameters>
      </method>
      <method name="TargetsIncludeRichText" cname="gtk_selection_data_targets_include_rich_text">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextBuffer*" name="buffer" />
        </parameters>
      </method>
      <method name="TargetsIncludeText" cname="gtk_selection_data_targets_include_text">
        <return-type type="gboolean" />
      </method>
      <method name="TargetsIncludeUri" cname="gtk_selection_data_targets_include_uri">
        <return-type type="gboolean" />
      </method>
    </struct>
    <struct name="SettingsPropertyValue" cname="GtkSettingsPropertyValue" opaque="true" />
    <struct name="SettingsValue" cname="GtkSettingsValue">
      <field name="Origin" cname="origin" type="gchar*" />
      <field name="Value" cname="value" type="GValue" />
    </struct>
    <alias name="SignalMarshaller" cname="GtkSignalMarshaller" type="GSignalCMarshaller" />
    <struct name="StockItem" cname="GtkStockItem">
      <field name="StockId" cname="stock_id" type="gchar*" />
      <field name="Label" cname="label" type="gchar*" />
      <field name="Modifier" cname="modifier" type="GdkModifierType" />
      <field name="Keyval" cname="keyval" type="guint" />
      <field name="TranslationDomain" cname="translation_domain" type="gchar*" />
      <method name="Copy" cname="gtk_stock_item_copy">
        <return-type type="GtkStockItem*" owned="true" />
      </method>
      <method name="Free" cname="gtk_stock_item_free">
        <return-type type="void" />
      </method>
    </struct>
    <struct name="TableChild" cname="GtkTableChild">
      <field name="Widget" cname="widget" type="GtkWidget*" />
      <field name="LeftAttach" cname="left_attach" type="guint16" />
      <field name="RightAttach" cname="right_attach" type="guint16" />
      <field name="TopAttach" cname="top_attach" type="guint16" />
      <field name="BottomAttach" cname="bottom_attach" type="guint16" />
      <field name="Xpadding" cname="xpadding" type="guint16" />
      <field name="Ypadding" cname="ypadding" type="guint16" />
      <field name="Xexpand" cname="xexpand" bits="1" type="guint" />
      <field name="Yexpand" cname="yexpand" bits="1" type="guint" />
      <field name="Xshrink" cname="xshrink" bits="1" type="guint" />
      <field name="Yshrink" cname="yshrink" bits="1" type="guint" />
      <field name="Xfill" cname="xfill" bits="1" type="guint" />
      <field name="Yfill" cname="yfill" bits="1" type="guint" />
    </struct>
    <struct name="TableRowCol" cname="GtkTableRowCol">
      <field name="Requisition" cname="requisition" type="guint16" />
      <field name="Allocation" cname="allocation" type="guint16" />
      <field name="Spacing" cname="spacing" type="guint16" />
      <field name="NeedExpand" cname="need_expand" bits="1" type="guint" />
      <field name="NeedShrink" cname="need_shrink" bits="1" type="guint" />
      <field name="Expand" cname="expand" bits="1" type="guint" />
      <field name="Shrink" cname="shrink" bits="1" type="guint" />
      <field name="Empty" cname="empty" bits="1" type="guint" />
    </struct>
    <struct name="TargetEntry" cname="GtkTargetEntry">
      <field name="Target" cname="target" type="gchar*" />
      <field name="Flags" cname="flags" type="guint" />
      <field name="Info" cname="info" type="guint" />
    </struct>
    <struct name="TargetList" cname="GtkTargetList" opaque="true">
      <field name="List" cname="list" type="GList*" access="public" writeable="true" />
      <field name="RefCount" cname="ref_count" type="guint" access="public" writeable="true" />
      <method name="Add" cname="gtk_target_list_add">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkAtom" name="target" />
          <parameter type="guint" name="flags" />
          <parameter type="guint" name="info" />
        </parameters>
      </method>
      <method name="AddImageTargets" cname="gtk_target_list_add_image_targets">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="info" />
          <parameter type="gboolean" name="writable" />
        </parameters>
      </method>
      <method name="AddRichTextTargets" cname="gtk_target_list_add_rich_text_targets">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="info" />
          <parameter type="gboolean" name="deserializable" />
          <parameter type="GtkTextBuffer*" name="buffer" />
        </parameters>
      </method>
      <method name="AddTable" cname="gtk_target_list_add_table">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GtkTargetEntry*" name="targets" />
          <parameter type="guint" name="ntargets" />
        </parameters>
      </method>
      <method name="AddTextTargets" cname="gtk_target_list_add_text_targets">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="info" />
        </parameters>
      </method>
      <method name="AddUriTargets" cname="gtk_target_list_add_uri_targets">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="info" />
        </parameters>
      </method>
      <method name="Find" cname="gtk_target_list_find">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkAtom" name="target" />
          <parameter type="guint*" name="info" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_target_list_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_target_list_new">
        <parameters>
          <parameter type="const-GtkTargetEntry*" name="targets" />
          <parameter type="guint" name="ntargets" />
        </parameters>
      </constructor>
      <method name="Ref" cname="gtk_target_list_ref">
        <return-type type="GtkTargetList*" />
      </method>
      <method name="Remove" cname="gtk_target_list_remove">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkAtom" name="target" />
        </parameters>
      </method>
      <method name="Unref" cname="gtk_target_list_unref">
        <return-type type="void" />
      </method>
    </struct>
    <struct name="TargetPair" cname="GtkTargetPair">
      <field name="Target" cname="target" type="GdkAtom" />
      <field name="Flags" cname="flags" type="guint" />
      <field name="Info" cname="info" type="guint" />
    </struct>
    <struct name="TextAppearance" cname="GtkTextAppearance">
      <field name="BgColor" cname="bg_color" type="GdkColor" />
      <field name="FgColor" cname="fg_color" type="GdkColor" />
      <field name="BgStipple" cname="bg_stipple" type="GdkBitmap*" />
      <field name="FgStipple" cname="fg_stipple" type="GdkBitmap*" />
      <field name="Rise" cname="rise" type="gint" />
      <field name="Padding1" cname="padding1" type="gpointer" access="private" />
      <field name="Underline" cname="underline" bits="4" type="guint" />
      <field name="Strikethrough" cname="strikethrough" bits="1" type="guint" />
      <field name="DrawBg" cname="draw_bg" bits="1" type="guint" />
      <field name="InsideSelection" cname="inside_selection" bits="1" type="guint" />
      <field name="IsText" cname="is_text" bits="1" type="guint" />
      <field name="Pad1" cname="pad1" bits="1" type="guint" access="private" />
      <field name="Pad2" cname="pad2" bits="1" type="guint" access="private" />
      <field name="Pad3" cname="pad3" bits="1" type="guint" access="private" />
      <field name="Pad4" cname="pad4" bits="1" type="guint" access="private" />
    </struct>
    <struct name="TextAttributes" cname="GtkTextAttributes" opaque="true">
      <field name="Refcount" cname="refcount" type="guint" access="private" />
      <field name="Appearance" cname="appearance" type="GtkTextAppearance" access="public" writeable="true" />
      <field name="Justification" cname="justification" type="GtkJustification" access="public" writeable="true" />
      <field name="Direction" cname="direction" type="GtkTextDirection" access="public" writeable="true" />
      <field name="Font" cname="font" type="PangoFontDescription*" access="public" writeable="true" />
      <field name="FontScale" cname="font_scale" type="gdouble" access="public" writeable="true" />
      <field name="LeftMargin" cname="left_margin" type="gint" access="public" writeable="true" />
      <field name="Indent" cname="indent" type="gint" access="public" writeable="true" />
      <field name="RightMargin" cname="right_margin" type="gint" access="public" writeable="true" />
      <field name="PixelsAboveLines" cname="pixels_above_lines" type="gint" access="public" writeable="true" />
      <field name="PixelsBelowLines" cname="pixels_below_lines" type="gint" access="public" writeable="true" />
      <field name="PixelsInsideWrap" cname="pixels_inside_wrap" type="gint" access="public" writeable="true" />
      <field name="Tabs" cname="tabs" type="PangoTabArray*" access="public" writeable="true" />
      <field name="WrapMode" cname="wrap_mode" type="GtkWrapMode" access="public" writeable="true" />
      <field name="Language" cname="language" type="PangoLanguage*" access="public" writeable="true" />
      <field name="PgBgColor" cname="pg_bg_color" type="GdkColor*" access="private" />
      <field name="Invisible" cname="invisible" bits="1" type="guint" access="public" writeable="true" />
      <field name="BgFullHeight" cname="bg_full_height" bits="1" type="guint" access="public" writeable="true" />
      <field name="Editable" cname="editable" bits="1" type="guint" access="public" writeable="true" />
      <field name="Realized" cname="realized" bits="1" type="guint" access="public" writeable="true" />
      <field name="Pad1" cname="pad1" bits="1" type="guint" access="private" />
      <field name="Pad2" cname="pad2" bits="1" type="guint" access="private" />
      <field name="Pad3" cname="pad3" bits="1" type="guint" access="private" />
      <field name="Pad4" cname="pad4" bits="1" type="guint" access="private" />
      <method name="Copy" cname="gtk_text_attributes_copy">
        <return-type type="GtkTextAttributes*" owned="true" />
      </method>
      <method name="CopyValues" cname="gtk_text_attributes_copy_values">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextAttributes*" name="dest" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_text_attributes_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_text_attributes_new" />
      <method name="Ref" cname="gtk_text_attributes_ref">
        <return-type type="GtkTextAttributes*" />
      </method>
      <method name="Unref" cname="gtk_text_attributes_unref">
        <return-type type="void" />
      </method>
    </struct>
    <struct name="TextBTree" cname="GtkTextBTree" opaque="true" />
    <struct name="TextIter" cname="GtkTextIter">
      <field name="Dummy1" cname="dummy1" type="gpointer" access="private" />
      <field name="Dummy2" cname="dummy2" type="gpointer" access="private" />
      <field name="Dummy3" cname="dummy3" type="gint" access="private" />
      <field name="Dummy4" cname="dummy4" type="gint" access="private" />
      <field name="Dummy5" cname="dummy5" type="gint" access="private" />
      <field name="Dummy6" cname="dummy6" type="gint" access="private" />
      <field name="Dummy7" cname="dummy7" type="gint" access="private" />
      <field name="Dummy8" cname="dummy8" type="gint" access="private" />
      <field name="Dummy9" cname="dummy9" type="gpointer" access="private" />
      <field name="Dummy10" cname="dummy10" type="gpointer" access="private" />
      <field name="Dummy11" cname="dummy11" type="gint" access="private" />
      <field name="Dummy12" cname="dummy12" type="gint" access="private" />
      <field name="Dummy13" cname="dummy13" type="gint" access="private" />
      <field name="Dummy14" cname="dummy14" type="gpointer" access="private" />
      <method name="BackwardChar" cname="gtk_text_iter_backward_char">
        <return-type type="gboolean" />
      </method>
      <method name="BackwardChars" cname="gtk_text_iter_backward_chars">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="count" />
        </parameters>
      </method>
      <method name="BackwardCursorPosition" cname="gtk_text_iter_backward_cursor_position">
        <return-type type="gboolean" />
      </method>
      <method name="BackwardCursorPositions" cname="gtk_text_iter_backward_cursor_positions">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="count" />
        </parameters>
      </method>
      <method name="BackwardFindChar" cname="gtk_text_iter_backward_find_char">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextCharPredicate" name="pred" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="const-GtkTextIter*" name="limit" />
        </parameters>
      </method>
      <method name="BackwardLine" cname="gtk_text_iter_backward_line">
        <return-type type="gboolean" />
      </method>
      <method name="BackwardLines" cname="gtk_text_iter_backward_lines">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="count" />
        </parameters>
      </method>
      <method name="BackwardSearch" cname="gtk_text_iter_backward_search">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="str" />
          <parameter type="GtkTextSearchFlags" name="flags" />
          <parameter type="GtkTextIter*" name="match_start" />
          <parameter type="GtkTextIter*" name="match_end" />
          <parameter type="const-GtkTextIter*" name="limit" />
        </parameters>
      </method>
      <method name="BackwardSentenceStart" cname="gtk_text_iter_backward_sentence_start">
        <return-type type="gboolean" />
      </method>
      <method name="BackwardSentenceStarts" cname="gtk_text_iter_backward_sentence_starts">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="count" />
        </parameters>
      </method>
      <method name="BackwardToTagToggle" cname="gtk_text_iter_backward_to_tag_toggle">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextTag*" name="tag" />
        </parameters>
      </method>
      <method name="BackwardVisibleCursorPosition" cname="gtk_text_iter_backward_visible_cursor_position">
        <return-type type="gboolean" />
      </method>
      <method name="BackwardVisibleCursorPositions" cname="gtk_text_iter_backward_visible_cursor_positions">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="count" />
        </parameters>
      </method>
      <method name="BackwardVisibleLine" cname="gtk_text_iter_backward_visible_line">
        <return-type type="gboolean" />
      </method>
      <method name="BackwardVisibleLines" cname="gtk_text_iter_backward_visible_lines">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="count" />
        </parameters>
      </method>
      <method name="BackwardVisibleWordStart" cname="gtk_text_iter_backward_visible_word_start">
        <return-type type="gboolean" />
      </method>
      <method name="BackwardVisibleWordStarts" cname="gtk_text_iter_backward_visible_word_starts">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="count" />
        </parameters>
      </method>
      <method name="BackwardWordStart" cname="gtk_text_iter_backward_word_start">
        <return-type type="gboolean" />
      </method>
      <method name="BackwardWordStarts" cname="gtk_text_iter_backward_word_starts">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="count" />
        </parameters>
      </method>
      <method name="BeginsTag" cname="gtk_text_iter_begins_tag">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextTag*" name="tag" />
        </parameters>
      </method>
      <method name="CanInsert" cname="gtk_text_iter_can_insert">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gboolean" name="default_editability" />
        </parameters>
      </method>
      <method name="Compare" cname="gtk_text_iter_compare">
        <return-type type="gint" />
        <parameters>
          <parameter type="const-GtkTextIter*" name="rhs" />
        </parameters>
      </method>
      <method name="Copy" cname="gtk_text_iter_copy">
        <return-type type="GtkTextIter*" owned="true" />
      </method>
      <method name="Editable" cname="gtk_text_iter_editable">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gboolean" name="default_setting" />
        </parameters>
      </method>
      <method name="EndsLine" cname="gtk_text_iter_ends_line">
        <return-type type="gboolean" />
      </method>
      <method name="EndsSentence" cname="gtk_text_iter_ends_sentence">
        <return-type type="gboolean" />
      </method>
      <method name="EndsTag" cname="gtk_text_iter_ends_tag">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextTag*" name="tag" />
        </parameters>
      </method>
      <method name="EndsWord" cname="gtk_text_iter_ends_word">
        <return-type type="gboolean" />
      </method>
      <method name="Equal" cname="gtk_text_iter_equal">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GtkTextIter*" name="rhs" />
        </parameters>
      </method>
      <method name="ForwardChar" cname="gtk_text_iter_forward_char">
        <return-type type="gboolean" />
      </method>
      <method name="ForwardChars" cname="gtk_text_iter_forward_chars">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="count" />
        </parameters>
      </method>
      <method name="ForwardCursorPosition" cname="gtk_text_iter_forward_cursor_position">
        <return-type type="gboolean" />
      </method>
      <method name="ForwardCursorPositions" cname="gtk_text_iter_forward_cursor_positions">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="count" />
        </parameters>
      </method>
      <method name="ForwardFindChar" cname="gtk_text_iter_forward_find_char">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextCharPredicate" name="pred" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="const-GtkTextIter*" name="limit" />
        </parameters>
      </method>
      <method name="ForwardLine" cname="gtk_text_iter_forward_line">
        <return-type type="gboolean" />
      </method>
      <method name="ForwardLines" cname="gtk_text_iter_forward_lines">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="count" />
        </parameters>
      </method>
      <method name="ForwardSearch" cname="gtk_text_iter_forward_search">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="str" />
          <parameter type="GtkTextSearchFlags" name="flags" />
          <parameter type="GtkTextIter*" name="match_start" />
          <parameter type="GtkTextIter*" name="match_end" />
          <parameter type="const-GtkTextIter*" name="limit" />
        </parameters>
      </method>
      <method name="ForwardSentenceEnd" cname="gtk_text_iter_forward_sentence_end">
        <return-type type="gboolean" />
      </method>
      <method name="ForwardSentenceEnds" cname="gtk_text_iter_forward_sentence_ends">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="count" />
        </parameters>
      </method>
      <method name="ForwardToEnd" cname="gtk_text_iter_forward_to_end">
        <return-type type="void" />
      </method>
      <method name="ForwardToLineEnd" cname="gtk_text_iter_forward_to_line_end">
        <return-type type="gboolean" />
      </method>
      <method name="ForwardToTagToggle" cname="gtk_text_iter_forward_to_tag_toggle">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextTag*" name="tag" />
        </parameters>
      </method>
      <method name="ForwardVisibleCursorPosition" cname="gtk_text_iter_forward_visible_cursor_position">
        <return-type type="gboolean" />
      </method>
      <method name="ForwardVisibleCursorPositions" cname="gtk_text_iter_forward_visible_cursor_positions">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="count" />
        </parameters>
      </method>
      <method name="ForwardVisibleLine" cname="gtk_text_iter_forward_visible_line">
        <return-type type="gboolean" />
      </method>
      <method name="ForwardVisibleLines" cname="gtk_text_iter_forward_visible_lines">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="count" />
        </parameters>
      </method>
      <method name="ForwardVisibleWordEnd" cname="gtk_text_iter_forward_visible_word_end">
        <return-type type="gboolean" />
      </method>
      <method name="ForwardVisibleWordEnds" cname="gtk_text_iter_forward_visible_word_ends">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="count" />
        </parameters>
      </method>
      <method name="ForwardWordEnd" cname="gtk_text_iter_forward_word_end">
        <return-type type="gboolean" />
      </method>
      <method name="ForwardWordEnds" cname="gtk_text_iter_forward_word_ends">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="count" />
        </parameters>
      </method>
      <method name="Free" cname="gtk_text_iter_free">
        <return-type type="void" />
      </method>
      <method name="GetAttributes" cname="gtk_text_iter_get_attributes">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextAttributes*" name="values" />
        </parameters>
      </method>
      <method name="GetBuffer" cname="gtk_text_iter_get_buffer">
        <return-type type="GtkTextBuffer*" />
      </method>
      <method name="GetBytesInLine" cname="gtk_text_iter_get_bytes_in_line">
        <return-type type="gint" />
      </method>
      <method name="GetChar" cname="gtk_text_iter_get_char">
        <return-type type="gunichar" />
      </method>
      <method name="GetCharsInLine" cname="gtk_text_iter_get_chars_in_line">
        <return-type type="gint" />
      </method>
      <method name="GetChildAnchor" cname="gtk_text_iter_get_child_anchor">
        <return-type type="GtkTextChildAnchor*" />
      </method>
      <method name="GetLanguage" cname="gtk_text_iter_get_language">
        <return-type type="PangoLanguage*" />
      </method>
      <method name="GetLine" cname="gtk_text_iter_get_line">
        <return-type type="gint" />
      </method>
      <method name="GetLineIndex" cname="gtk_text_iter_get_line_index">
        <return-type type="gint" />
      </method>
      <method name="GetLineOffset" cname="gtk_text_iter_get_line_offset">
        <return-type type="gint" />
      </method>
      <method name="GetMarks" cname="gtk_text_iter_get_marks">
        <return-type type="GSList*" />
      </method>
      <method name="GetOffset" cname="gtk_text_iter_get_offset">
        <return-type type="gint" />
      </method>
      <method name="GetPixbuf" cname="gtk_text_iter_get_pixbuf">
        <return-type type="GdkPixbuf*" />
      </method>
      <method name="GetSlice" cname="gtk_text_iter_get_slice">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-GtkTextIter*" name="end" />
        </parameters>
      </method>
      <method name="GetTags" cname="gtk_text_iter_get_tags">
        <return-type type="GSList*" />
      </method>
      <method name="GetText" cname="gtk_text_iter_get_text">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-GtkTextIter*" name="end" />
        </parameters>
      </method>
      <method name="GetToggledTags" cname="gtk_text_iter_get_toggled_tags">
        <return-type type="GSList*" />
        <parameters>
          <parameter type="gboolean" name="toggled_on" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_text_iter_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVisibleLineIndex" cname="gtk_text_iter_get_visible_line_index">
        <return-type type="gint" />
      </method>
      <method name="GetVisibleLineOffset" cname="gtk_text_iter_get_visible_line_offset">
        <return-type type="gint" />
      </method>
      <method name="GetVisibleSlice" cname="gtk_text_iter_get_visible_slice">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-GtkTextIter*" name="end" />
        </parameters>
      </method>
      <method name="GetVisibleText" cname="gtk_text_iter_get_visible_text">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-GtkTextIter*" name="end" />
        </parameters>
      </method>
      <method name="HasTag" cname="gtk_text_iter_has_tag">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextTag*" name="tag" />
        </parameters>
      </method>
      <method name="InRange" cname="gtk_text_iter_in_range">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GtkTextIter*" name="start" />
          <parameter type="const-GtkTextIter*" name="end" />
        </parameters>
      </method>
      <method name="InsideSentence" cname="gtk_text_iter_inside_sentence">
        <return-type type="gboolean" />
      </method>
      <method name="InsideWord" cname="gtk_text_iter_inside_word">
        <return-type type="gboolean" />
      </method>
      <method name="IsCursorPosition" cname="gtk_text_iter_is_cursor_position">
        <return-type type="gboolean" />
      </method>
      <method name="IsEnd" cname="gtk_text_iter_is_end">
        <return-type type="gboolean" />
      </method>
      <method name="IsStart" cname="gtk_text_iter_is_start">
        <return-type type="gboolean" />
      </method>
      <method name="Order" cname="gtk_text_iter_order">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="second" />
        </parameters>
      </method>
      <method name="SetLine" cname="gtk_text_iter_set_line">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="line_number" />
        </parameters>
      </method>
      <method name="SetLineIndex" cname="gtk_text_iter_set_line_index">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="byte_on_line" />
        </parameters>
      </method>
      <method name="SetLineOffset" cname="gtk_text_iter_set_line_offset">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="char_on_line" />
        </parameters>
      </method>
      <method name="SetOffset" cname="gtk_text_iter_set_offset">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="char_offset" />
        </parameters>
      </method>
      <method name="SetVisibleLineIndex" cname="gtk_text_iter_set_visible_line_index">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="byte_on_line" />
        </parameters>
      </method>
      <method name="SetVisibleLineOffset" cname="gtk_text_iter_set_visible_line_offset">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="char_on_line" />
        </parameters>
      </method>
      <method name="StartsLine" cname="gtk_text_iter_starts_line">
        <return-type type="gboolean" />
      </method>
      <method name="StartsSentence" cname="gtk_text_iter_starts_sentence">
        <return-type type="gboolean" />
      </method>
      <method name="StartsWord" cname="gtk_text_iter_starts_word">
        <return-type type="gboolean" />
      </method>
      <method name="TogglesTag" cname="gtk_text_iter_toggles_tag">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextTag*" name="tag" />
        </parameters>
      </method>
    </struct>
    <struct name="TextLogAttrCache" cname="GtkTextLogAttrCache" opaque="true" />
    <struct name="TextPendingScroll" cname="GtkTextPendingScroll" opaque="true" />
    <struct name="TextWindow" cname="GtkTextWindow" opaque="true" />
    <struct name="ThemeEngine" cname="GtkThemeEngine" opaque="true" />
    <struct name="ToggleActionEntry" cname="GtkToggleActionEntry">
      <field name="Name" cname="name" type="const-gchar*" />
      <field name="StockId" cname="stock_id" type="const-gchar*" />
      <field name="Label" cname="label" type="const-gchar*" />
      <field name="Accelerator" cname="accelerator" type="const-gchar*" />
      <field name="Tooltip" cname="tooltip" type="const-gchar*" />
      <field name="Callback" cname="callback" type="GCallback" />
      <field name="IsActive" cname="is_active" type="gboolean" />
    </struct>
    <struct name="ToolbarChild" cname="GtkToolbarChild" deprecated="1">
      <field name="Type" cname="type" type="GtkToolbarChildType" />
      <field name="Widget" cname="widget" type="GtkWidget*" />
      <field name="Icon" cname="icon" type="GtkWidget*" />
      <field name="Label" cname="label" type="GtkWidget*" />
    </struct>
    <struct name="TooltipsData" cname="GtkTooltipsData">
      <field name="Tooltips" cname="tooltips" type="GtkTooltips*" />
      <field name="Widget" cname="widget" type="GtkWidget*" />
      <field name="TipText" cname="tip_text" type="gchar*" />
      <field name="TipPrivate" cname="tip_private" type="gchar*" />
      <method name="Get" cname="gtk_tooltips_data_get" shared="true">
        <return-type type="GtkTooltipsData*" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
    </struct>
    <struct name="TreeIter" cname="GtkTreeIter">
      <field name="Stamp" cname="stamp" type="gint" />
      <field name="UserData" cname="user_data" type="gpointer" />
      <field name="UserData2" cname="user_data2" type="gpointer" />
      <field name="UserData3" cname="user_data3" type="gpointer" />
      <method name="Copy" cname="gtk_tree_iter_copy">
        <return-type type="GtkTreeIter*" owned="true" />
      </method>
      <method name="Free" cname="gtk_tree_iter_free">
        <return-type type="void" />
      </method>
      <method name="GetType" cname="gtk_tree_iter_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </struct>
    <struct name="TreePath" cname="GtkTreePath" opaque="true">
      <method name="AppendIndex" cname="gtk_tree_path_append_index">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="index_" />
        </parameters>
      </method>
      <method name="Compare" cname="gtk_tree_path_compare">
        <return-type type="gint" />
        <parameters>
          <parameter type="const-GtkTreePath*" name="b" />
        </parameters>
      </method>
      <method name="Copy" cname="gtk_tree_path_copy">
        <return-type type="GtkTreePath*" owned="true" />
      </method>
      <method name="Down" cname="gtk_tree_path_down">
        <return-type type="void" />
      </method>
      <method name="Free" cname="gtk_tree_path_free">
        <return-type type="void" />
      </method>
      <method name="GetDepth" cname="gtk_tree_path_get_depth">
        <return-type type="gint" />
      </method>
      <method name="GetIndices" cname="gtk_tree_path_get_indices">
        <return-type type="gint*" />
      </method>
      <method name="GetType" cname="gtk_tree_path_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="IsAncestor" cname="gtk_tree_path_is_ancestor">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreePath*" name="descendant" />
        </parameters>
      </method>
      <method name="IsDescendant" cname="gtk_tree_path_is_descendant">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreePath*" name="ancestor" />
        </parameters>
      </method>
      <constructor cname="gtk_tree_path_new" />
      <constructor cname="gtk_tree_path_new_first" />
      <constructor cname="gtk_tree_path_new_from_indices">
        <parameters>
          <parameter type="gint" name="first_index" />
          <parameter ellipsis="true" />
        </parameters>
      </constructor>
      <constructor cname="gtk_tree_path_new_from_string">
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </constructor>
      <method name="Next" cname="gtk_tree_path_next">
        <return-type type="void" />
      </method>
      <method name="PrependIndex" cname="gtk_tree_path_prepend_index">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="index_" />
        </parameters>
      </method>
      <method name="Prev" cname="gtk_tree_path_prev">
        <return-type type="gboolean" />
      </method>
      <method name="ToString" cname="gtk_tree_path_to_string">
        <return-type type="gchar*" />
      </method>
      <method name="Up" cname="gtk_tree_path_up">
        <return-type type="gboolean" />
      </method>
    </struct>
    <struct name="TreeRowReference" cname="GtkTreeRowReference" opaque="true">
      <method name="Copy" cname="gtk_tree_row_reference_copy">
        <return-type type="GtkTreeRowReference*" owned="true" />
      </method>
      <method name="Deleted" cname="gtk_tree_row_reference_deleted" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObject*" name="proxy" />
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
      <method name="Free" cname="gtk_tree_row_reference_free">
        <return-type type="void" />
      </method>
      <method name="GetModel" cname="gtk_tree_row_reference_get_model">
        <return-type type="GtkTreeModel*" />
      </method>
      <method name="GetPath" cname="gtk_tree_row_reference_get_path">
        <return-type type="GtkTreePath*" />
      </method>
      <method name="GetType" cname="gtk_tree_row_reference_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Inserted" cname="gtk_tree_row_reference_inserted" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObject*" name="proxy" />
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
      <constructor cname="gtk_tree_row_reference_new">
        <parameters>
          <parameter type="GtkTreeModel*" name="model" />
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </constructor>
      <constructor cname="gtk_tree_row_reference_new_proxy">
        <parameters>
          <parameter type="GObject*" name="proxy" />
          <parameter type="GtkTreeModel*" name="model" />
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </constructor>
      <method name="Reordered" cname="gtk_tree_row_reference_reordered" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObject*" name="proxy" />
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="gint*" name="new_order" />
        </parameters>
      </method>
      <method name="Valid" cname="gtk_tree_row_reference_valid">
        <return-type type="gboolean" />
      </method>
    </struct>
    <alias name="Type" cname="GtkType" type="GType" />
    <alias name="TypeClass" cname="GtkTypeClass" type="GTypeClass" />
    <struct name="TypeInfo" cname="GtkTypeInfo" deprecated="1">
      <field name="TypeName" cname="type_name" type="gchar*" />
      <field name="ObjectSize" cname="object_size" type="guint" />
      <field name="ClassSize" cname="class_size" type="guint" />
      <field name="ClassInitFunc" cname="class_init_func" type="GtkClassInitFunc" />
      <field name="ObjectInitFunc" cname="object_init_func" type="GtkObjectInitFunc" />
      <field name="Reserved1" cname="reserved_1" type="gpointer" />
      <field name="Reserved2" cname="reserved_2" type="gpointer" />
      <field name="BaseClassInitFunc" cname="base_class_init_func" type="GtkClassInitFunc" />
    </struct>
    <alias name="TypeObject" cname="GtkTypeObject" type="GTypeInstance" />
    <struct name="WidgetAuxInfo" cname="GtkWidgetAuxInfo">
      <field name="X" cname="x" type="gint" />
      <field name="Y" cname="y" type="gint" />
      <field name="Width" cname="width" type="gint" />
      <field name="Height" cname="height" type="gint" />
      <field name="XSet" cname="x_set" bits="1" type="guint" />
      <field name="YSet" cname="y_set" bits="1" type="guint" />
    </struct>
    <struct name="WidgetShapeInfo" cname="GtkWidgetShapeInfo">
      <field name="OffsetX" cname="offset_x" type="gint16" />
      <field name="OffsetY" cname="offset_y" type="gint16" />
      <field name="ShapeMask" cname="shape_mask" type="GdkBitmap*" />
    </struct>
    <struct name="WindowGeometryInfo" cname="GtkWindowGeometryInfo" opaque="true" />
    <class name="Accel" cname="GtkAccel_">
      <method name="GroupsActivate" cname="gtk_accel_groups_activate" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GObject*" name="object" />
          <parameter type="guint" name="accel_key" />
          <parameter type="GdkModifierType" name="accel_mods" />
        </parameters>
      </method>
      <method name="GroupsFromObject" cname="gtk_accel_groups_from_object" shared="true">
        <return-type type="GSList*" />
        <parameters>
          <parameter type="GObject*" name="object" />
        </parameters>
      </method>
    </class>
    <class name="Accelerator" cname="GtkAccelerator_">
      <method name="GetDefaultModMask" cname="gtk_accelerator_get_default_mod_mask" shared="true">
        <return-type type="guint" />
      </method>
      <method name="GetLabel" cname="gtk_accelerator_get_label" shared="true">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="guint" name="accelerator_key" />
          <parameter type="GdkModifierType" name="accelerator_mods" />
        </parameters>
      </method>
      <method name="Name" cname="gtk_accelerator_name" shared="true">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="guint" name="accelerator_key" />
          <parameter type="GdkModifierType" name="accelerator_mods" />
        </parameters>
      </method>
      <method name="Parse" cname="gtk_accelerator_parse" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="accelerator" />
          <parameter type="guint*" name="accelerator_key" />
          <parameter type="GdkModifierType*" name="accelerator_mods" />
        </parameters>
      </method>
      <method name="SetDefaultModMask" cname="gtk_accelerator_set_default_mod_mask" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkModifierType" name="default_mod_mask" />
        </parameters>
      </method>
      <method name="Valid" cname="gtk_accelerator_valid" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="keyval" />
          <parameter type="GdkModifierType" name="modifiers" />
        </parameters>
      </method>
    </class>
    <class name="Global" cname="GtkGlobal">
      <method name="AlternativeDialogButtonOrder" cname="gtk_alternative_dialog_button_order" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkScreen*" name="screen" />
        </parameters>
      </method>
      <method name="BindingParseBinding" cname="gtk_binding_parse_binding" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="GScanner*" name="scanner" />
        </parameters>
      </method>
      <method name="CheckVersion" cname="gtk_check_version" shared="true">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="guint" name="required_major" />
          <parameter type="guint" name="required_minor" />
          <parameter type="guint" name="required_micro" />
        </parameters>
      </method>
      <method name="DisableSetlocale" cname="gtk_disable_setlocale" shared="true">
        <return-type type="void" />
      </method>
      <method name="EventsPending" cname="gtk_events_pending" shared="true">
        <return-type type="gboolean" />
      </method>
      <method name="GetCurrentEvent" cname="gtk_get_current_event" shared="true">
        <return-type type="GdkEvent*" />
      </method>
      <method name="GetCurrentEventState" cname="gtk_get_current_event_state" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkModifierType*" name="state" />
        </parameters>
      </method>
      <method name="GetCurrentEventTime" cname="gtk_get_current_event_time" shared="true">
        <return-type type="guint32" />
      </method>
      <method name="GetDefaultLanguage" cname="gtk_get_default_language" shared="true">
        <return-type type="PangoLanguage*" />
      </method>
      <method name="GetEventWidget" cname="gtk_get_event_widget" shared="true">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="GetOptionGroup" cname="gtk_get_option_group" shared="true">
        <return-type type="GOptionGroup*" />
        <parameters>
          <parameter type="gboolean" name="open_default_display" />
        </parameters>
      </method>
      <method name="IdentifierGetType" cname="gtk_identifier_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="PaintArrow" cname="gtk_paint_arrow" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="GtkArrowType" name="arrow_type" />
          <parameter type="gboolean" name="fill" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="PaintBox" cname="gtk_paint_box" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="PaintBoxGap" cname="gtk_paint_box_gap" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="GtkPositionType" name="gap_side" />
          <parameter type="gint" name="gap_x" />
          <parameter type="gint" name="gap_width" />
        </parameters>
      </method>
      <method name="PaintCheck" cname="gtk_paint_check" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="PaintDiamond" cname="gtk_paint_diamond" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="PaintExpander" cname="gtk_paint_expander" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="GtkExpanderStyle" name="expander_style" />
        </parameters>
      </method>
      <method name="PaintExtension" cname="gtk_paint_extension" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="GtkPositionType" name="gap_side" />
        </parameters>
      </method>
      <method name="PaintFlatBox" cname="gtk_paint_flat_box" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="PaintFocus" cname="gtk_paint_focus" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="PaintHandle" cname="gtk_paint_handle" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="GtkOrientation" name="orientation" />
        </parameters>
      </method>
      <method name="PaintHline" cname="gtk_paint_hline" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x1" />
          <parameter type="gint" name="x2" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="PaintLayout" cname="gtk_paint_layout" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="gboolean" name="use_text" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="PangoLayout*" name="layout" />
        </parameters>
      </method>
      <method name="PaintOption" cname="gtk_paint_option" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="PaintPolygon" cname="gtk_paint_polygon" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="GdkPoint*" name="points" />
          <parameter type="gint" name="npoints" />
          <parameter type="gboolean" name="fill" />
        </parameters>
      </method>
      <method name="PaintResizeGrip" cname="gtk_paint_resize_grip" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="GdkWindowEdge" name="edge" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="PaintShadow" cname="gtk_paint_shadow" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="PaintShadowGap" cname="gtk_paint_shadow_gap" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="GtkPositionType" name="gap_side" />
          <parameter type="gint" name="gap_x" />
          <parameter type="gint" name="gap_width" />
        </parameters>
      </method>
      <method name="PaintSlider" cname="gtk_paint_slider" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="GtkOrientation" name="orientation" />
        </parameters>
      </method>
      <method name="PaintString" cname="gtk_paint_string" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="const-gchar*" name="string" />
        </parameters>
      </method>
      <method name="PaintTab" cname="gtk_paint_tab" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="PaintVline" cname="gtk_paint_vline" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="y1_" />
          <parameter type="gint" name="y2_" />
          <parameter type="gint" name="x" />
        </parameters>
      </method>
      <method name="ParseArgs" cname="gtk_parse_args" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="int*" name="argc" />
          <parameter type="char***" name="argv" />
        </parameters>
      </method>
      <method name="PrivateFlagsGetType" cname="gtk_private_flags_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="PropagateEvent" cname="gtk_propagate_event" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="SetLocale" cname="gtk_set_locale" shared="true">
        <return-type type="gchar*" />
      </method>
      <method name="ShowAboutDialog" cname="gtk_show_about_dialog" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWindow*" name="parent" />
          <parameter type="const-gchar*" name="first_property_name" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="TextLayoutDraw" cname="gtk_text_layout_draw" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextLayout*" name="layout" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkDrawable*" name="drawable" />
          <parameter type="GdkGC*" name="cursor_gc" />
          <parameter type="gint" name="x_offset" />
          <parameter type="gint" name="y_offset" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="GList**" name="widgets" />
        </parameters>
      </method>
    </class>
    <class name="Bindings" cname="GtkBindings_">
      <method name="Activate" cname="gtk_bindings_activate" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkObject*" name="object" />
          <parameter type="guint" name="keyval" />
          <parameter type="GdkModifierType" name="modifiers" />
        </parameters>
      </method>
      <method name="ActivateEvent" cname="gtk_bindings_activate_event" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkObject*" name="object" />
          <parameter type="GdkEventKey*" name="event" />
        </parameters>
      </method>
    </class>
    <class name="Drag" cname="GtkDrag_">
      <method name="Begin" cname="gtk_drag_begin" shared="true">
        <return-type type="GdkDragContext*" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GtkTargetList*" name="targets" />
          <parameter type="GdkDragAction" name="actions" />
          <parameter type="gint" name="button" />
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="CheckThreshold" cname="gtk_drag_check_threshold" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="gint" name="start_x" />
          <parameter type="gint" name="start_y" />
          <parameter type="gint" name="current_x" />
          <parameter type="gint" name="current_y" />
        </parameters>
      </method>
      <method name="DestAddImageTargets" cname="gtk_drag_dest_add_image_targets" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="DestAddTextTargets" cname="gtk_drag_dest_add_text_targets" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="DestAddUriTargets" cname="gtk_drag_dest_add_uri_targets" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="DestFindTarget" cname="gtk_drag_dest_find_target" shared="true">
        <return-type type="GdkAtom" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="GtkTargetList*" name="target_list" />
        </parameters>
      </method>
      <method name="DestGetTargetList" cname="gtk_drag_dest_get_target_list" shared="true">
        <return-type type="GtkTargetList*" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="DestGetTrackMotion" cname="gtk_drag_dest_get_track_motion" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="DestSet" cname="gtk_drag_dest_set" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GtkDestDefaults" name="flags" />
          <parameter type="const-GtkTargetEntry*" name="targets" />
          <parameter type="gint" name="n_targets" />
          <parameter type="GdkDragAction" name="actions" />
        </parameters>
      </method>
      <method name="DestSetProxy" cname="gtk_drag_dest_set_proxy" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkWindow*" name="proxy_window" />
          <parameter type="GdkDragProtocol" name="protocol" />
          <parameter type="gboolean" name="use_coordinates" />
        </parameters>
      </method>
      <method name="DestSetTargetList" cname="gtk_drag_dest_set_target_list" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GtkTargetList*" name="target_list" />
        </parameters>
      </method>
      <method name="DestSetTrackMotion" cname="gtk_drag_dest_set_track_motion" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="gboolean" name="track_motion" />
        </parameters>
      </method>
      <method name="DestUnset" cname="gtk_drag_dest_unset" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="Finish" cname="gtk_drag_finish" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="gboolean" name="success" />
          <parameter type="gboolean" name="del" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="GetData" cname="gtk_drag_get_data" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="GdkAtom" name="target" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="GetSourceWidget" cname="gtk_drag_get_source_widget" shared="true">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
        </parameters>
      </method>
      <method name="Highlight" cname="gtk_drag_highlight" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="SetDefaultIcon" cname="gtk_drag_set_default_icon" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkColormap*" name="colormap" />
          <parameter type="GdkPixmap*" name="pixmap" />
          <parameter type="GdkBitmap*" name="mask" />
          <parameter type="gint" name="hot_x" />
          <parameter type="gint" name="hot_y" />
        </parameters>
      </method>
      <method name="SetIconDefault" cname="gtk_drag_set_icon_default" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
        </parameters>
      </method>
      <method name="SetIconName" cname="gtk_drag_set_icon_name" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="const-gchar*" name="icon_name" />
          <parameter type="gint" name="hot_x" />
          <parameter type="gint" name="hot_y" />
        </parameters>
      </method>
      <method name="SetIconPixbuf" cname="gtk_drag_set_icon_pixbuf" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="GdkPixbuf*" name="pixbuf" />
          <parameter type="gint" name="hot_x" />
          <parameter type="gint" name="hot_y" />
        </parameters>
      </method>
      <method name="SetIconPixmap" cname="gtk_drag_set_icon_pixmap" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="GdkColormap*" name="colormap" />
          <parameter type="GdkPixmap*" name="pixmap" />
          <parameter type="GdkBitmap*" name="mask" />
          <parameter type="gint" name="hot_x" />
          <parameter type="gint" name="hot_y" />
        </parameters>
      </method>
      <method name="SetIconStock" cname="gtk_drag_set_icon_stock" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="const-gchar*" name="stock_id" />
          <parameter type="gint" name="hot_x" />
          <parameter type="gint" name="hot_y" />
        </parameters>
      </method>
      <method name="SetIconWidget" cname="gtk_drag_set_icon_widget" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="gint" name="hot_x" />
          <parameter type="gint" name="hot_y" />
        </parameters>
      </method>
      <method name="SourceAddImageTargets" cname="gtk_drag_source_add_image_targets" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="SourceAddTextTargets" cname="gtk_drag_source_add_text_targets" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="SourceAddUriTargets" cname="gtk_drag_source_add_uri_targets" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="SourceGetTargetList" cname="gtk_drag_source_get_target_list" shared="true">
        <return-type type="GtkTargetList*" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="SourceSet" cname="gtk_drag_source_set" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkModifierType" name="start_button_mask" />
          <parameter type="const-GtkTargetEntry*" name="targets" />
          <parameter type="gint" name="n_targets" />
          <parameter type="GdkDragAction" name="actions" />
        </parameters>
      </method>
      <method name="SourceSetIcon" cname="gtk_drag_source_set_icon" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkColormap*" name="colormap" />
          <parameter type="GdkPixmap*" name="pixmap" />
          <parameter type="GdkBitmap*" name="mask" />
        </parameters>
      </method>
      <method name="SourceSetIconName" cname="gtk_drag_source_set_icon_name" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="icon_name" />
        </parameters>
      </method>
      <method name="SourceSetIconPixbuf" cname="gtk_drag_source_set_icon_pixbuf" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkPixbuf*" name="pixbuf" />
        </parameters>
      </method>
      <method name="SourceSetIconStock" cname="gtk_drag_source_set_icon_stock" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="stock_id" />
        </parameters>
      </method>
      <method name="SourceSetTargetList" cname="gtk_drag_source_set_target_list" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GtkTargetList*" name="target_list" />
        </parameters>
      </method>
      <method name="SourceUnset" cname="gtk_drag_source_unset" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="Unhighlight" cname="gtk_drag_unhighlight" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
    </class>
    <class name="Draw" cname="GtkDraw_">
      <method name="Arrow" cname="gtk_draw_arrow" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GtkArrowType" name="arrow_type" />
          <parameter type="gboolean" name="fill" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="Box" cname="gtk_draw_box" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="BoxGap" cname="gtk_draw_box_gap" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="GtkPositionType" name="gap_side" />
          <parameter type="gint" name="gap_x" />
          <parameter type="gint" name="gap_width" />
        </parameters>
      </method>
      <method name="Check" cname="gtk_draw_check" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="Diamond" cname="gtk_draw_diamond" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="Expander" cname="gtk_draw_expander" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="GtkExpanderStyle" name="expander_style" />
        </parameters>
      </method>
      <method name="Extension" cname="gtk_draw_extension" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="GtkPositionType" name="gap_side" />
        </parameters>
      </method>
      <method name="FlatBox" cname="gtk_draw_flat_box" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="Focus" cname="gtk_draw_focus" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="Handle" cname="gtk_draw_handle" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="GtkOrientation" name="orientation" />
        </parameters>
      </method>
      <method name="Hline" cname="gtk_draw_hline" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="gint" name="x1" />
          <parameter type="gint" name="x2" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="InsertionCursor" cname="gtk_draw_insertion_cursor" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkDrawable*" name="drawable" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GdkRectangle*" name="location" />
          <parameter type="gboolean" name="is_primary" />
          <parameter type="GtkTextDirection" name="direction" />
          <parameter type="gboolean" name="draw_arrow" />
        </parameters>
      </method>
      <method name="Layout" cname="gtk_draw_layout" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="gboolean" name="use_text" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="PangoLayout*" name="layout" />
        </parameters>
      </method>
      <method name="Option" cname="gtk_draw_option" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="Polygon" cname="gtk_draw_polygon" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkPoint*" name="points" />
          <parameter type="gint" name="npoints" />
          <parameter type="gboolean" name="fill" />
        </parameters>
      </method>
      <method name="ResizeGrip" cname="gtk_draw_resize_grip" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GdkWindowEdge" name="edge" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="Shadow" cname="gtk_draw_shadow" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="ShadowGap" cname="gtk_draw_shadow_gap" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="GtkPositionType" name="gap_side" />
          <parameter type="gint" name="gap_x" />
          <parameter type="gint" name="gap_width" />
        </parameters>
      </method>
      <method name="Slider" cname="gtk_draw_slider" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="GtkOrientation" name="orientation" />
        </parameters>
      </method>
      <method name="String" cname="gtk_draw_string" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="const-gchar*" name="string" />
        </parameters>
      </method>
      <method name="Tab" cname="gtk_draw_tab" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="Vline" cname="gtk_draw_vline" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="gint" name="y1_" />
          <parameter type="gint" name="y2_" />
          <parameter type="gint" name="x" />
        </parameters>
      </method>
    </class>
    <class name="File" cname="GtkFile_">
      <method name="PathsCopy" cname="gtk_file_paths_copy" shared="true">
        <return-type type="GSList*" />
        <parameters>
          <parameter type="GSList*" name="paths" />
        </parameters>
      </method>
      <method name="PathsFree" cname="gtk_file_paths_free" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GSList*" name="paths" />
        </parameters>
      </method>
      <method name="PathsSort" cname="gtk_file_paths_sort" shared="true">
        <return-type type="GSList*" />
        <parameters>
          <parameter type="GSList*" name="paths" />
        </parameters>
      </method>
    </class>
    <class name="Gc" cname="GtkGc_">
      <method name="Get" cname="gtk_gc_get" shared="true">
        <return-type type="GdkGC*" />
        <parameters>
          <parameter type="gint" name="depth" />
          <parameter type="GdkColormap*" name="colormap" />
          <parameter type="GdkGCValues*" name="values" />
          <parameter type="GdkGCValuesMask" name="values_mask" />
        </parameters>
      </method>
      <method name="Release" cname="gtk_gc_release" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGC*" name="gc" />
        </parameters>
      </method>
    </class>
    <class name="Grab" cname="GtkGrab_">
      <method name="Add" cname="gtk_grab_add" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="GetCurrent" cname="gtk_grab_get_current" shared="true">
        <return-type type="GtkWidget*" />
      </method>
      <method name="Remove" cname="gtk_grab_remove" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
    </class>
    <class name="Icon" cname="GtkIcon_">
      <method name="SizeFromName" cname="gtk_icon_size_from_name" shared="true">
        <return-type type="GtkIconSize" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="SizeGetName" cname="gtk_icon_size_get_name" shared="true">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="GtkIconSize" name="size" />
        </parameters>
      </method>
      <method name="SizeLookup" cname="gtk_icon_size_lookup" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkIconSize" name="size" />
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="height" />
        </parameters>
      </method>
      <method name="SizeLookupForSettings" cname="gtk_icon_size_lookup_for_settings" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkSettings*" name="settings" />
          <parameter type="GtkIconSize" name="size" />
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="height" />
        </parameters>
      </method>
      <method name="SizeRegister" cname="gtk_icon_size_register" shared="true">
        <return-type type="GtkIconSize" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="SizeRegisterAlias" cname="gtk_icon_size_register_alias" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="alias" />
          <parameter type="GtkIconSize" name="target" />
        </parameters>
      </method>
    </class>
    <class name="Idle" cname="GtkIdle_">
      <method name="Add" cname="gtk_idle_add" deprecated="1" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="GtkFunction" name="function" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="AddFull" cname="gtk_idle_add_full" deprecated="1" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="gint" name="priority" />
          <parameter type="GtkFunction" name="function" />
          <parameter type="GtkCallbackMarshal" name="marshal" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="AddPriority" cname="gtk_idle_add_priority" deprecated="1" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="gint" name="priority" />
          <parameter type="GtkFunction" name="function" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="Remove" cname="gtk_idle_remove" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="idle_handler_id" />
        </parameters>
      </method>
      <method name="RemoveByData" cname="gtk_idle_remove_by_data" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
    </class>
    <class name="Init" cname="GtkInit_">
      <method name="AbiCheck" cname="gtk_init_abi_check" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="int*" name="argc" />
          <parameter type="char***" name="argv" />
          <parameter type="int" name="num_checks" />
          <parameter type="size_t" name="sizeof_GtkWindow" />
          <parameter type="size_t" name="sizeof_GtkBox" />
        </parameters>
      </method>
      <method name="Add" cname="gtk_init_add" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFunction" name="function" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="Check" cname="gtk_init_check" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="int*" name="argc" />
          <parameter type="char***" name="argv" />
        </parameters>
      </method>
      <method name="CheckAbiCheck" cname="gtk_init_check_abi_check" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="int*" name="argc" />
          <parameter type="char***" name="argv" />
          <parameter type="int" name="num_checks" />
          <parameter type="size_t" name="sizeof_GtkWindow" />
          <parameter type="size_t" name="sizeof_GtkBox" />
        </parameters>
      </method>
      <method name="WithArgs" cname="gtk_init_with_args" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="int*" name="argc" />
          <parameter type="char***" name="argv" />
          <parameter type="char*" name="parameter_string" />
          <parameter type="GOptionEntry*" name="entries" />
          <parameter type="char*" name="translation_domain" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
    </class>
    <class name="Input" cname="GtkInput_">
      <method name="AddFull" cname="gtk_input_add_full" deprecated="1" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="gint" name="source" />
          <parameter type="GdkInputCondition" name="condition" />
          <parameter type="GdkInputFunction" name="function" />
          <parameter type="GtkCallbackMarshal" name="marshal" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="Remove" cname="gtk_input_remove" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="input_handler_id" />
        </parameters>
      </method>
    </class>
    <class name="Key" cname="GtkKey_">
      <method name="SnooperInstall" cname="gtk_key_snooper_install" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="GtkKeySnoopFunc" name="snooper" />
          <parameter type="gpointer" name="func_data" />
        </parameters>
      </method>
      <method name="SnooperRemove" cname="gtk_key_snooper_remove" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="snooper_handler_id" />
        </parameters>
      </method>
    </class>
    <class name="Main" cname="GtkMain_">
      <method name="DoEvent" cname="gtk_main_do_event" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="Iteration" cname="gtk_main_iteration" shared="true">
        <return-type type="gboolean" />
      </method>
      <method name="IterationDo" cname="gtk_main_iteration_do" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gboolean" name="blocking" />
        </parameters>
      </method>
      <method name="Level" cname="gtk_main_level" shared="true">
        <return-type type="guint" />
      </method>
      <method name="Quit" cname="gtk_main_quit" shared="true">
        <return-type type="void" />
      </method>
    </class>
    <class name="Print" cname="GtkPrint_">
      <method name="ErrorQuark" cname="gtk_print_error_quark" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="RunPageSetupDialog" cname="gtk_print_run_page_setup_dialog" shared="true">
        <return-type type="GtkPageSetup*" />
        <parameters>
          <parameter type="GtkWindow*" name="parent" />
          <parameter type="GtkPageSetup*" name="page_setup" />
          <parameter type="GtkPrintSettings*" name="settings" />
        </parameters>
      </method>
      <method name="RunPageSetupDialogAsync" cname="gtk_print_run_page_setup_dialog_async" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWindow*" name="parent" />
          <parameter type="GtkPageSetup*" name="page_setup" />
          <parameter type="GtkPrintSettings*" name="settings" />
          <parameter type="GtkPageSetupDoneFunc" name="done_cb" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
    </class>
    <class name="Quit" cname="GtkQuit_">
      <method name="Add" cname="gtk_quit_add" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="guint" name="main_level" />
          <parameter type="GtkFunction" name="function" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="AddDestroy" cname="gtk_quit_add_destroy" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="main_level" />
          <parameter type="GtkObject*" name="object" />
        </parameters>
      </method>
      <method name="AddFull" cname="gtk_quit_add_full" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="guint" name="main_level" />
          <parameter type="GtkFunction" name="function" />
          <parameter type="GtkCallbackMarshal" name="marshal" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="Remove" cname="gtk_quit_remove" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="quit_handler_id" />
        </parameters>
      </method>
      <method name="RemoveByData" cname="gtk_quit_remove_by_data" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
    </class>
    <class name="Rc" cname="GtkRc_">
      <method name="AddClassStyle" cname="gtk_rc_add_class_style" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRcStyle*" name="rc_style" />
          <parameter type="const-gchar*" name="pattern" />
        </parameters>
      </method>
      <method name="AddDefaultFile" cname="gtk_rc_add_default_file" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
        </parameters>
      </method>
      <method name="AddWidgetClassStyle" cname="gtk_rc_add_widget_class_style" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRcStyle*" name="rc_style" />
          <parameter type="const-gchar*" name="pattern" />
        </parameters>
      </method>
      <method name="AddWidgetNameStyle" cname="gtk_rc_add_widget_name_style" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRcStyle*" name="rc_style" />
          <parameter type="const-gchar*" name="pattern" />
        </parameters>
      </method>
      <method name="FindModuleInPath" cname="gtk_rc_find_module_in_path" shared="true">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-gchar*" name="module_file" />
        </parameters>
      </method>
      <method name="FindPixmapInPath" cname="gtk_rc_find_pixmap_in_path" shared="true">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="GtkSettings*" name="settings" />
          <parameter type="GScanner*" name="scanner" />
          <parameter type="const-gchar*" name="pixmap_file" />
        </parameters>
      </method>
      <method name="GetDefaultFiles" cname="gtk_rc_get_default_files" shared="true">
        <return-type type="gchar**" />
      </method>
      <method name="GetImModuleFile" cname="gtk_rc_get_im_module_file" shared="true">
        <return-type type="gchar*" />
      </method>
      <method name="GetImModulePath" cname="gtk_rc_get_im_module_path" shared="true">
        <return-type type="gchar*" />
      </method>
      <method name="GetModuleDir" cname="gtk_rc_get_module_dir" shared="true">
        <return-type type="gchar*" />
      </method>
      <method name="GetStyle" cname="gtk_rc_get_style" shared="true">
        <return-type type="GtkStyle*" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="GetStyleByPaths" cname="gtk_rc_get_style_by_paths" shared="true">
        <return-type type="GtkStyle*" />
        <parameters>
          <parameter type="GtkSettings*" name="settings" />
          <parameter type="const-char*" name="widget_path" />
          <parameter type="const-char*" name="class_path" />
          <parameter type="GType" name="type" />
        </parameters>
      </method>
      <method name="GetThemeDir" cname="gtk_rc_get_theme_dir" shared="true">
        <return-type type="gchar*" />
      </method>
      <method name="Parse" cname="gtk_rc_parse" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
        </parameters>
      </method>
      <method name="ParseColor" cname="gtk_rc_parse_color" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="GScanner*" name="scanner" />
          <parameter type="GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="ParsePriority" cname="gtk_rc_parse_priority" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="GScanner*" name="scanner" />
          <parameter type="GtkPathPriorityType*" name="priority" />
        </parameters>
      </method>
      <method name="ParseState" cname="gtk_rc_parse_state" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="GScanner*" name="scanner" />
          <parameter type="GtkStateType*" name="state" />
        </parameters>
      </method>
      <method name="ParseString" cname="gtk_rc_parse_string" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="rc_string" />
        </parameters>
      </method>
      <method name="ReparseAll" cname="gtk_rc_reparse_all" shared="true">
        <return-type type="gboolean" />
      </method>
      <method name="ReparseAllForSettings" cname="gtk_rc_reparse_all_for_settings" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkSettings*" name="settings" />
          <parameter type="gboolean" name="force_load" />
        </parameters>
      </method>
      <method name="ResetStyles" cname="gtk_rc_reset_styles" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkSettings*" name="settings" />
        </parameters>
      </method>
      <method name="ScannerNew" cname="gtk_rc_scanner_new" shared="true">
        <return-type type="GScanner*" />
      </method>
      <method name="SetDefaultFiles" cname="gtk_rc_set_default_files" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gchar**" name="filenames" />
        </parameters>
      </method>
    </class>
    <class name="Selection" cname="GtkSelection_">
      <method name="AddTarget" cname="gtk_selection_add_target" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkAtom" name="selection" />
          <parameter type="GdkAtom" name="target" />
          <parameter type="guint" name="info" />
        </parameters>
      </method>
      <method name="AddTargets" cname="gtk_selection_add_targets" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkAtom" name="selection" />
          <parameter type="const-GtkTargetEntry*" name="targets" />
          <parameter type="guint" name="ntargets" />
        </parameters>
      </method>
      <method name="Clear" cname="gtk_selection_clear" deprecated="1" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkEventSelection*" name="event" />
        </parameters>
      </method>
      <method name="ClearTargets" cname="gtk_selection_clear_targets" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkAtom" name="selection" />
        </parameters>
      </method>
      <method name="Convert" cname="gtk_selection_convert" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkAtom" name="selection" />
          <parameter type="GdkAtom" name="target" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="OwnerSet" cname="gtk_selection_owner_set" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkAtom" name="selection" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="OwnerSetForDisplay" cname="gtk_selection_owner_set_for_display" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkAtom" name="selection" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="RemoveAll" cname="gtk_selection_remove_all" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
    </class>
    <class name="Signal" cname="GtkSignal_">
      <method name="CompatMatched" cname="gtk_signal_compat_matched" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkObject*" name="object" />
          <parameter type="GtkSignalFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GSignalMatchType" name="match" />
          <parameter type="guint" name="action" />
        </parameters>
      </method>
      <method name="ConnectFull" cname="gtk_signal_connect_full" deprecated="1" shared="true">
        <return-type type="gulong" />
        <parameters>
          <parameter type="GtkObject*" name="object" />
          <parameter type="const-gchar*" name="name" />
          <parameter type="GtkSignalFunc" name="func" />
          <parameter type="GtkCallbackMarshal" name="unsupported" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="destroy_func" />
          <parameter type="gint" name="object_signal" />
          <parameter type="gint" name="after" />
        </parameters>
      </method>
      <method name="ConnectObjectWhileAlive" cname="gtk_signal_connect_object_while_alive" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkObject*" name="object" />
          <parameter type="const-gchar*" name="name" />
          <parameter type="GtkSignalFunc" name="func" />
          <parameter type="GtkObject*" name="alive_object" />
        </parameters>
      </method>
      <method name="ConnectWhileAlive" cname="gtk_signal_connect_while_alive" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkObject*" name="object" />
          <parameter type="const-gchar*" name="name" />
          <parameter type="GtkSignalFunc" name="func" />
          <parameter type="gpointer" name="func_data" />
          <parameter type="GtkObject*" name="alive_object" />
        </parameters>
      </method>
      <method name="Emit" cname="gtk_signal_emit" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkObject*" name="object" />
          <parameter type="guint" name="signal_id" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="EmitByName" cname="gtk_signal_emit_by_name" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkObject*" name="object" />
          <parameter type="const-gchar*" name="name" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="EmitStopByName" cname="gtk_signal_emit_stop_by_name" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkObject*" name="object" />
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="Emitv" cname="gtk_signal_emitv" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkObject*" name="object" />
          <parameter type="guint" name="signal_id" />
          <parameter type="GtkArg*" name="args" />
        </parameters>
      </method>
      <method name="EmitvByName" cname="gtk_signal_emitv_by_name" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkObject*" name="object" />
          <parameter type="const-gchar*" name="name" />
          <parameter type="GtkArg*" name="args" />
        </parameters>
      </method>
      <method name="New" cname="gtk_signal_new" deprecated="1" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="GtkSignalRunType" name="signal_flags" />
          <parameter type="GtkType" name="object_type" />
          <parameter type="guint" name="function_offset" />
          <parameter type="GtkSignalMarshaller" name="marshaller" />
          <parameter type="GtkType" name="return_val" />
          <parameter type="guint" name="n_args" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="Newv" cname="gtk_signal_newv" deprecated="1" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="GtkSignalRunType" name="signal_flags" />
          <parameter type="GtkType" name="object_type" />
          <parameter type="guint" name="function_offset" />
          <parameter type="GtkSignalMarshaller" name="marshaller" />
          <parameter type="GtkType" name="return_val" />
          <parameter type="guint" name="n_args" />
          <parameter type="GtkType*" name="args" />
        </parameters>
      </method>
    </class>
    <class name="Stock" cname="GtkStock_">
      <method name="Add" cname="gtk_stock_add" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GtkStockItem*" name="items" />
          <parameter type="guint" name="n_items" />
        </parameters>
      </method>
      <method name="AddStatic" cname="gtk_stock_add_static" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GtkStockItem*" name="items" />
          <parameter type="guint" name="n_items" />
        </parameters>
      </method>
      <method name="ListIds" cname="gtk_stock_list_ids" shared="true">
        <return-type type="GSList*" />
      </method>
      <method name="Lookup" cname="gtk_stock_lookup" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="stock_id" />
          <parameter type="GtkStockItem*" name="item" />
        </parameters>
      </method>
      <method name="SetTranslateFunc" cname="gtk_stock_set_translate_func" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="domain" />
          <parameter type="GtkTranslateFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="notify" />
        </parameters>
      </method>
    </class>
    <class name="Target" cname="GtkTarget_">
      <method name="TableFree" cname="gtk_target_table_free" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTargetEntry*" name="targets" />
          <parameter type="gint" name="n_targets" />
        </parameters>
      </method>
      <method name="TableNewFromList" cname="gtk_target_table_new_from_list" shared="true">
        <return-type type="GtkTargetEntry*" />
        <parameters>
          <parameter type="GtkTargetList*" name="list" />
          <parameter type="gint*" name="n_targets" />
        </parameters>
      </method>
    </class>
    <class name="Targets" cname="GtkTargets_">
      <method name="IncludeImage" cname="gtk_targets_include_image" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkAtom*" name="targets" />
          <parameter type="gint" name="n_targets" />
          <parameter type="gboolean" name="writable" />
        </parameters>
      </method>
      <method name="IncludeRichText" cname="gtk_targets_include_rich_text" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkAtom*" name="targets" />
          <parameter type="gint" name="n_targets" />
          <parameter type="GtkTextBuffer*" name="buffer" />
        </parameters>
      </method>
      <method name="IncludeText" cname="gtk_targets_include_text" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkAtom*" name="targets" />
          <parameter type="gint" name="n_targets" />
        </parameters>
      </method>
      <method name="IncludeUri" cname="gtk_targets_include_uri" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkAtom*" name="targets" />
          <parameter type="gint" name="n_targets" />
        </parameters>
      </method>
    </class>
    <class name="Timeout" cname="GtkTimeout_">
      <method name="Add" cname="gtk_timeout_add" deprecated="1" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="guint32" name="interval" />
          <parameter type="GtkFunction" name="function" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="AddFull" cname="gtk_timeout_add_full" deprecated="1" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="guint32" name="interval" />
          <parameter type="GtkFunction" name="function" />
          <parameter type="GtkCallbackMarshal" name="marshal" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="Remove" cname="gtk_timeout_remove" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="timeout_handler_id" />
        </parameters>
      </method>
    </class>
    <class name="Tree" cname="GtkTree_">
      <method name="GetRowDragData" cname="gtk_tree_get_row_drag_data" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkSelectionData*" name="selection_data" />
          <parameter type="GtkTreeModel**" name="tree_model" />
          <parameter type="GtkTreePath**" name="path" />
        </parameters>
      </method>
      <method name="SetRowDragData" cname="gtk_tree_set_row_drag_data" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkSelectionData*" name="selection_data" />
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
    </class>
    <class name="Type" cname="GtkType_">
      <method name="Class" cname="gtk_type_class" shared="true">
        <return-type type="gpointer" />
        <parameters>
          <parameter type="GtkType" name="type" />
        </parameters>
      </method>
      <method name="EnumFindValue" cname="gtk_type_enum_find_value" deprecated="1" shared="true">
        <return-type type="GtkEnumValue*" />
        <parameters>
          <parameter type="GtkType" name="enum_type" />
          <parameter type="const-gchar*" name="value_name" />
        </parameters>
      </method>
      <method name="EnumGetValues" cname="gtk_type_enum_get_values" deprecated="1" shared="true">
        <return-type type="GtkEnumValue*" />
        <parameters>
          <parameter type="GtkType" name="enum_type" />
        </parameters>
      </method>
      <method name="FlagsFindValue" cname="gtk_type_flags_find_value" deprecated="1" shared="true">
        <return-type type="GtkFlagValue*" />
        <parameters>
          <parameter type="GtkType" name="flags_type" />
          <parameter type="const-gchar*" name="value_name" />
        </parameters>
      </method>
      <method name="FlagsGetValues" cname="gtk_type_flags_get_values" deprecated="1" shared="true">
        <return-type type="GtkFlagValue*" />
        <parameters>
          <parameter type="GtkType" name="flags_type" />
        </parameters>
      </method>
      <method name="Init" cname="gtk_type_init" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GTypeDebugFlags" name="debug_flags" />
        </parameters>
      </method>
      <method name="New" cname="gtk_type_new" deprecated="1" shared="true">
        <return-type type="gpointer" />
        <parameters>
          <parameter type="GtkType" name="type" />
        </parameters>
      </method>
      <method name="Unique" cname="gtk_type_unique" deprecated="1" shared="true">
        <return-type type="GtkType" />
        <parameters>
          <parameter type="GtkType" name="parent_type" />
          <parameter type="const-GtkTypeInfo*" name="gtkinfo" />
        </parameters>
      </method>
    </class>
    <object name="Stock" cname="GtkStock">
      <static-string cname="GTK_STOCK_ABOUT" name="About" value="gtk-about" />
      <static-string cname="GTK_STOCK_ADD" name="Add" value="gtk-add" />
      <static-string cname="GTK_STOCK_APPLY" name="Apply" value="gtk-apply" />
      <static-string cname="GTK_STOCK_BOLD" name="Bold" value="gtk-bold" />
      <static-string cname="GTK_STOCK_CANCEL" name="Cancel" value="gtk-cancel" />
      <static-string cname="GTK_STOCK_CDROM" name="Cdrom" value="gtk-cdrom" />
      <static-string cname="GTK_STOCK_CLEAR" name="Clear" value="gtk-clear" />
      <static-string cname="GTK_STOCK_CLOSE" name="Close" value="gtk-close" />
      <static-string cname="GTK_STOCK_COLOR_PICKER" name="ColorPicker" value="gtk-color-picker" />
      <static-string cname="GTK_STOCK_CONNECT" name="Connect" value="gtk-connect" />
      <static-string cname="GTK_STOCK_CONVERT" name="Convert" value="gtk-convert" />
      <static-string cname="GTK_STOCK_COPY" name="Copy" value="gtk-copy" />
      <static-string cname="GTK_STOCK_CUT" name="Cut" value="gtk-cut" />
      <static-string cname="GTK_STOCK_DELETE" name="Delete" value="gtk-delete" />
      <static-string cname="GTK_STOCK_DIALOG_ERROR" name="DialogError" value="gtk-dialog-error" />
      <static-string cname="GTK_STOCK_DIALOG_INFO" name="DialogInfo" value="gtk-dialog-info" />
      <static-string cname="GTK_STOCK_DIALOG_QUESTION" name="DialogQuestion" value="gtk-dialog-question" />
      <static-string cname="GTK_STOCK_DIALOG_WARNING" name="DialogWarning" value="gtk-dialog-warning" />
      <static-string cname="GTK_STOCK_DIRECTORY" name="Directory" value="gtk-directory" />
      <static-string cname="GTK_STOCK_DISCONNECT" name="Disconnect" value="gtk-disconnect" />
      <static-string cname="GTK_STOCK_DND" name="Dnd" value="gtk-dnd" />
      <static-string cname="GTK_STOCK_DND_MULTIPLE" name="DndMultiple" value="gtk-dnd-multiple" />
      <static-string cname="GTK_STOCK_EDIT" name="Edit" value="gtk-edit" />
      <static-string cname="GTK_STOCK_EXECUTE" name="Execute" value="gtk-execute" />
      <static-string cname="GTK_STOCK_FILE" name="File" value="gtk-file" />
      <static-string cname="GTK_STOCK_FIND" name="Find" value="gtk-find" />
      <static-string cname="GTK_STOCK_FIND_AND_REPLACE" name="FindAndReplace" value="gtk-find-and-replace" />
      <static-string cname="GTK_STOCK_FLOPPY" name="Floppy" value="gtk-floppy" />
      <static-string cname="GTK_STOCK_FULLSCREEN" name="Fullscreen" value="gtk-fullscreen" />
      <static-string cname="GTK_STOCK_GOTO_BOTTOM" name="GotoBottom" value="gtk-goto-bottom" />
      <static-string cname="GTK_STOCK_GOTO_FIRST" name="GotoFirst" value="gtk-goto-first" />
      <static-string cname="GTK_STOCK_GOTO_LAST" name="GotoLast" value="gtk-goto-last" />
      <static-string cname="GTK_STOCK_GOTO_TOP" name="GotoTop" value="gtk-goto-top" />
      <static-string cname="GTK_STOCK_GO_BACK" name="GoBack" value="gtk-go-back" />
      <static-string cname="GTK_STOCK_GO_DOWN" name="GoDown" value="gtk-go-down" />
      <static-string cname="GTK_STOCK_GO_FORWARD" name="GoForward" value="gtk-go-forward" />
      <static-string cname="GTK_STOCK_GO_UP" name="GoUp" value="gtk-go-up" />
      <static-string cname="GTK_STOCK_HARDDISK" name="Harddisk" value="gtk-harddisk" />
      <static-string cname="GTK_STOCK_HELP" name="Help" value="gtk-help" />
      <static-string cname="GTK_STOCK_HOME" name="Home" value="gtk-home" />
      <static-string cname="GTK_STOCK_INDENT" name="Indent" value="gtk-indent" />
      <static-string cname="GTK_STOCK_INDEX" name="Index" value="gtk-index" />
      <static-string cname="GTK_STOCK_INFO" name="Info" value="gtk-info" />
      <static-string cname="GTK_STOCK_ITALIC" name="Italic" value="gtk-italic" />
      <static-string cname="GTK_STOCK_JUMP_TO" name="JumpTo" value="gtk-jump-to" />
      <static-string cname="GTK_STOCK_JUSTIFY_CENTER" name="JustifyCenter" value="gtk-justify-center" />
      <static-string cname="GTK_STOCK_JUSTIFY_FILL" name="JustifyFill" value="gtk-justify-fill" />
      <static-string cname="GTK_STOCK_JUSTIFY_LEFT" name="JustifyLeft" value="gtk-justify-left" />
      <static-string cname="GTK_STOCK_JUSTIFY_RIGHT" name="JustifyRight" value="gtk-justify-right" />
      <static-string cname="GTK_STOCK_LEAVE_FULLSCREEN" name="LeaveFullscreen" value="gtk-leave-fullscreen" />
      <static-string cname="GTK_STOCK_MEDIA_FORWARD" name="MediaForward" value="gtk-media-forward" />
      <static-string cname="GTK_STOCK_MEDIA_NEXT" name="MediaNext" value="gtk-media-next" />
      <static-string cname="GTK_STOCK_MEDIA_PAUSE" name="MediaPause" value="gtk-media-pause" />
      <static-string cname="GTK_STOCK_MEDIA_PLAY" name="MediaPlay" value="gtk-media-play" />
      <static-string cname="GTK_STOCK_MEDIA_PREVIOUS" name="MediaPrevious" value="gtk-media-previous" />
      <static-string cname="GTK_STOCK_MEDIA_RECORD" name="MediaRecord" value="gtk-media-record" />
      <static-string cname="GTK_STOCK_MEDIA_REWIND" name="MediaRewind" value="gtk-media-rewind" />
      <static-string cname="GTK_STOCK_MEDIA_STOP" name="MediaStop" value="gtk-media-stop" />
      <static-string cname="GTK_STOCK_MISSING_IMAGE" name="MissingImage" value="gtk-missing-image" />
      <static-string cname="GTK_STOCK_NETWORK" name="Network" value="gtk-network" />
      <static-string cname="GTK_STOCK_NEW" name="New" value="gtk-new" />
      <static-string cname="GTK_STOCK_NO" name="No" value="gtk-no" />
      <static-string cname="GTK_STOCK_OK" name="Ok" value="gtk-ok" />
      <static-string cname="GTK_STOCK_OPEN" name="Open" value="gtk-open" />
      <static-string cname="GTK_STOCK_ORIENTATION_LANDSCAPE" name="OrientationLandscape" value="gtk-orientation-landscape" />
      <static-string cname="GTK_STOCK_ORIENTATION_PORTRAIT" name="OrientationPortrait" value="gtk-orientation-portrait" />
      <static-string cname="GTK_STOCK_ORIENTATION_REVERSE_LANDSCAPE" name="OrientationReverseLandscape" value="gtk-orientation-reverse-landscape" />
      <static-string cname="GTK_STOCK_ORIENTATION_REVERSE_PORTRAIT" name="OrientationReversePortrait" value="gtk-orientation-reverse-portrait" />
      <static-string cname="GTK_STOCK_PASTE" name="Paste" value="gtk-paste" />
      <static-string cname="GTK_STOCK_PREFERENCES" name="Preferences" value="gtk-preferences" />
      <static-string cname="GTK_STOCK_PRINT" name="Print" value="gtk-print" />
      <static-string cname="GTK_STOCK_PRINT_PREVIEW" name="PrintPreview" value="gtk-print-preview" />
      <static-string cname="GTK_STOCK_PROPERTIES" name="Properties" value="gtk-properties" />
      <static-string cname="GTK_STOCK_QUIT" name="Quit" value="gtk-quit" />
      <static-string cname="GTK_STOCK_REDO" name="Redo" value="gtk-redo" />
      <static-string cname="GTK_STOCK_REFRESH" name="Refresh" value="gtk-refresh" />
      <static-string cname="GTK_STOCK_REMOVE" name="Remove" value="gtk-remove" />
      <static-string cname="GTK_STOCK_REVERT_TO_SAVED" name="RevertToSaved" value="gtk-revert-to-saved" />
      <static-string cname="GTK_STOCK_SAVE" name="Save" value="gtk-save" />
      <static-string cname="GTK_STOCK_SAVE_AS" name="SaveAs" value="gtk-save-as" />
      <static-string cname="GTK_STOCK_SELECT_ALL" name="SelectAll" value="gtk-select-all" />
      <static-string cname="GTK_STOCK_SELECT_COLOR" name="SelectColor" value="gtk-select-color" />
      <static-string cname="GTK_STOCK_SELECT_FONT" name="SelectFont" value="gtk-select-font" />
      <static-string cname="GTK_STOCK_SORT_ASCENDING" name="SortAscending" value="gtk-sort-ascending" />
      <static-string cname="GTK_STOCK_SORT_DESCENDING" name="SortDescending" value="gtk-sort-descending" />
      <static-string cname="GTK_STOCK_SPELL_CHECK" name="SpellCheck" value="gtk-spell-check" />
      <static-string cname="GTK_STOCK_STOP" name="Stop" value="gtk-stop" />
      <static-string cname="GTK_STOCK_STRIKETHROUGH" name="Strikethrough" value="gtk-strikethrough" />
      <static-string cname="GTK_STOCK_UNDELETE" name="Undelete" value="gtk-undelete" />
      <static-string cname="GTK_STOCK_UNDERLINE" name="Underline" value="gtk-underline" />
      <static-string cname="GTK_STOCK_UNDO" name="Undo" value="gtk-undo" />
      <static-string cname="GTK_STOCK_UNINDENT" name="Unindent" value="gtk-unindent" />
      <static-string cname="GTK_STOCK_YES" name="Yes" value="gtk-yes" />
      <static-string cname="GTK_STOCK_ZOOM_100" name="Zoom100" value="gtk-zoom-100" />
      <static-string cname="GTK_STOCK_ZOOM_FIT" name="ZoomFit" value="gtk-zoom-fit" />
      <static-string cname="GTK_STOCK_ZOOM_IN" name="ZoomIn" value="gtk-zoom-in" />
      <static-string cname="GTK_STOCK_ZOOM_OUT" name="ZoomOut" value="gtk-zoom-out" />
    </object>
  </namespace>
  <namespace name="Gdk" library="libgtk">
    <enum name="AxisUse" cname="GdkAxisUse" type="enum">
      <member cname="GDK_AXIS_IGNORE" name="Ignore" />
      <member cname="GDK_AXIS_X" name="X" />
      <member cname="GDK_AXIS_Y" name="Y" />
      <member cname="GDK_AXIS_PRESSURE" name="Pressure" />
      <member cname="GDK_AXIS_XTILT" name="Xtilt" />
      <member cname="GDK_AXIS_YTILT" name="Ytilt" />
      <member cname="GDK_AXIS_WHEEL" name="Wheel" />
      <member cname="GDK_AXIS_LAST" name="Last" />
    </enum>
    <enum name="ByteOrder" cname="GdkByteOrder" type="enum">
      <member cname="GDK_LSB_FIRST" name="LsbFirst" />
      <member cname="GDK_MSB_FIRST" name="MsbFirst" />
    </enum>
    <enum name="CapStyle" cname="GdkCapStyle" type="enum">
      <member cname="GDK_CAP_NOT_LAST" name="NotLast" />
      <member cname="GDK_CAP_BUTT" name="Butt" />
      <member cname="GDK_CAP_ROUND" name="Round" />
      <member cname="GDK_CAP_PROJECTING" name="Projecting" />
    </enum>
    <enum name="Colorspace" cname="GdkColorspace" type="enum">
      <member cname="GDK_COLORSPACE_RGB" name="Rgb" />
    </enum>
    <enum name="CrossingMode" cname="GdkCrossingMode" type="enum">
      <member cname="GDK_CROSSING_NORMAL" name="Normal" />
      <member cname="GDK_CROSSING_GRAB" name="Grab" />
      <member cname="GDK_CROSSING_UNGRAB" name="Ungrab" />
    </enum>
    <enum name="CursorType" cname="GdkCursorType" type="enum">
      <member cname="GDK_X_CURSOR" name="XCursor" />
      <member cname="GDK_ARROW" name="Arrow" value="2" />
      <member cname="GDK_BASED_ARROW_DOWN" name="BasedArrowDown" value="4" />
      <member cname="GDK_BASED_ARROW_UP" name="BasedArrowUp" value="6" />
      <member cname="GDK_BOAT" name="Boat" value="8" />
      <member cname="GDK_BOGOSITY" name="Bogosity" value="10" />
      <member cname="GDK_BOTTOM_LEFT_CORNER" name="BottomLeftCorner" value="12" />
      <member cname="GDK_BOTTOM_RIGHT_CORNER" name="BottomRightCorner" value="14" />
      <member cname="GDK_BOTTOM_SIDE" name="BottomSide" value="16" />
      <member cname="GDK_BOTTOM_TEE" name="BottomTee" value="18" />
      <member cname="GDK_BOX_SPIRAL" name="BoxSpiral" value="20" />
      <member cname="GDK_CENTER_PTR" name="CenterPtr" value="22" />
      <member cname="GDK_CIRCLE" name="Circle" value="24" />
      <member cname="GDK_CLOCK" name="Clock" value="26" />
      <member cname="GDK_COFFEE_MUG" name="CoffeeMug" value="28" />
      <member cname="GDK_CROSS" name="Cross" value="30" />
      <member cname="GDK_CROSS_REVERSE" name="CrossReverse" value="32" />
      <member cname="GDK_CROSSHAIR" name="Crosshair" value="34" />
      <member cname="GDK_DIAMOND_CROSS" name="DiamondCross" value="36" />
      <member cname="GDK_DOT" name="Dot" value="38" />
      <member cname="GDK_DOTBOX" name="Dotbox" value="40" />
      <member cname="GDK_DOUBLE_ARROW" name="DoubleArrow" value="42" />
      <member cname="GDK_DRAFT_LARGE" name="DraftLarge" value="44" />
      <member cname="GDK_DRAFT_SMALL" name="DraftSmall" value="46" />
      <member cname="GDK_DRAPED_BOX" name="DrapedBox" value="48" />
      <member cname="GDK_EXCHANGE" name="Exchange" value="50" />
      <member cname="GDK_FLEUR" name="Fleur" value="52" />
      <member cname="GDK_GOBBLER" name="Gobbler" value="54" />
      <member cname="GDK_GUMBY" name="Gumby" value="56" />
      <member cname="GDK_HAND1" name="Hand1" value="58" />
      <member cname="GDK_HAND2" name="Hand2" value="60" />
      <member cname="GDK_HEART" name="Heart" value="62" />
      <member cname="GDK_ICON" name="Icon" value="64" />
      <member cname="GDK_IRON_CROSS" name="IronCross" value="66" />
      <member cname="GDK_LEFT_PTR" name="LeftPtr" value="68" />
      <member cname="GDK_LEFT_SIDE" name="LeftSide" value="70" />
      <member cname="GDK_LEFT_TEE" name="LeftTee" value="72" />
      <member cname="GDK_LEFTBUTTON" name="Leftbutton" value="74" />
      <member cname="GDK_LL_ANGLE" name="LlAngle" value="76" />
      <member cname="GDK_LR_ANGLE" name="LrAngle" value="78" />
      <member cname="GDK_MAN" name="Man" value="80" />
      <member cname="GDK_MIDDLEBUTTON" name="Middlebutton" value="82" />
      <member cname="GDK_MOUSE" name="Mouse" value="84" />
      <member cname="GDK_PENCIL" name="Pencil" value="86" />
      <member cname="GDK_PIRATE" name="Pirate" value="88" />
      <member cname="GDK_PLUS" name="Plus" value="90" />
      <member cname="GDK_QUESTION_ARROW" name="QuestionArrow" value="92" />
      <member cname="GDK_RIGHT_PTR" name="RightPtr" value="94" />
      <member cname="GDK_RIGHT_SIDE" name="RightSide" value="96" />
      <member cname="GDK_RIGHT_TEE" name="RightTee" value="98" />
      <member cname="GDK_RIGHTBUTTON" name="Rightbutton" value="100" />
      <member cname="GDK_RTL_LOGO" name="RtlLogo" value="102" />
      <member cname="GDK_SAILBOAT" name="Sailboat" value="104" />
      <member cname="GDK_SB_DOWN_ARROW" name="SbDownArrow" value="106" />
      <member cname="GDK_SB_H_DOUBLE_ARROW" name="SbHDoubleArrow" value="108" />
      <member cname="GDK_SB_LEFT_ARROW" name="SbLeftArrow" value="110" />
      <member cname="GDK_SB_RIGHT_ARROW" name="SbRightArrow" value="112" />
      <member cname="GDK_SB_UP_ARROW" name="SbUpArrow" value="114" />
      <member cname="GDK_SB_V_DOUBLE_ARROW" name="SbVDoubleArrow" value="116" />
      <member cname="GDK_SHUTTLE" name="Shuttle" value="118" />
      <member cname="GDK_SIZING" name="Sizing" value="120" />
      <member cname="GDK_SPIDER" name="Spider" value="122" />
      <member cname="GDK_SPRAYCAN" name="Spraycan" value="124" />
      <member cname="GDK_STAR" name="Star" value="126" />
      <member cname="GDK_TARGET" name="Target" value="128" />
      <member cname="GDK_TCROSS" name="Tcross" value="130" />
      <member cname="GDK_TOP_LEFT_ARROW" name="TopLeftArrow" value="132" />
      <member cname="GDK_TOP_LEFT_CORNER" name="TopLeftCorner" value="134" />
      <member cname="GDK_TOP_RIGHT_CORNER" name="TopRightCorner" value="136" />
      <member cname="GDK_TOP_SIDE" name="TopSide" value="138" />
      <member cname="GDK_TOP_TEE" name="TopTee" value="140" />
      <member cname="GDK_TREK" name="Trek" value="142" />
      <member cname="GDK_UL_ANGLE" name="UlAngle" value="144" />
      <member cname="GDK_UMBRELLA" name="Umbrella" value="146" />
      <member cname="GDK_UR_ANGLE" name="UrAngle" value="148" />
      <member cname="GDK_WATCH" name="Watch" value="150" />
      <member cname="GDK_XTERM" name="Xterm" value="152" />
      <member cname="GDK_LAST_CURSOR" name="LastCursor" />
      <member cname="GDK_CURSOR_IS_PIXMAP" name="CursorIsPixmap" value="-1" />
    </enum>
    <enum name="DragAction" cname="GdkDragAction" type="flags">
      <member cname="GDK_ACTION_DEFAULT" name="Default" value="1 &lt;&lt; 0" />
      <member cname="GDK_ACTION_COPY" name="Copy" value="1 &lt;&lt; 1" />
      <member cname="GDK_ACTION_MOVE" name="Move" value="1 &lt;&lt; 2" />
      <member cname="GDK_ACTION_LINK" name="Link" value="1 &lt;&lt; 3" />
      <member cname="GDK_ACTION_PRIVATE" name="Private" value="1 &lt;&lt; 4" />
      <member cname="GDK_ACTION_ASK" name="Ask" value="1 &lt;&lt; 5" />
    </enum>
    <enum name="DragProtocol" cname="GdkDragProtocol" type="enum">
      <member cname="GDK_DRAG_PROTO_MOTIF" name="Motif" />
      <member cname="GDK_DRAG_PROTO_XDND" name="Xdnd" />
      <member cname="GDK_DRAG_PROTO_ROOTWIN" name="Rootwin" />
      <member cname="GDK_DRAG_PROTO_NONE" name="None" />
      <member cname="GDK_DRAG_PROTO_WIN32_DROPFILES" name="Win32Dropfiles" />
      <member cname="GDK_DRAG_PROTO_OLE2" name="Ole2" />
      <member cname="GDK_DRAG_PROTO_LOCAL" name="Local" />
    </enum>
    <enum name="EventMask" cname="GdkEventMask" type="flags">
      <member cname="GDK_EXPOSURE_MASK" name="ExposureMask" value="1 &lt;&lt; 1" />
      <member cname="GDK_POINTER_MOTION_MASK" name="PointerMotionMask" value="1 &lt;&lt; 2" />
      <member cname="GDK_POINTER_MOTION_HINT_MASK" name="PointerMotionHintMask" value="1 &lt;&lt; 3" />
      <member cname="GDK_BUTTON_MOTION_MASK" name="ButtonMotionMask" value="1 &lt;&lt; 4" />
      <member cname="GDK_BUTTON1_MOTION_MASK" name="Button1MotionMask" value="1 &lt;&lt; 5" />
      <member cname="GDK_BUTTON2_MOTION_MASK" name="Button2MotionMask" value="1 &lt;&lt; 6" />
      <member cname="GDK_BUTTON3_MOTION_MASK" name="Button3MotionMask" value="1 &lt;&lt; 7" />
      <member cname="GDK_BUTTON_PRESS_MASK" name="ButtonPressMask" value="1 &lt;&lt; 8" />
      <member cname="GDK_BUTTON_RELEASE_MASK" name="ButtonReleaseMask" value="1 &lt;&lt; 9" />
      <member cname="GDK_KEY_PRESS_MASK" name="KeyPressMask" value="1 &lt;&lt; 10" />
      <member cname="GDK_KEY_RELEASE_MASK" name="KeyReleaseMask" value="1 &lt;&lt; 11" />
      <member cname="GDK_ENTER_NOTIFY_MASK" name="EnterNotifyMask" value="1 &lt;&lt; 12" />
      <member cname="GDK_LEAVE_NOTIFY_MASK" name="LeaveNotifyMask" value="1 &lt;&lt; 13" />
      <member cname="GDK_FOCUS_CHANGE_MASK" name="FocusChangeMask" value="1 &lt;&lt; 14" />
      <member cname="GDK_STRUCTURE_MASK" name="StructureMask" value="1 &lt;&lt; 15" />
      <member cname="GDK_PROPERTY_CHANGE_MASK" name="PropertyChangeMask" value="1 &lt;&lt; 16" />
      <member cname="GDK_VISIBILITY_NOTIFY_MASK" name="VisibilityNotifyMask" value="1 &lt;&lt; 17" />
      <member cname="GDK_PROXIMITY_IN_MASK" name="ProximityInMask" value="1 &lt;&lt; 18" />
      <member cname="GDK_PROXIMITY_OUT_MASK" name="ProximityOutMask" value="1 &lt;&lt; 19" />
      <member cname="GDK_SUBSTRUCTURE_MASK" name="SubstructureMask" value="1 &lt;&lt; 20" />
      <member cname="GDK_SCROLL_MASK" name="ScrollMask" value="1 &lt;&lt; 21" />
      <member cname="GDK_ALL_EVENTS_MASK" name="AllEventsMask" value="0x3FFFFE" />
    </enum>
    <enum name="EventType" cname="GdkEventType" type="enum">
      <member cname="GDK_NOTHING" name="Nothing" value="-1" />
      <member cname="GDK_DELETE" name="Delete" />
      <member cname="GDK_DESTROY" name="Destroy" value="1" />
      <member cname="GDK_EXPOSE" name="Expose" value="2" />
      <member cname="GDK_MOTION_NOTIFY" name="MotionNotify" value="3" />
      <member cname="GDK_BUTTON_PRESS" name="ButtonPress" value="4" />
      <member cname="GDK_2BUTTON_PRESS" name="TwoButtonPress" value="5" />
      <member cname="GDK_3BUTTON_PRESS" name="ThreeButtonPress" value="6" />
      <member cname="GDK_BUTTON_RELEASE" name="ButtonRelease" value="7" />
      <member cname="GDK_KEY_PRESS" name="KeyPress" value="8" />
      <member cname="GDK_KEY_RELEASE" name="KeyRelease" value="9" />
      <member cname="GDK_ENTER_NOTIFY" name="EnterNotify" value="10" />
      <member cname="GDK_LEAVE_NOTIFY" name="LeaveNotify" value="11" />
      <member cname="GDK_FOCUS_CHANGE" name="FocusChange" value="12" />
      <member cname="GDK_CONFIGURE" name="Configure" value="13" />
      <member cname="GDK_MAP" name="Map" value="14" />
      <member cname="GDK_UNMAP" name="Unmap" value="15" />
      <member cname="GDK_PROPERTY_NOTIFY" name="PropertyNotify" value="16" />
      <member cname="GDK_SELECTION_CLEAR" name="SelectionClear" value="17" />
      <member cname="GDK_SELECTION_REQUEST" name="SelectionRequest" value="18" />
      <member cname="GDK_SELECTION_NOTIFY" name="SelectionNotify" value="19" />
      <member cname="GDK_PROXIMITY_IN" name="ProximityIn" value="20" />
      <member cname="GDK_PROXIMITY_OUT" name="ProximityOut" value="21" />
      <member cname="GDK_DRAG_ENTER" name="DragEnter" value="22" />
      <member cname="GDK_DRAG_LEAVE" name="DragLeave" value="23" />
      <member cname="GDK_DRAG_MOTION" name="DragMotion" value="24" />
      <member cname="GDK_DRAG_STATUS" name="DragStatus" value="25" />
      <member cname="GDK_DROP_START" name="DropStart" value="26" />
      <member cname="GDK_DROP_FINISHED" name="DropFinished" value="27" />
      <member cname="GDK_CLIENT_EVENT" name="ClientEvent" value="28" />
      <member cname="GDK_VISIBILITY_NOTIFY" name="VisibilityNotify" value="29" />
      <member cname="GDK_NO_EXPOSE" name="NoExpose" value="30" />
      <member cname="GDK_SCROLL" name="Scroll" value="31" />
      <member cname="GDK_WINDOW_STATE" name="WindowState" value="32" />
      <member cname="GDK_SETTING" name="Setting" value="33" />
      <member cname="GDK_OWNER_CHANGE" name="OwnerChange" value="34" />
      <member cname="GDK_GRAB_BROKEN" name="GrabBroken" value="35" />
    </enum>
    <enum name="ExtensionMode" cname="GdkExtensionMode" type="enum">
      <member cname="GDK_EXTENSION_EVENTS_NONE" name="None" />
      <member cname="GDK_EXTENSION_EVENTS_ALL" name="All" />
      <member cname="GDK_EXTENSION_EVENTS_CURSOR" name="Cursor" />
    </enum>
    <enum name="Fill" cname="GdkFill" type="enum">
      <member cname="GDK_SOLID" name="Solid" />
      <member cname="GDK_TILED" name="Tiled" />
      <member cname="GDK_STIPPLED" name="Stippled" />
      <member cname="GDK_OPAQUE_STIPPLED" name="OpaqueStippled" />
    </enum>
    <enum name="FillRule" cname="GdkFillRule" type="enum">
      <member cname="GDK_EVEN_ODD_RULE" name="EvenOddRule" />
      <member cname="GDK_WINDING_RULE" name="WindingRule" />
    </enum>
    <enum name="FilterReturn" cname="GdkFilterReturn" type="enum">
      <member cname="GDK_FILTER_CONTINUE" name="Continue" />
      <member cname="GDK_FILTER_TRANSLATE" name="Translate" />
      <member cname="GDK_FILTER_REMOVE" name="Remove" />
    </enum>
    <enum name="FontType" cname="GdkFontType" deprecated="1" type="enum">
      <member cname="GDK_FONT_FONT" name="Font" />
      <member cname="GDK_FONT_FONTSET" name="Fontset" />
    </enum>
    <enum name="Function" cname="GdkFunction" type="enum">
      <member cname="GDK_COPY" name="Copy" />
      <member cname="GDK_INVERT" name="Invert" />
      <member cname="GDK_XOR" name="Xor" />
      <member cname="GDK_CLEAR" name="Clear" />
      <member cname="GDK_AND" name="And" />
      <member cname="GDK_AND_REVERSE" name="AndReverse" />
      <member cname="GDK_AND_INVERT" name="AndInvert" />
      <member cname="GDK_NOOP" name="Noop" />
      <member cname="GDK_OR" name="Or" />
      <member cname="GDK_EQUIV" name="Equiv" />
      <member cname="GDK_OR_REVERSE" name="OrReverse" />
      <member cname="GDK_COPY_INVERT" name="CopyInvert" />
      <member cname="GDK_OR_INVERT" name="OrInvert" />
      <member cname="GDK_NAND" name="Nand" />
      <member cname="GDK_NOR" name="Nor" />
      <member cname="GDK_SET" name="Set" />
    </enum>
    <enum name="GCValuesMask" cname="GdkGCValuesMask" type="flags">
      <member cname="GDK_GC_FOREGROUND" name="Foreground" value="1 &lt;&lt; 0" />
      <member cname="GDK_GC_BACKGROUND" name="Background" value="1 &lt;&lt; 1" />
      <member cname="GDK_GC_FONT" name="Font" value="1 &lt;&lt; 2" />
      <member cname="GDK_GC_FUNCTION" name="Function" value="1 &lt;&lt; 3" />
      <member cname="GDK_GC_FILL" name="Fill" value="1 &lt;&lt; 4" />
      <member cname="GDK_GC_TILE" name="Tile" value="1 &lt;&lt; 5" />
      <member cname="GDK_GC_STIPPLE" name="Stipple" value="1 &lt;&lt; 6" />
      <member cname="GDK_GC_CLIP_MASK" name="ClipMask" value="1 &lt;&lt; 7" />
      <member cname="GDK_GC_SUBWINDOW" name="Subwindow" value="1 &lt;&lt; 8" />
      <member cname="GDK_GC_TS_X_ORIGIN" name="TsXOrigin" value="1 &lt;&lt; 9" />
      <member cname="GDK_GC_TS_Y_ORIGIN" name="TsYOrigin" value="1 &lt;&lt; 10" />
      <member cname="GDK_GC_CLIP_X_ORIGIN" name="ClipXOrigin" value="1 &lt;&lt; 11" />
      <member cname="GDK_GC_CLIP_Y_ORIGIN" name="ClipYOrigin" value="1 &lt;&lt; 12" />
      <member cname="GDK_GC_EXPOSURES" name="Exposures" value="1 &lt;&lt; 13" />
      <member cname="GDK_GC_LINE_WIDTH" name="LineWidth" value="1 &lt;&lt; 14" />
      <member cname="GDK_GC_LINE_STYLE" name="LineStyle" value="1 &lt;&lt; 15" />
      <member cname="GDK_GC_CAP_STYLE" name="CapStyle" value="1 &lt;&lt; 16" />
      <member cname="GDK_GC_JOIN_STYLE" name="JoinStyle" value="1 &lt;&lt; 17" />
    </enum>
    <enum name="GrabStatus" cname="GdkGrabStatus" type="enum">
      <member cname="GDK_GRAB_SUCCESS" name="Success" />
      <member cname="GDK_GRAB_ALREADY_GRABBED" name="AlreadyGrabbed" value="1" />
      <member cname="GDK_GRAB_INVALID_TIME" name="InvalidTime" value="2" />
      <member cname="GDK_GRAB_NOT_VIEWABLE" name="NotViewable" value="3" />
      <member cname="GDK_GRAB_FROZEN" name="Frozen" value="4" />
    </enum>
    <enum name="Gravity" cname="GdkGravity" type="enum">
      <member cname="GDK_GRAVITY_NORTH_WEST" name="NorthWest" value="1" />
      <member cname="GDK_GRAVITY_NORTH" name="North" />
      <member cname="GDK_GRAVITY_NORTH_EAST" name="NorthEast" />
      <member cname="GDK_GRAVITY_WEST" name="West" />
      <member cname="GDK_GRAVITY_CENTER" name="Center" />
      <member cname="GDK_GRAVITY_EAST" name="East" />
      <member cname="GDK_GRAVITY_SOUTH_WEST" name="SouthWest" />
      <member cname="GDK_GRAVITY_SOUTH" name="South" />
      <member cname="GDK_GRAVITY_SOUTH_EAST" name="SouthEast" />
      <member cname="GDK_GRAVITY_STATIC" name="Static" />
    </enum>
    <enum name="ImageType" cname="GdkImageType" type="enum">
      <member cname="GDK_IMAGE_NORMAL" name="Normal" />
      <member cname="GDK_IMAGE_SHARED" name="Shared" />
      <member cname="GDK_IMAGE_FASTEST" name="Fastest" />
    </enum>
    <enum name="InputCondition" cname="GdkInputCondition" type="flags">
      <member cname="GDK_INPUT_READ" name="Read" value="1 &lt;&lt; 0" />
      <member cname="GDK_INPUT_WRITE" name="Write" value="1 &lt;&lt; 1" />
      <member cname="GDK_INPUT_EXCEPTION" name="Exception" value="1 &lt;&lt; 2" />
    </enum>
    <enum name="InputMode" cname="GdkInputMode" type="enum">
      <member cname="GDK_MODE_DISABLED" name="Disabled" />
      <member cname="GDK_MODE_SCREEN" name="Screen" />
      <member cname="GDK_MODE_WINDOW" name="Window" />
    </enum>
    <enum name="InputSource" cname="GdkInputSource" type="enum">
      <member cname="GDK_SOURCE_MOUSE" name="Mouse" />
      <member cname="GDK_SOURCE_PEN" name="Pen" />
      <member cname="GDK_SOURCE_ERASER" name="Eraser" />
      <member cname="GDK_SOURCE_CURSOR" name="Cursor" />
    </enum>
    <enum name="InterpType" cname="GdkInterpType" type="enum">
      <member cname="GDK_INTERP_NEAREST" name="Nearest" />
      <member cname="GDK_INTERP_TILES" name="Tiles" />
      <member cname="GDK_INTERP_BILINEAR" name="Bilinear" />
      <member cname="GDK_INTERP_HYPER" name="Hyper" />
    </enum>
    <enum name="JoinStyle" cname="GdkJoinStyle" type="enum">
      <member cname="GDK_JOIN_MITER" name="Miter" />
      <member cname="GDK_JOIN_ROUND" name="Round" />
      <member cname="GDK_JOIN_BEVEL" name="Bevel" />
    </enum>
    <enum name="LineStyle" cname="GdkLineStyle" type="enum">
      <member cname="GDK_LINE_SOLID" name="Solid" />
      <member cname="GDK_LINE_ON_OFF_DASH" name="OnOffDash" />
      <member cname="GDK_LINE_DOUBLE_DASH" name="DoubleDash" />
    </enum>
    <enum name="ModifierType" cname="GdkModifierType" type="flags">
      <member cname="GDK_SHIFT_MASK" name="ShiftMask" value="1 &lt;&lt; 0" />
      <member cname="GDK_LOCK_MASK" name="LockMask" value="1 &lt;&lt; 1" />
      <member cname="GDK_CONTROL_MASK" name="ControlMask" value="1 &lt;&lt; 2" />
      <member cname="GDK_MOD1_MASK" name="Mod1Mask" value="1 &lt;&lt; 3" />
      <member cname="GDK_MOD2_MASK" name="Mod2Mask" value="1 &lt;&lt; 4" />
      <member cname="GDK_MOD3_MASK" name="Mod3Mask" value="1 &lt;&lt; 5" />
      <member cname="GDK_MOD4_MASK" name="Mod4Mask" value="1 &lt;&lt; 6" />
      <member cname="GDK_MOD5_MASK" name="Mod5Mask" value="1 &lt;&lt; 7" />
      <member cname="GDK_BUTTON1_MASK" name="Button1Mask" value="1 &lt;&lt; 8" />
      <member cname="GDK_BUTTON2_MASK" name="Button2Mask" value="1 &lt;&lt; 9" />
      <member cname="GDK_BUTTON3_MASK" name="Button3Mask" value="1 &lt;&lt; 10" />
      <member cname="GDK_BUTTON4_MASK" name="Button4Mask" value="1 &lt;&lt; 11" />
      <member cname="GDK_BUTTON5_MASK" name="Button5Mask" value="1 &lt;&lt; 12" />
      <member cname="GDK_SUPER_MASK" name="SuperMask" value="1 &lt;&lt; 26" />
      <member cname="GDK_HYPER_MASK" name="HyperMask" value="1 &lt;&lt; 27" />
      <member cname="GDK_META_MASK" name="MetaMask" value="1 &lt;&lt; 28" />
      <member cname="GDK_RELEASE_MASK" name="ReleaseMask" value="1 &lt;&lt; 30" />
      <member cname="GDK_MODIFIER_MASK" name="ModifierMask" value="0x5c001fff" />
    </enum>
    <enum name="NotifyType" cname="GdkNotifyType" type="enum">
      <member cname="GDK_NOTIFY_ANCESTOR" name="Ancestor" />
      <member cname="GDK_NOTIFY_VIRTUAL" name="Virtual" value="1" />
      <member cname="GDK_NOTIFY_INFERIOR" name="Inferior" value="2" />
      <member cname="GDK_NOTIFY_NONLINEAR" name="Nonlinear" value="3" />
      <member cname="GDK_NOTIFY_NONLINEAR_VIRTUAL" name="NonlinearVirtual" value="4" />
      <member cname="GDK_NOTIFY_UNKNOWN" name="Unknown" value="5" />
    </enum>
    <enum name="OverlapType" cname="GdkOverlapType" type="enum">
      <member cname="GDK_OVERLAP_RECTANGLE_IN" name="In" />
      <member cname="GDK_OVERLAP_RECTANGLE_OUT" name="Out" />
      <member cname="GDK_OVERLAP_RECTANGLE_PART" name="Part" />
    </enum>
    <enum name="OwnerChange" cname="GdkOwnerChange" type="enum">
      <member cname="GDK_OWNER_CHANGE_NEW_OWNER" name="NewOwner" />
      <member cname="GDK_OWNER_CHANGE_DESTROY" name="Destroy" />
      <member cname="GDK_OWNER_CHANGE_CLOSE" name="Close" />
    </enum>
    <enum name="PixbufAlphaMode" cname="GdkPixbufAlphaMode" type="enum">
      <member cname="GDK_PIXBUF_ALPHA_BILEVEL" name="Bilevel" />
      <member cname="GDK_PIXBUF_ALPHA_FULL" name="Full" />
    </enum>
    <enum name="PixbufError" cname="GdkPixbufError" type="enum">
      <member cname="GDK_PIXBUF_ERROR_CORRUPT_IMAGE" name="CorruptImage" />
      <member cname="GDK_PIXBUF_ERROR_INSUFFICIENT_MEMORY" name="InsufficientMemory" />
      <member cname="GDK_PIXBUF_ERROR_BAD_OPTION" name="BadOption" />
      <member cname="GDK_PIXBUF_ERROR_UNKNOWN_TYPE" name="UnknownType" />
      <member cname="GDK_PIXBUF_ERROR_UNSUPPORTED_OPERATION" name="UnsupportedOperation" />
      <member cname="GDK_PIXBUF_ERROR_FAILED" name="Failed" />
    </enum>
    <enum name="PixbufRotation" cname="GdkPixbufRotation" type="enum">
      <member cname="GDK_PIXBUF_ROTATE_NONE" name="None" />
      <member cname="GDK_PIXBUF_ROTATE_COUNTERCLOCKWISE" name="Counterclockwise" value="90" />
      <member cname="GDK_PIXBUF_ROTATE_UPSIDEDOWN" name="Upsidedown" value="180" />
      <member cname="GDK_PIXBUF_ROTATE_CLOCKWISE" name="Clockwise" value="270" />
    </enum>
    <enum name="PixdataDumpType" cname="GdkPixdataDumpType" type="flags">
      <member cname="GDK_PIXDATA_DUMP_PIXDATA_STREAM" name="PixdataStream" />
      <member cname="GDK_PIXDATA_DUMP_PIXDATA_STRUCT" name="PixdataStruct" value="1" />
      <member cname="GDK_PIXDATA_DUMP_MACROS" name="Macros" value="2" />
      <member cname="GDK_PIXDATA_DUMP_GTYPES" name="Gtypes" />
      <member cname="GDK_PIXDATA_DUMP_CTYPES" name="Ctypes" value="1 &lt;&lt; 8" />
      <member cname="GDK_PIXDATA_DUMP_STATIC" name="Static" value="1 &lt;&lt; 9" />
      <member cname="GDK_PIXDATA_DUMP_CONST" name="Const" value="1 &lt;&lt; 10" />
      <member cname="GDK_PIXDATA_DUMP_RLE_DECODER" name="RleDecoder" value="1 &lt;&lt; 16" />
    </enum>
    <enum name="PixdataType" cname="GdkPixdataType" type="flags">
      <member cname="GDK_PIXDATA_COLOR_TYPE_RGB" name="ColorTypeRgb" value="0x01" />
      <member cname="GDK_PIXDATA_COLOR_TYPE_RGBA" name="ColorTypeRgba" value="0x02" />
      <member cname="GDK_PIXDATA_COLOR_TYPE_MASK" name="ColorTypeMask" value="0xff" />
      <member cname="GDK_PIXDATA_SAMPLE_WIDTH_8" name="SampleWidth8" value="0x01 &lt;&lt; 16" />
      <member cname="GDK_PIXDATA_SAMPLE_WIDTH_MASK" name="SampleWidthMask" value="0x0f &lt;&lt; 16" />
      <member cname="GDK_PIXDATA_ENCODING_RAW" name="EncodingRaw" value="0x01 &lt;&lt; 24" />
      <member cname="GDK_PIXDATA_ENCODING_RLE" name="EncodingRle" value="0x02 &lt;&lt; 24" />
      <member cname="GDK_PIXDATA_ENCODING_MASK" name="EncodingMask" value="0x0f &lt;&lt; 24" />
    </enum>
    <enum name="PropMode" cname="GdkPropMode" type="enum">
      <member cname="GDK_PROP_MODE_REPLACE" name="Replace" />
      <member cname="GDK_PROP_MODE_PREPEND" name="Prepend" />
      <member cname="GDK_PROP_MODE_APPEND" name="Append" />
    </enum>
    <enum name="PropertyState" cname="GdkPropertyState" type="enum">
      <member cname="GDK_PROPERTY_NEW_VALUE" name="NewValue" />
      <member cname="GDK_PROPERTY_DELETE" name="Delete" />
    </enum>
    <enum name="RgbDither" cname="GdkRgbDither" type="enum">
      <member cname="GDK_RGB_DITHER_NONE" name="None" />
      <member cname="GDK_RGB_DITHER_NORMAL" name="Normal" />
      <member cname="GDK_RGB_DITHER_MAX" name="Max" />
    </enum>
    <enum name="ScrollDirection" cname="GdkScrollDirection" type="enum">
      <member cname="GDK_SCROLL_UP" name="Up" />
      <member cname="GDK_SCROLL_DOWN" name="Down" />
      <member cname="GDK_SCROLL_LEFT" name="Left" />
      <member cname="GDK_SCROLL_RIGHT" name="Right" />
    </enum>
    <enum name="SettingAction" cname="GdkSettingAction" type="enum">
      <member cname="GDK_SETTING_ACTION_NEW" name="New" />
      <member cname="GDK_SETTING_ACTION_CHANGED" name="Changed" />
      <member cname="GDK_SETTING_ACTION_DELETED" name="Deleted" />
    </enum>
    <enum name="Status" cname="GdkStatus" type="enum">
      <member cname="GDK_OK" name="Ok" />
      <member cname="GDK_ERROR" name="Error" value="-1" />
      <member cname="GDK_ERROR_PARAM" name="ErrorParam" value="-2" />
      <member cname="GDK_ERROR_FILE" name="ErrorFile" value="-3" />
      <member cname="GDK_ERROR_MEM" name="ErrorMem" value="-4" />
    </enum>
    <enum name="SubwindowMode" cname="GdkSubwindowMode" type="enum">
      <member cname="GDK_CLIP_BY_CHILDREN" name="ClipByChildren" />
      <member cname="GDK_INCLUDE_INFERIORS" name="IncludeInferiors" value="1" />
    </enum>
    <enum name="VisibilityState" cname="GdkVisibilityState" type="enum">
      <member cname="GDK_VISIBILITY_UNOBSCURED" name="Unobscured" />
      <member cname="GDK_VISIBILITY_PARTIAL" name="Partial" />
      <member cname="GDK_VISIBILITY_FULLY_OBSCURED" name="FullyObscured" />
    </enum>
    <enum name="VisualType" cname="GdkVisualType" type="enum">
      <member cname="GDK_VISUAL_STATIC_GRAY" name="StaticGray" />
      <member cname="GDK_VISUAL_GRAYSCALE" name="Grayscale" />
      <member cname="GDK_VISUAL_STATIC_COLOR" name="StaticColor" />
      <member cname="GDK_VISUAL_PSEUDO_COLOR" name="PseudoColor" />
      <member cname="GDK_VISUAL_TRUE_COLOR" name="TrueColor" />
      <member cname="GDK_VISUAL_DIRECT_COLOR" name="DirectColor" />
    </enum>
    <enum name="WMDecoration" cname="GdkWMDecoration" type="flags">
      <member cname="GDK_DECOR_ALL" name="All" value="1 &lt;&lt; 0" />
      <member cname="GDK_DECOR_BORDER" name="Border" value="1 &lt;&lt; 1" />
      <member cname="GDK_DECOR_RESIZEH" name="Resizeh" value="1 &lt;&lt; 2" />
      <member cname="GDK_DECOR_TITLE" name="Title" value="1 &lt;&lt; 3" />
      <member cname="GDK_DECOR_MENU" name="Menu" value="1 &lt;&lt; 4" />
      <member cname="GDK_DECOR_MINIMIZE" name="Minimize" value="1 &lt;&lt; 5" />
      <member cname="GDK_DECOR_MAXIMIZE" name="Maximize" value="1 &lt;&lt; 6" />
    </enum>
    <enum name="WMFunction" cname="GdkWMFunction" type="flags">
      <member cname="GDK_FUNC_ALL" name="All" value="1 &lt;&lt; 0" />
      <member cname="GDK_FUNC_RESIZE" name="Resize" value="1 &lt;&lt; 1" />
      <member cname="GDK_FUNC_MOVE" name="Move" value="1 &lt;&lt; 2" />
      <member cname="GDK_FUNC_MINIMIZE" name="Minimize" value="1 &lt;&lt; 3" />
      <member cname="GDK_FUNC_MAXIMIZE" name="Maximize" value="1 &lt;&lt; 4" />
      <member cname="GDK_FUNC_CLOSE" name="Close" value="1 &lt;&lt; 5" />
    </enum>
    <enum name="WindowAttributesType" cname="GdkWindowAttributesType" type="flags">
      <member cname="GDK_WA_TITLE" name="Title" value="1 &lt;&lt; 1" />
      <member cname="GDK_WA_X" name="X" value="1 &lt;&lt; 2" />
      <member cname="GDK_WA_Y" name="Y" value="1 &lt;&lt; 3" />
      <member cname="GDK_WA_CURSOR" name="Cursor" value="1 &lt;&lt; 4" />
      <member cname="GDK_WA_COLORMAP" name="Colormap" value="1 &lt;&lt; 5" />
      <member cname="GDK_WA_VISUAL" name="Visual" value="1 &lt;&lt; 6" />
      <member cname="GDK_WA_WMCLASS" name="Wmclass" value="1 &lt;&lt; 7" />
      <member cname="GDK_WA_NOREDIR" name="Noredir" value="1 &lt;&lt; 8" />
    </enum>
    <enum name="WindowClass" cname="GdkWindowClass" type="enum">
      <member cname="GDK_INPUT_OUTPUT" name="Output" />
      <member cname="GDK_INPUT_ONLY" name="Only" />
    </enum>
    <enum name="WindowEdge" cname="GdkWindowEdge" type="enum">
      <member cname="GDK_WINDOW_EDGE_NORTH_WEST" name="NorthWest" />
      <member cname="GDK_WINDOW_EDGE_NORTH" name="North" />
      <member cname="GDK_WINDOW_EDGE_NORTH_EAST" name="NorthEast" />
      <member cname="GDK_WINDOW_EDGE_WEST" name="West" />
      <member cname="GDK_WINDOW_EDGE_EAST" name="East" />
      <member cname="GDK_WINDOW_EDGE_SOUTH_WEST" name="SouthWest" />
      <member cname="GDK_WINDOW_EDGE_SOUTH" name="South" />
      <member cname="GDK_WINDOW_EDGE_SOUTH_EAST" name="SouthEast" />
    </enum>
    <enum name="WindowHints" cname="GdkWindowHints" type="flags">
      <member cname="GDK_HINT_POS" name="Pos" value="1 &lt;&lt; 0" />
      <member cname="GDK_HINT_MIN_SIZE" name="MinSize" value="1 &lt;&lt; 1" />
      <member cname="GDK_HINT_MAX_SIZE" name="MaxSize" value="1 &lt;&lt; 2" />
      <member cname="GDK_HINT_BASE_SIZE" name="BaseSize" value="1 &lt;&lt; 3" />
      <member cname="GDK_HINT_ASPECT" name="Aspect" value="1 &lt;&lt; 4" />
      <member cname="GDK_HINT_RESIZE_INC" name="ResizeInc" value="1 &lt;&lt; 5" />
      <member cname="GDK_HINT_WIN_GRAVITY" name="WinGravity" value="1 &lt;&lt; 6" />
      <member cname="GDK_HINT_USER_POS" name="UserPos" value="1 &lt;&lt; 7" />
      <member cname="GDK_HINT_USER_SIZE" name="UserSize" value="1 &lt;&lt; 8" />
    </enum>
    <enum name="WindowState" cname="GdkWindowState" type="flags">
      <member cname="GDK_WINDOW_STATE_WITHDRAWN" name="Withdrawn" value="1 &lt;&lt; 0" />
      <member cname="GDK_WINDOW_STATE_ICONIFIED" name="Iconified" value="1 &lt;&lt; 1" />
      <member cname="GDK_WINDOW_STATE_MAXIMIZED" name="Maximized" value="1 &lt;&lt; 2" />
      <member cname="GDK_WINDOW_STATE_STICKY" name="Sticky" value="1 &lt;&lt; 3" />
      <member cname="GDK_WINDOW_STATE_FULLSCREEN" name="Fullscreen" value="1 &lt;&lt; 4" />
      <member cname="GDK_WINDOW_STATE_ABOVE" name="Above" value="1 &lt;&lt; 5" />
      <member cname="GDK_WINDOW_STATE_BELOW" name="Below" value="1 &lt;&lt; 6" />
    </enum>
    <enum name="WindowType" cname="GdkWindowType" type="enum">
      <member cname="GDK_WINDOW_ROOT" name="Root" />
      <member cname="GDK_WINDOW_TOPLEVEL" name="Toplevel" />
      <member cname="GDK_WINDOW_CHILD" name="Child" />
      <member cname="GDK_WINDOW_DIALOG" name="Dialog" />
      <member cname="GDK_WINDOW_TEMP" name="Temp" />
      <member cname="GDK_WINDOW_FOREIGN" name="Foreign" />
    </enum>
    <enum name="WindowTypeHint" cname="GdkWindowTypeHint" type="enum">
      <member cname="GDK_WINDOW_TYPE_HINT_NORMAL" name="Normal" />
      <member cname="GDK_WINDOW_TYPE_HINT_DIALOG" name="Dialog" />
      <member cname="GDK_WINDOW_TYPE_HINT_MENU" name="Menu" />
      <member cname="GDK_WINDOW_TYPE_HINT_TOOLBAR" name="Toolbar" />
      <member cname="GDK_WINDOW_TYPE_HINT_SPLASHSCREEN" name="Splashscreen" />
      <member cname="GDK_WINDOW_TYPE_HINT_UTILITY" name="Utility" />
      <member cname="GDK_WINDOW_TYPE_HINT_DOCK" name="Dock" />
      <member cname="GDK_WINDOW_TYPE_HINT_DESKTOP" name="Desktop" />
      <member cname="GDK_WINDOW_TYPE_HINT_DROPDOWN_MENU" name="DropdownMenu" />
      <member cname="GDK_WINDOW_TYPE_HINT_POPUP_MENU" name="PopupMenu" />
      <member cname="GDK_WINDOW_TYPE_HINT_TOOLTIP" name="Tooltip" />
      <member cname="GDK_WINDOW_TYPE_HINT_NOTIFICATION" name="Notification" />
      <member cname="GDK_WINDOW_TYPE_HINT_COMBO" name="Combo" />
      <member cname="GDK_WINDOW_TYPE_HINT_DND" name="Dnd" />
    </enum>
    <callback name="DestroyNotify" cname="GdkDestroyNotify">
      <return-type type="void" />
      <parameters>
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="EventFunc" cname="GdkEventFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GdkEvent*" name="event" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="FilterFunc" cname="GdkFilterFunc">
      <return-type type="GdkFilterReturn" />
      <parameters>
        <parameter type="GdkXEvent*" name="xevent" />
        <parameter type="GdkEvent*" name="event" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="InputFunction" cname="GdkInputFunction">
      <return-type type="void" />
      <parameters>
        <parameter type="gpointer" name="data" />
        <parameter type="gint" name="source" />
        <parameter type="GdkInputCondition" name="condition" />
      </parameters>
    </callback>
    <callback name="PixbufDestroyNotify" cname="GdkPixbufDestroyNotify">
      <return-type type="void" />
      <parameters>
        <parameter type="guchar*" name="pixels" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="PixbufSaveFunc" cname="GdkPixbufSaveFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="const-gchar*" name="buf" />
        <parameter type="gsize" name="count" />
        <parameter type="GError**" name="error" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="SpanFunc" cname="GdkSpanFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GdkSpan*" name="span" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <object name="Colormap" cname="GdkColormap" parent="GObject">
      <field name="Size" cname="size" type="gint" access="public" />
      <field name="Colors" cname="colors" type="GdkColor*" access="public" />
      <field name="Visual" cname="visual" type="GdkVisual*" />
      <field name="WindowingData" cname="windowing_data" type="gpointer" />
      <method name="AllocColor" cname="gdk_colormap_alloc_color">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkColor*" name="color" />
          <parameter type="gboolean" name="writeable" />
          <parameter type="gboolean" name="best_match" />
        </parameters>
      </method>
      <method name="AllocColors" cname="gdk_colormap_alloc_colors">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdkColor*" name="colors" />
          <parameter type="gint" name="ncolors" />
          <parameter type="gboolean" name="writeable" />
          <parameter type="gboolean" name="best_match" />
          <parameter type="gboolean*" name="success" />
        </parameters>
      </method>
      <method name="Change" cname="gdk_colormap_change" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="ncolors" />
        </parameters>
      </method>
      <method name="FreeColors" cname="gdk_colormap_free_colors">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkColor*" name="colors" />
          <parameter type="gint" name="ncolors" />
        </parameters>
      </method>
      <method name="GetScreen" cname="gdk_colormap_get_screen">
        <return-type type="GdkScreen*" />
      </method>
      <method name="GetSystem" cname="gdk_colormap_get_system" shared="true">
        <return-type type="GdkColormap*" />
      </method>
      <method name="GetSystemSize" cname="gdk_colormap_get_system_size" deprecated="1" shared="true">
        <return-type type="gint" />
      </method>
      <method name="GetType" cname="gdk_colormap_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVisual" cname="gdk_colormap_get_visual">
        <return-type type="GdkVisual*" />
      </method>
      <constructor cname="gdk_colormap_new">
        <parameters>
          <parameter type="GdkVisual*" name="visual" />
          <parameter type="gboolean" name="allocate" />
        </parameters>
      </constructor>
      <method name="QueryColor" cname="gdk_colormap_query_color">
        <return-type type="void" />
        <parameters>
          <parameter type="gulong" name="pixel" />
          <parameter type="GdkColor*" name="result" />
        </parameters>
      </method>
      <method name="Ref" cname="gdk_colormap_ref" deprecated="1">
        <return-type type="GdkColormap*" />
      </method>
      <method name="Unref" cname="gdk_colormap_unref" deprecated="1">
        <return-type type="void" />
      </method>
    </object>
    <object name="Device" cname="GdkDevice" parent="GObject">
      <field name="Name" cname="name" type="gchar*" />
      <field name="Source" cname="source" type="GdkInputSource" />
      <field name="Mode" cname="mode" type="GdkInputMode" />
      <field name="HasCursor" cname="has_cursor" type="gboolean" />
      <field name="NumAxes" cname="num_axes" type="gint" />
      <field name="Axes" cname="axes" type="GdkDeviceAxis*" />
      <field name="NumKeys" cname="num_keys" type="gint" />
      <field name="Keys" cname="keys" type="GdkDeviceKey*" />
      <method name="FreeHistory" cname="gdk_device_free_history" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkTimeCoord**" name="events" />
          <parameter type="gint" name="n_events" />
        </parameters>
      </method>
      <method name="GetAxis" cname="gdk_device_get_axis">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gdouble*" name="axes" />
          <parameter type="GdkAxisUse" name="use" />
          <parameter type="gdouble*" name="value" />
        </parameters>
      </method>
      <method name="GetCorePointer" cname="gdk_device_get_core_pointer" shared="true">
        <return-type type="GdkDevice*" />
      </method>
      <method name="GetHistory" cname="gdk_device_get_history">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="guint32" name="start" />
          <parameter type="guint32" name="stop" />
          <parameter type="GdkTimeCoord***" name="events" />
          <parameter type="gint*" name="n_events" />
        </parameters>
      </method>
      <method name="GetState" cname="gdk_device_get_state">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="gdouble*" name="axes" />
          <parameter type="GdkModifierType*" name="mask" />
        </parameters>
      </method>
      <method name="GetType" cname="gdk_device_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="SetAxisUse" cname="gdk_device_set_axis_use">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="index_" />
          <parameter type="GdkAxisUse" name="use" />
        </parameters>
      </method>
      <method name="SetKey" cname="gdk_device_set_key">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="index_" />
          <parameter type="guint" name="keyval" />
          <parameter type="GdkModifierType" name="modifiers" />
        </parameters>
      </method>
      <method name="SetMode" cname="gdk_device_set_mode">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkInputMode" name="mode" />
        </parameters>
      </method>
      <method name="SetSource" cname="gdk_device_set_source">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkInputSource" name="source" />
        </parameters>
      </method>
    </object>
    <object name="Display" cname="GdkDisplay" parent="GObject">
      <field name="QueuedEvents" cname="queued_events" type="GList*" />
      <field name="QueuedTail" cname="queued_tail" type="GList*" />
      <field name="ButtonClickTime" cname="button_click_time" array_len="2" type="guint32" />
      <field name="ButtonWindow" cname="button_window" array_len="2" type="GdkWindow*" />
      <field name="ButtonNumber" cname="button_number" array_len="2" type="gint" />
      <field name="DoubleClickTime" cname="double_click_time" type="guint" />
      <field name="CorePointer" cname="core_pointer" type="GdkDevice*" />
      <field name="PointerHooks" cname="pointer_hooks" type="const-GdkDisplayPointerHooks*" />
      <field name="Closed" cname="closed" bits="1" type="guint" />
      <field name="DoubleClickDistance" cname="double_click_distance" type="guint" />
      <field name="ButtonX" cname="button_x" array_len="2" type="gint" />
      <field name="ButtonY" cname="button_y" array_len="2" type="gint" />
      <method name="AddClientMessageFilter" cname="gdk_display_add_client_message_filter">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkAtom" name="message_type" />
          <parameter type="GdkFilterFunc" name="func" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="Beep" cname="gdk_display_beep">
        <return-type type="void" />
      </method>
      <method name="Close" cname="gdk_display_close">
        <return-type type="void" />
      </method>
      <method name="Flush" cname="gdk_display_flush">
        <return-type type="void" />
      </method>
      <method name="GetCorePointer" cname="gdk_display_get_core_pointer">
        <return-type type="GdkDevice*" />
      </method>
      <method name="GetDefault" cname="gdk_display_get_default" shared="true">
        <return-type type="GdkDisplay*" />
      </method>
      <method name="GetDefaultCursorSize" cname="gdk_display_get_default_cursor_size">
        <return-type type="guint" />
      </method>
      <method name="GetDefaultGroup" cname="gdk_display_get_default_group">
        <return-type type="GdkWindow*" />
      </method>
      <method name="GetDefaultScreen" cname="gdk_display_get_default_screen">
        <return-type type="GdkScreen*" />
      </method>
      <method name="GetEvent" cname="gdk_display_get_event">
        <return-type type="GdkEvent*" />
      </method>
      <method name="GetMaximalCursorSize" cname="gdk_display_get_maximal_cursor_size">
        <return-type type="void" />
        <parameters>
          <parameter type="guint*" name="width" />
          <parameter type="guint*" name="height" />
        </parameters>
      </method>
      <method name="GetNScreens" cname="gdk_display_get_n_screens">
        <return-type type="gint" />
      </method>
      <method name="GetName" cname="gdk_display_get_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetPointer" cname="gdk_display_get_pointer">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkScreen**" name="screen" />
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
          <parameter type="GdkModifierType*" name="mask" />
        </parameters>
      </method>
      <method name="GetScreen" cname="gdk_display_get_screen">
        <return-type type="GdkScreen*" />
        <parameters>
          <parameter type="gint" name="screen_num" />
        </parameters>
      </method>
      <method name="GetType" cname="gdk_display_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetWindowAtPointer" cname="gdk_display_get_window_at_pointer">
        <return-type type="GdkWindow*" />
        <parameters>
          <parameter type="gint*" name="win_x" />
          <parameter type="gint*" name="win_y" />
        </parameters>
      </method>
      <method name="KeyboardUngrab" cname="gdk_display_keyboard_ungrab">
        <return-type type="void" />
        <parameters>
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="ListDevices" cname="gdk_display_list_devices">
        <return-type type="GList*" />
      </method>
      <method name="Open" cname="gdk_display_open" shared="true">
        <return-type type="GdkDisplay*" />
        <parameters>
          <parameter type="const-gchar*" name="display_name" />
        </parameters>
      </method>
      <method name="OpenDefaultLibgtkOnly" cname="gdk_display_open_default_libgtk_only" shared="true">
        <return-type type="GdkDisplay*" />
      </method>
      <method name="PeekEvent" cname="gdk_display_peek_event">
        <return-type type="GdkEvent*" />
      </method>
      <method name="PointerIsGrabbed" cname="gdk_display_pointer_is_grabbed">
        <return-type type="gboolean" />
      </method>
      <method name="PointerUngrab" cname="gdk_display_pointer_ungrab">
        <return-type type="void" />
        <parameters>
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="PutEvent" cname="gdk_display_put_event">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="RequestSelectionNotification" cname="gdk_display_request_selection_notification">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkAtom" name="selection" />
        </parameters>
      </method>
      <method name="SetDoubleClickDistance" cname="gdk_display_set_double_click_distance">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="distance" />
        </parameters>
      </method>
      <method name="SetDoubleClickTime" cname="gdk_display_set_double_click_time">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="msec" />
        </parameters>
      </method>
      <method name="SetPointerHooks" cname="gdk_display_set_pointer_hooks">
        <return-type type="GdkDisplayPointerHooks*" />
        <parameters>
          <parameter type="const-GdkDisplayPointerHooks*" name="new_hooks" />
        </parameters>
      </method>
      <method name="StoreClipboard" cname="gdk_display_store_clipboard">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="clipboard_window" />
          <parameter type="guint32" name="time_" />
          <parameter type="GdkAtom*" name="targets" />
          <parameter type="gint" name="n_targets" />
        </parameters>
      </method>
      <method name="SupportsClipboardPersistence" cname="gdk_display_supports_clipboard_persistence">
        <return-type type="gboolean" />
      </method>
      <method name="SupportsCursorAlpha" cname="gdk_display_supports_cursor_alpha">
        <return-type type="gboolean" />
      </method>
      <method name="SupportsCursorColor" cname="gdk_display_supports_cursor_color">
        <return-type type="gboolean" />
      </method>
      <method name="SupportsInputShapes" cname="gdk_display_supports_input_shapes">
        <return-type type="gboolean" />
      </method>
      <method name="SupportsSelectionNotification" cname="gdk_display_supports_selection_notification">
        <return-type type="gboolean" />
      </method>
      <method name="SupportsShapes" cname="gdk_display_supports_shapes">
        <return-type type="gboolean" />
      </method>
      <method name="Sync" cname="gdk_display_sync">
        <return-type type="void" />
      </method>
      <method name="WarpPointer" cname="gdk_display_warp_pointer">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkScreen*" name="screen" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
    </object>
    <object name="DisplayManager" cname="GdkDisplayManager">
      <method name="Get" cname="gdk_display_manager_get" shared="true">
        <return-type type="GdkDisplayManager*" />
      </method>
      <method name="GetDefaultDisplay" cname="gdk_display_manager_get_default_display">
        <return-type type="GdkDisplay*" />
      </method>
      <method name="GetType" cname="gdk_display_manager_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ListDisplays" cname="gdk_display_manager_list_displays">
        <return-type type="GSList*" />
      </method>
      <method name="SetDefaultDisplay" cname="gdk_display_manager_set_default_display">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
        </parameters>
      </method>
    </object>
    <object name="DragContext" cname="GdkDragContext" parent="GObject">
      <field name="Protocol" cname="protocol" type="GdkDragProtocol" access="public" />
      <field name="IsSource" cname="is_source" type="gboolean" access="public" />
      <field name="SourceWindow" cname="source_window" type="GdkWindow*" access="public" />
      <field name="DestWindow" cname="dest_window" type="GdkWindow*" access="public" />
      <field name="Targets" cname="targets" type="GList*" access="public" />
      <field name="Actions" cname="actions" type="GdkDragAction" access="public" />
      <field name="SuggestedAction" cname="suggested_action" type="GdkDragAction" access="public" />
      <field name="Action" cname="action" type="GdkDragAction" access="public" />
      <field name="StartTime" cname="start_time" type="guint32" access="public" />
      <field name="WindowingData" cname="windowing_data" type="gpointer" />
      <method name="GetType" cname="gdk_drag_context_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gdk_drag_context_new" />
      <method name="Ref" cname="gdk_drag_context_ref" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="Unref" cname="gdk_drag_context_unref" deprecated="1">
        <return-type type="void" />
      </method>
    </object>
    <object name="Drawable" cname="GdkDrawable" parent="GObject">
      <method name="DrawArc" cname="gdk_draw_arc">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGC*" name="gc" />
          <parameter type="gboolean" name="filled" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="gint" name="angle1" />
          <parameter type="gint" name="angle2" />
        </parameters>
      </method>
      <method name="DrawDrawable" cname="gdk_draw_drawable">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGC*" name="gc" />
          <parameter type="GdkDrawable*" name="src" />
          <parameter type="gint" name="xsrc" />
          <parameter type="gint" name="ysrc" />
          <parameter type="gint" name="xdest" />
          <parameter type="gint" name="ydest" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="DrawGlyphs" cname="gdk_draw_glyphs">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGC*" name="gc" />
          <parameter type="PangoFont*" name="font" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="PangoGlyphString*" name="glyphs" />
        </parameters>
      </method>
      <method name="DrawGlyphsTransformed" cname="gdk_draw_glyphs_transformed">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGC*" name="gc" />
          <parameter type="PangoMatrix*" name="matrix" />
          <parameter type="PangoFont*" name="font" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="PangoGlyphString*" name="glyphs" />
        </parameters>
      </method>
      <method name="DrawGrayImage" cname="gdk_draw_gray_image">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGC*" name="gc" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="GdkRgbDither" name="dith" />
          <parameter type="guchar*" name="buf" />
          <parameter type="gint" name="rowstride" />
        </parameters>
      </method>
      <method name="DrawImage" cname="gdk_draw_image">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGC*" name="gc" />
          <parameter type="GdkImage*" name="image" />
          <parameter type="gint" name="xsrc" />
          <parameter type="gint" name="ysrc" />
          <parameter type="gint" name="xdest" />
          <parameter type="gint" name="ydest" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="DrawIndexedImage" cname="gdk_draw_indexed_image">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGC*" name="gc" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="GdkRgbDither" name="dith" />
          <parameter type="guchar*" name="buf" />
          <parameter type="gint" name="rowstride" />
          <parameter type="GdkRgbCmap*" name="cmap" />
        </parameters>
      </method>
      <method name="DrawLayout" cname="gdk_draw_layout">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGC*" name="gc" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="PangoLayout*" name="layout" />
        </parameters>
      </method>
      <method name="DrawLayoutLine" cname="gdk_draw_layout_line">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGC*" name="gc" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="PangoLayoutLine*" name="line" />
        </parameters>
      </method>
      <method name="DrawLayoutLineWithColors" cname="gdk_draw_layout_line_with_colors">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGC*" name="gc" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="PangoLayoutLine*" name="line" />
          <parameter type="const-GdkColor*" name="foreground" />
          <parameter type="const-GdkColor*" name="background" />
        </parameters>
      </method>
      <method name="DrawLayoutWithColors" cname="gdk_draw_layout_with_colors">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGC*" name="gc" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="PangoLayout*" name="layout" />
          <parameter type="const-GdkColor*" name="foreground" />
          <parameter type="const-GdkColor*" name="background" />
        </parameters>
      </method>
      <method name="DrawLine" cname="gdk_draw_line">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGC*" name="gc" />
          <parameter type="gint" name="x1_" />
          <parameter type="gint" name="y1_" />
          <parameter type="gint" name="x2_" />
          <parameter type="gint" name="y2_" />
        </parameters>
      </method>
      <method name="DrawLines" cname="gdk_draw_lines">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGC*" name="gc" />
          <parameter type="GdkPoint*" name="points" />
          <parameter type="gint" name="npoints" />
        </parameters>
      </method>
      <method name="DrawPixbuf" cname="gdk_draw_pixbuf">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGC*" name="gc" />
          <parameter type="GdkPixbuf*" name="pixbuf" />
          <parameter type="gint" name="src_x" />
          <parameter type="gint" name="src_y" />
          <parameter type="gint" name="dest_x" />
          <parameter type="gint" name="dest_y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="GdkRgbDither" name="dither" />
          <parameter type="gint" name="x_dither" />
          <parameter type="gint" name="y_dither" />
        </parameters>
      </method>
      <method name="DrawPoint" cname="gdk_draw_point">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGC*" name="gc" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="DrawPoints" cname="gdk_draw_points">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGC*" name="gc" />
          <parameter type="GdkPoint*" name="points" />
          <parameter type="gint" name="npoints" />
        </parameters>
      </method>
      <method name="DrawPolygon" cname="gdk_draw_polygon">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGC*" name="gc" />
          <parameter type="gboolean" name="filled" />
          <parameter type="GdkPoint*" name="points" />
          <parameter type="gint" name="npoints" />
        </parameters>
      </method>
      <method name="DrawRectangle" cname="gdk_draw_rectangle">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGC*" name="gc" />
          <parameter type="gboolean" name="filled" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="DrawRgb32Image" cname="gdk_draw_rgb_32_image">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGC*" name="gc" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="GdkRgbDither" name="dith" />
          <parameter type="guchar*" name="buf" />
          <parameter type="gint" name="rowstride" />
        </parameters>
      </method>
      <method name="DrawRgb32ImageDithalign" cname="gdk_draw_rgb_32_image_dithalign">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGC*" name="gc" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="GdkRgbDither" name="dith" />
          <parameter type="guchar*" name="buf" />
          <parameter type="gint" name="rowstride" />
          <parameter type="gint" name="xdith" />
          <parameter type="gint" name="ydith" />
        </parameters>
      </method>
      <method name="DrawRgbImage" cname="gdk_draw_rgb_image">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGC*" name="gc" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="GdkRgbDither" name="dith" />
          <parameter type="guchar*" name="rgb_buf" />
          <parameter type="gint" name="rowstride" />
        </parameters>
      </method>
      <method name="DrawRgbImageDithalign" cname="gdk_draw_rgb_image_dithalign">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGC*" name="gc" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="GdkRgbDither" name="dith" />
          <parameter type="guchar*" name="rgb_buf" />
          <parameter type="gint" name="rowstride" />
          <parameter type="gint" name="xdith" />
          <parameter type="gint" name="ydith" />
        </parameters>
      </method>
      <method name="DrawSegments" cname="gdk_draw_segments">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGC*" name="gc" />
          <parameter type="GdkSegment*" name="segs" />
          <parameter type="gint" name="nsegs" />
        </parameters>
      </method>
      <method name="DrawString" cname="gdk_draw_string" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkFont*" name="font" />
          <parameter type="GdkGC*" name="gc" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="const-gchar*" name="string" />
        </parameters>
      </method>
      <method name="DrawText" cname="gdk_draw_text" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkFont*" name="font" />
          <parameter type="GdkGC*" name="gc" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="const-gchar*" name="text" />
          <parameter type="gint" name="text_length" />
        </parameters>
      </method>
      <method name="DrawTextWc" cname="gdk_draw_text_wc" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkFont*" name="font" />
          <parameter type="GdkGC*" name="gc" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="const-GdkWChar*" name="text" />
          <parameter type="gint" name="text_length" />
        </parameters>
      </method>
      <method name="DrawTrapezoids" cname="gdk_draw_trapezoids">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGC*" name="gc" />
          <parameter type="GdkTrapezoid*" name="trapezoids" />
          <parameter type="gint" name="n_trapezoids" />
        </parameters>
      </method>
      <method name="CopyToImage" cname="gdk_drawable_copy_to_image">
        <return-type type="GdkImage*" />
        <parameters>
          <parameter type="GdkImage*" name="image" />
          <parameter type="gint" name="src_x" />
          <parameter type="gint" name="src_y" />
          <parameter type="gint" name="dest_x" />
          <parameter type="gint" name="dest_y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="GetClipRegion" cname="gdk_drawable_get_clip_region">
        <return-type type="GdkRegion*" />
      </method>
      <method name="GetColormap" cname="gdk_drawable_get_colormap">
        <return-type type="GdkColormap*" />
      </method>
      <method name="GetData" cname="gdk_drawable_get_data" deprecated="1">
        <return-type type="gpointer" />
        <parameters>
          <parameter type="const-gchar*" name="key" />
        </parameters>
      </method>
      <method name="GetDepth" cname="gdk_drawable_get_depth">
        <return-type type="gint" />
      </method>
      <method name="GetDisplay" cname="gdk_drawable_get_display">
        <return-type type="GdkDisplay*" />
      </method>
      <method name="GetImage" cname="gdk_drawable_get_image">
        <return-type type="GdkImage*" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="GetScreen" cname="gdk_drawable_get_screen">
        <return-type type="GdkScreen*" />
      </method>
      <method name="GetSize" cname="gdk_drawable_get_size">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="height" />
        </parameters>
      </method>
      <method name="GetType" cname="gdk_drawable_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVisibleRegion" cname="gdk_drawable_get_visible_region">
        <return-type type="GdkRegion*" />
      </method>
      <method name="GetVisual" cname="gdk_drawable_get_visual">
        <return-type type="GdkVisual*" />
      </method>
      <method name="Ref" cname="gdk_drawable_ref" deprecated="1">
        <return-type type="GdkDrawable*" />
      </method>
      <method name="SetColormap" cname="gdk_drawable_set_colormap">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkColormap*" name="colormap" />
        </parameters>
      </method>
      <method name="SetData" cname="gdk_drawable_set_data" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="key" />
          <parameter type="gpointer" name="data" />
          <parameter type="GDestroyNotify" name="destroy_func" />
        </parameters>
      </method>
      <method name="Unref" cname="gdk_drawable_unref" deprecated="1">
        <return-type type="void" />
      </method>
    </object>
    <object name="GC" cname="GdkGC" parent="GObject">
      <field name="ClipXOrigin" cname="clip_x_origin" type="gint" />
      <field name="ClipYOrigin" cname="clip_y_origin" type="gint" />
      <field name="TsXOrigin" cname="ts_x_origin" type="gint" />
      <field name="TsYOrigin" cname="ts_y_origin" type="gint" />
      <field name="Colormap" cname="colormap" type="GdkColormap*" />
      <method name="Copy" cname="gdk_gc_copy">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGC*" name="src_gc" />
        </parameters>
      </method>
      <method name="GetColormap" cname="gdk_gc_get_colormap">
        <return-type type="GdkColormap*" />
      </method>
      <method name="GetScreen" cname="gdk_gc_get_screen">
        <return-type type="GdkScreen*" />
      </method>
      <method name="GetType" cname="gdk_gc_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetValues" cname="gdk_gc_get_values">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGCValues*" name="values" />
        </parameters>
      </method>
      <constructor cname="gdk_gc_new">
        <parameters>
          <parameter type="GdkDrawable*" name="drawable" />
        </parameters>
      </constructor>
      <constructor cname="gdk_gc_new_with_values">
        <parameters>
          <parameter type="GdkDrawable*" name="drawable" />
          <parameter type="GdkGCValues*" name="values" />
          <parameter type="GdkGCValuesMask" name="values_mask" />
        </parameters>
      </constructor>
      <method name="Offset" cname="gdk_gc_offset">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="x_offset" />
          <parameter type="gint" name="y_offset" />
        </parameters>
      </method>
      <method name="Ref" cname="gdk_gc_ref" deprecated="1">
        <return-type type="GdkGC*" />
      </method>
      <method name="SetBackground" cname="gdk_gc_set_background">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="SetClipMask" cname="gdk_gc_set_clip_mask">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkBitmap*" name="mask" />
        </parameters>
      </method>
      <method name="SetClipOrigin" cname="gdk_gc_set_clip_origin">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="SetClipRectangle" cname="gdk_gc_set_clip_rectangle">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRectangle*" name="rectangle" />
        </parameters>
      </method>
      <method name="SetClipRegion" cname="gdk_gc_set_clip_region">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRegion*" name="region" />
        </parameters>
      </method>
      <method name="SetColormap" cname="gdk_gc_set_colormap">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkColormap*" name="colormap" />
        </parameters>
      </method>
      <method name="SetDashes" cname="gdk_gc_set_dashes">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="dash_offset" />
          <parameter type="gint8" array="true" name="dash_list" />
          <parameter type="gint" name="n" />
        </parameters>
      </method>
      <method name="SetExposures" cname="gdk_gc_set_exposures">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="exposures" />
        </parameters>
      </method>
      <method name="SetFill" cname="gdk_gc_set_fill">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkFill" name="fill" />
        </parameters>
      </method>
      <method name="SetFont" cname="gdk_gc_set_font" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkFont*" name="font" />
        </parameters>
      </method>
      <method name="SetForeground" cname="gdk_gc_set_foreground">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="SetFunction" cname="gdk_gc_set_function">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkFunction" name="function" />
        </parameters>
      </method>
      <method name="SetLineAttributes" cname="gdk_gc_set_line_attributes">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="line_width" />
          <parameter type="GdkLineStyle" name="line_style" />
          <parameter type="GdkCapStyle" name="cap_style" />
          <parameter type="GdkJoinStyle" name="join_style" />
        </parameters>
      </method>
      <method name="SetRgbBgColor" cname="gdk_gc_set_rgb_bg_color">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="SetRgbFgColor" cname="gdk_gc_set_rgb_fg_color">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="SetStipple" cname="gdk_gc_set_stipple">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixmap*" name="stipple" />
        </parameters>
      </method>
      <method name="SetSubwindow" cname="gdk_gc_set_subwindow">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkSubwindowMode" name="mode" />
        </parameters>
      </method>
      <method name="SetTile" cname="gdk_gc_set_tile">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixmap*" name="tile" />
        </parameters>
      </method>
      <method name="SetTsOrigin" cname="gdk_gc_set_ts_origin">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="SetValues" cname="gdk_gc_set_values">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGCValues*" name="values" />
          <parameter type="GdkGCValuesMask" name="values_mask" />
        </parameters>
      </method>
      <method name="Unref" cname="gdk_gc_unref" deprecated="1">
        <return-type type="void" />
      </method>
    </object>
    <object name="Image" cname="GdkImage" parent="GObject">
      <field name="Type" cname="type" type="GdkImageType" access="public" />
      <field name="Visual" cname="visual" type="GdkVisual*" access="public" />
      <field name="ByteOrder" cname="byte_order" type="GdkByteOrder" access="public" />
      <field name="Width" cname="width" type="gint" access="public" />
      <field name="Height" cname="height" type="gint" access="public" />
      <field name="Depth" cname="depth" type="guint16" access="public" />
      <field name="Bpp" cname="bpp" type="guint16" access="public" />
      <field name="Bpl" cname="bpl" type="guint16" access="public" />
      <field name="BitsPerPixel" cname="bits_per_pixel" type="guint16" access="public" />
      <field name="Mem" cname="mem" type="gpointer" access="public" />
      <field name="Colormap" cname="colormap" type="GdkColormap*" access="public" />
      <field name="WindowingData" cname="windowing_data" type="gpointer" />
      <method name="Get" cname="gdk_image_get" deprecated="1" shared="true">
        <return-type type="GdkImage*" />
        <parameters>
          <parameter type="GdkDrawable*" name="drawable" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="GetColormap" cname="gdk_image_get_colormap">
        <return-type type="GdkColormap*" />
      </method>
      <method name="GetPixel" cname="gdk_image_get_pixel">
        <return-type type="guint32" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="GetType" cname="gdk_image_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gdk_image_new">
        <parameters>
          <parameter type="GdkImageType" name="type" />
          <parameter type="GdkVisual*" name="visual" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </constructor>
      <method name="PutPixel" cname="gdk_image_put_pixel">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="guint32" name="pixel" />
        </parameters>
      </method>
      <method name="Ref" cname="gdk_image_ref" deprecated="1">
        <return-type type="GdkImage*" />
      </method>
      <method name="SetColormap" cname="gdk_image_set_colormap">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkColormap*" name="colormap" />
        </parameters>
      </method>
      <method name="Unref" cname="gdk_image_unref" deprecated="1">
        <return-type type="void" />
      </method>
    </object>
    <object name="Keymap" cname="GdkKeymap" parent="GObject">
      <field name="Display" cname="display" type="GdkDisplay*" />
      <method name="GetDefault" cname="gdk_keymap_get_default" shared="true">
        <return-type type="GdkKeymap*" />
      </method>
      <method name="GetDirection" cname="gdk_keymap_get_direction">
        <return-type type="PangoDirection" />
      </method>
      <method name="GetEntriesForKeycode" cname="gdk_keymap_get_entries_for_keycode">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="hardware_keycode" />
          <parameter type="GdkKeymapKey**" name="keys" />
          <parameter type="guint**" name="keyvals" />
          <parameter type="gint*" name="n_entries" />
        </parameters>
      </method>
      <method name="GetEntriesForKeyval" cname="gdk_keymap_get_entries_for_keyval">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="keyval" />
          <parameter type="GdkKeymapKey**" name="keys" />
          <parameter type="gint*" name="n_keys" />
        </parameters>
      </method>
      <method name="GetForDisplay" cname="gdk_keymap_get_for_display" shared="true">
        <return-type type="GdkKeymap*" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
        </parameters>
      </method>
      <method name="GetType" cname="gdk_keymap_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="LookupKey" cname="gdk_keymap_lookup_key">
        <return-type type="guint" />
        <parameters>
          <parameter type="const-GdkKeymapKey*" name="key" />
        </parameters>
      </method>
      <method name="TranslateKeyboardState" cname="gdk_keymap_translate_keyboard_state">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="hardware_keycode" />
          <parameter type="GdkModifierType" name="state" />
          <parameter type="gint" name="group" />
          <parameter type="guint*" name="keyval" />
          <parameter type="gint*" name="effective_group" />
          <parameter type="gint*" name="level" />
          <parameter type="GdkModifierType*" name="consumed_modifiers" />
        </parameters>
      </method>
    </object>
    <object name="PangoRenderer" cname="GdkPangoRenderer" parent="PangoRenderer">
      <field name="Priv" cname="priv" type="GdkPangoRendererPrivate*" />
      <method name="GetDefault" cname="gdk_pango_renderer_get_default" shared="true">
        <return-type type="PangoRenderer*" />
        <parameters>
          <parameter type="GdkScreen*" name="screen" />
        </parameters>
      </method>
      <method name="GetType" cname="gdk_pango_renderer_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gdk_pango_renderer_new">
        <parameters>
          <parameter type="GdkScreen*" name="screen" />
        </parameters>
      </constructor>
      <method name="SetDrawable" cname="gdk_pango_renderer_set_drawable">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDrawable*" name="drawable" />
        </parameters>
      </method>
      <method name="SetGc" cname="gdk_pango_renderer_set_gc">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGC*" name="gc" />
        </parameters>
      </method>
      <method name="SetOverrideColor" cname="gdk_pango_renderer_set_override_color">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoRenderPart" name="part" />
          <parameter type="const-GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="SetStipple" cname="gdk_pango_renderer_set_stipple">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoRenderPart" name="part" />
          <parameter type="GdkBitmap*" name="stipple" />
        </parameters>
      </method>
    </object>
    <object name="Pixbuf" cname="GdkPixbuf">
      <method name="AddAlpha" cname="gdk_pixbuf_add_alpha">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="gboolean" name="substitute_color" />
          <parameter type="guchar" name="r" />
          <parameter type="guchar" name="g" />
          <parameter type="guchar" name="b" />
        </parameters>
      </method>
      <method name="Composite" cname="gdk_pixbuf_composite">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixbuf*" name="dest" />
          <parameter type="int" name="dest_x" />
          <parameter type="int" name="dest_y" />
          <parameter type="int" name="dest_width" />
          <parameter type="int" name="dest_height" />
          <parameter type="double" name="offset_x" />
          <parameter type="double" name="offset_y" />
          <parameter type="double" name="scale_x" />
          <parameter type="double" name="scale_y" />
          <parameter type="GdkInterpType" name="interp_type" />
          <parameter type="int" name="overall_alpha" />
        </parameters>
      </method>
      <method name="CompositeColor" cname="gdk_pixbuf_composite_color">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixbuf*" name="dest" />
          <parameter type="int" name="dest_x" />
          <parameter type="int" name="dest_y" />
          <parameter type="int" name="dest_width" />
          <parameter type="int" name="dest_height" />
          <parameter type="double" name="offset_x" />
          <parameter type="double" name="offset_y" />
          <parameter type="double" name="scale_x" />
          <parameter type="double" name="scale_y" />
          <parameter type="GdkInterpType" name="interp_type" />
          <parameter type="int" name="overall_alpha" />
          <parameter type="int" name="check_x" />
          <parameter type="int" name="check_y" />
          <parameter type="int" name="check_size" />
          <parameter type="guint32" name="color1" />
          <parameter type="guint32" name="color2" />
        </parameters>
      </method>
      <method name="CompositeColorSimple" cname="gdk_pixbuf_composite_color_simple">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="int" name="dest_width" />
          <parameter type="int" name="dest_height" />
          <parameter type="GdkInterpType" name="interp_type" />
          <parameter type="int" name="overall_alpha" />
          <parameter type="int" name="check_size" />
          <parameter type="guint32" name="color1" />
          <parameter type="guint32" name="color2" />
        </parameters>
      </method>
      <method name="Copy" cname="gdk_pixbuf_copy">
        <return-type type="GdkPixbuf*" owned="true" />
      </method>
      <method name="CopyArea" cname="gdk_pixbuf_copy_area">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="src_x" />
          <parameter type="int" name="src_y" />
          <parameter type="int" name="width" />
          <parameter type="int" name="height" />
          <parameter type="GdkPixbuf*" name="dest_pixbuf" />
          <parameter type="int" name="dest_x" />
          <parameter type="int" name="dest_y" />
        </parameters>
      </method>
      <method name="ErrorQuark" cname="gdk_pixbuf_error_quark" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="Fill" cname="gdk_pixbuf_fill">
        <return-type type="void" />
        <parameters>
          <parameter type="guint32" name="pixel" />
        </parameters>
      </method>
      <method name="Flip" cname="gdk_pixbuf_flip">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="gboolean" name="horizontal" />
        </parameters>
      </method>
      <method name="FromPixdata" cname="gdk_pixbuf_from_pixdata" shared="true">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="const-GdkPixdata*" name="pixdata" />
          <parameter type="gboolean" name="copy_pixels" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="GetBitsPerSample" cname="gdk_pixbuf_get_bits_per_sample">
        <return-type type="int" />
      </method>
      <method name="GetColorspace" cname="gdk_pixbuf_get_colorspace">
        <return-type type="GdkColorspace" />
      </method>
      <method name="GetFileInfo" cname="gdk_pixbuf_get_file_info" shared="true">
        <return-type type="GdkPixbufFormat*" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="height" />
        </parameters>
      </method>
      <method name="GetFormats" cname="gdk_pixbuf_get_formats" shared="true">
        <return-type type="GSList*" />
      </method>
      <method name="GetFromDrawable" cname="gdk_pixbuf_get_from_drawable">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="GdkDrawable*" name="src" />
          <parameter type="GdkColormap*" name="cmap" />
          <parameter type="int" name="src_x" />
          <parameter type="int" name="src_y" />
          <parameter type="int" name="dest_x" />
          <parameter type="int" name="dest_y" />
          <parameter type="int" name="width" />
          <parameter type="int" name="height" />
        </parameters>
      </method>
      <method name="GetFromImage" cname="gdk_pixbuf_get_from_image">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="GdkImage*" name="src" />
          <parameter type="GdkColormap*" name="cmap" />
          <parameter type="int" name="src_x" />
          <parameter type="int" name="src_y" />
          <parameter type="int" name="dest_x" />
          <parameter type="int" name="dest_y" />
          <parameter type="int" name="width" />
          <parameter type="int" name="height" />
        </parameters>
      </method>
      <method name="GetHasAlpha" cname="gdk_pixbuf_get_has_alpha">
        <return-type type="gboolean" />
      </method>
      <method name="GetHeight" cname="gdk_pixbuf_get_height">
        <return-type type="int" />
      </method>
      <method name="GetNChannels" cname="gdk_pixbuf_get_n_channels">
        <return-type type="int" />
      </method>
      <method name="GetOption" cname="gdk_pixbuf_get_option">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="const-gchar*" name="key" />
        </parameters>
      </method>
      <method name="GetPixels" cname="gdk_pixbuf_get_pixels">
        <return-type type="guchar*" />
      </method>
      <method name="GetRowstride" cname="gdk_pixbuf_get_rowstride">
        <return-type type="int" />
      </method>
      <method name="GetType" cname="gdk_pixbuf_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetWidth" cname="gdk_pixbuf_get_width">
        <return-type type="int" />
      </method>
      <constructor cname="gdk_pixbuf_new">
        <parameters>
          <parameter type="GdkColorspace" name="colorspace" />
          <parameter type="gboolean" name="has_alpha" />
          <parameter type="int" name="bits_per_sample" />
          <parameter type="int" name="width" />
          <parameter type="int" name="height" />
        </parameters>
      </constructor>
      <constructor cname="gdk_pixbuf_new_from_data">
        <parameters>
          <parameter type="const-guchar*" name="data" />
          <parameter type="GdkColorspace" name="colorspace" />
          <parameter type="gboolean" name="has_alpha" />
          <parameter type="int" name="bits_per_sample" />
          <parameter type="int" name="width" />
          <parameter type="int" name="height" />
          <parameter type="int" name="rowstride" />
          <parameter type="GdkPixbufDestroyNotify" name="destroy_fn" />
          <parameter type="gpointer" name="destroy_fn_data" />
        </parameters>
      </constructor>
      <constructor cname="gdk_pixbuf_new_from_file">
        <parameters>
          <parameter type="const-char*" name="filename" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <constructor cname="gdk_pixbuf_new_from_file_at_scale">
        <parameters>
          <parameter type="const-char*" name="filename" />
          <parameter type="int" name="width" />
          <parameter type="int" name="height" />
          <parameter type="gboolean" name="preserve_aspect_ratio" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <constructor cname="gdk_pixbuf_new_from_file_at_size">
        <parameters>
          <parameter type="const-char*" name="filename" />
          <parameter type="int" name="width" />
          <parameter type="int" name="height" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <constructor cname="gdk_pixbuf_new_from_inline">
        <parameters>
          <parameter type="gint" name="data_length" />
          <parameter type="const-guint8*" name="data" />
          <parameter type="gboolean" name="copy_pixels" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <constructor cname="gdk_pixbuf_new_from_xpm_data">
        <parameters>
          <parameter type="const-char**" name="data" />
        </parameters>
      </constructor>
      <constructor cname="gdk_pixbuf_new_subpixbuf">
        <parameters>
          <parameter type="GdkPixbuf*" name="src_pixbuf" />
          <parameter type="int" name="src_x" />
          <parameter type="int" name="src_y" />
          <parameter type="int" name="width" />
          <parameter type="int" name="height" />
        </parameters>
      </constructor>
      <method name="Ref" cname="gdk_pixbuf_ref" deprecated="1">
        <return-type type="GdkPixbuf*" />
      </method>
      <method name="RenderPixmapAndMask" cname="gdk_pixbuf_render_pixmap_and_mask">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixmap**" name="pixmap_return" />
          <parameter type="GdkBitmap**" name="mask_return" />
          <parameter type="int" name="alpha_threshold" />
        </parameters>
      </method>
      <method name="RenderPixmapAndMaskForColormap" cname="gdk_pixbuf_render_pixmap_and_mask_for_colormap">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkColormap*" name="colormap" />
          <parameter type="GdkPixmap**" name="pixmap_return" />
          <parameter type="GdkBitmap**" name="mask_return" />
          <parameter type="int" name="alpha_threshold" />
        </parameters>
      </method>
      <method name="RenderThresholdAlpha" cname="gdk_pixbuf_render_threshold_alpha">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkBitmap*" name="bitmap" />
          <parameter type="int" name="src_x" />
          <parameter type="int" name="src_y" />
          <parameter type="int" name="dest_x" />
          <parameter type="int" name="dest_y" />
          <parameter type="int" name="width" />
          <parameter type="int" name="height" />
          <parameter type="int" name="alpha_threshold" />
        </parameters>
      </method>
      <method name="RenderToDrawable" cname="gdk_pixbuf_render_to_drawable" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDrawable*" name="drawable" />
          <parameter type="GdkGC*" name="gc" />
          <parameter type="int" name="src_x" />
          <parameter type="int" name="src_y" />
          <parameter type="int" name="dest_x" />
          <parameter type="int" name="dest_y" />
          <parameter type="int" name="width" />
          <parameter type="int" name="height" />
          <parameter type="GdkRgbDither" name="dither" />
          <parameter type="int" name="x_dither" />
          <parameter type="int" name="y_dither" />
        </parameters>
      </method>
      <method name="RenderToDrawableAlpha" cname="gdk_pixbuf_render_to_drawable_alpha" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDrawable*" name="drawable" />
          <parameter type="int" name="src_x" />
          <parameter type="int" name="src_y" />
          <parameter type="int" name="dest_x" />
          <parameter type="int" name="dest_y" />
          <parameter type="int" name="width" />
          <parameter type="int" name="height" />
          <parameter type="GdkPixbufAlphaMode" name="alpha_mode" />
          <parameter type="int" name="alpha_threshold" />
          <parameter type="GdkRgbDither" name="dither" />
          <parameter type="int" name="x_dither" />
          <parameter type="int" name="y_dither" />
        </parameters>
      </method>
      <method name="RotateSimple" cname="gdk_pixbuf_rotate_simple">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="GdkPixbufRotation" name="angle" />
        </parameters>
      </method>
      <method name="SaturateAndPixelate" cname="gdk_pixbuf_saturate_and_pixelate">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixbuf*" name="dest" />
          <parameter type="gfloat" name="saturation" />
          <parameter type="gboolean" name="pixelate" />
        </parameters>
      </method>
      <method name="Save" cname="gdk_pixbuf_save">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="filename" />
          <parameter type="const-char*" name="type" />
          <parameter type="GError**" name="error" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="SaveToBuffer" cname="gdk_pixbuf_save_to_buffer">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gchar**" name="buffer" />
          <parameter type="gsize*" name="buffer_size" />
          <parameter type="const-char*" name="type" />
          <parameter type="GError**" name="error" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="SaveToBufferv" cname="gdk_pixbuf_save_to_bufferv">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gchar**" name="buffer" />
          <parameter type="gsize*" name="buffer_size" />
          <parameter type="const-char*" name="type" />
          <parameter type="char**" name="option_keys" />
          <parameter type="char**" name="option_values" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="SaveToCallback" cname="gdk_pixbuf_save_to_callback">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkPixbufSaveFunc" name="save_func" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="const-char*" name="type" />
          <parameter type="GError**" name="error" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="SaveToCallbackv" cname="gdk_pixbuf_save_to_callbackv">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkPixbufSaveFunc" name="save_func" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="const-char*" name="type" />
          <parameter type="char**" name="option_keys" />
          <parameter type="char**" name="option_values" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="Savev" cname="gdk_pixbuf_savev">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="filename" />
          <parameter type="const-char*" name="type" />
          <parameter type="char**" name="option_keys" />
          <parameter type="char**" name="option_values" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="Scale" cname="gdk_pixbuf_scale">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixbuf*" name="dest" />
          <parameter type="int" name="dest_x" />
          <parameter type="int" name="dest_y" />
          <parameter type="int" name="dest_width" />
          <parameter type="int" name="dest_height" />
          <parameter type="double" name="offset_x" />
          <parameter type="double" name="offset_y" />
          <parameter type="double" name="scale_x" />
          <parameter type="double" name="scale_y" />
          <parameter type="GdkInterpType" name="interp_type" />
        </parameters>
      </method>
      <method name="ScaleSimple" cname="gdk_pixbuf_scale_simple">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="int" name="dest_width" />
          <parameter type="int" name="dest_height" />
          <parameter type="GdkInterpType" name="interp_type" />
        </parameters>
      </method>
      <method name="Unref" cname="gdk_pixbuf_unref" deprecated="1">
        <return-type type="void" />
      </method>
    </object>
    <object name="PixbufAnimation" cname="GdkPixbufAnimation" parent="GObject">
      <method name="GetHeight" cname="gdk_pixbuf_animation_get_height">
        <return-type type="int" />
      </method>
      <method name="GetIter" cname="gdk_pixbuf_animation_get_iter">
        <return-type type="GdkPixbufAnimationIter*" />
        <parameters>
          <parameter type="const-GTimeVal*" name="start_time" />
        </parameters>
      </method>
      <method name="GetStaticImage" cname="gdk_pixbuf_animation_get_static_image">
        <return-type type="GdkPixbuf*" />
      </method>
      <method name="GetType" cname="gdk_pixbuf_animation_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetWidth" cname="gdk_pixbuf_animation_get_width">
        <return-type type="int" />
      </method>
      <method name="IsStaticImage" cname="gdk_pixbuf_animation_is_static_image">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gdk_pixbuf_animation_new_from_file">
        <parameters>
          <parameter type="const-char*" name="filename" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <method name="Ref" cname="gdk_pixbuf_animation_ref" deprecated="1">
        <return-type type="GdkPixbufAnimation*" />
      </method>
      <method name="Unref" cname="gdk_pixbuf_animation_unref" deprecated="1">
        <return-type type="void" />
      </method>
    </object>
    <object name="PixbufAnimationIter" cname="GdkPixbufAnimationIter" parent="GObject">
      <method name="Advance" cname="gdk_pixbuf_animation_iter_advance">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GTimeVal*" name="current_time" />
        </parameters>
      </method>
      <method name="GetDelayTime" cname="gdk_pixbuf_animation_iter_get_delay_time">
        <return-type type="int" />
      </method>
      <method name="GetPixbuf" cname="gdk_pixbuf_animation_iter_get_pixbuf">
        <return-type type="GdkPixbuf*" />
      </method>
      <method name="GetType" cname="gdk_pixbuf_animation_iter_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="OnCurrentlyLoadingFrame" cname="gdk_pixbuf_animation_iter_on_currently_loading_frame">
        <return-type type="gboolean" />
      </method>
    </object>
    <object name="PixbufLoader" cname="GdkPixbufLoader" parent="GObject">
      <field name="Priv" cname="priv" type="gpointer" />
      <method name="Close" cname="gdk_pixbuf_loader_close">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="GetAnimation" cname="gdk_pixbuf_loader_get_animation">
        <return-type type="GdkPixbufAnimation*" />
      </method>
      <method name="GetFormat" cname="gdk_pixbuf_loader_get_format">
        <return-type type="GdkPixbufFormat*" />
      </method>
      <method name="GetPixbuf" cname="gdk_pixbuf_loader_get_pixbuf">
        <return-type type="GdkPixbuf*" />
      </method>
      <method name="GetType" cname="gdk_pixbuf_loader_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gdk_pixbuf_loader_new" />
      <constructor cname="gdk_pixbuf_loader_new_with_mime_type">
        <parameters>
          <parameter type="const-char*" name="mime_type" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <constructor cname="gdk_pixbuf_loader_new_with_type">
        <parameters>
          <parameter type="const-char*" name="image_type" />
          <parameter type="GError**" name="error" />
        </parameters>
      </constructor>
      <method name="SetSize" cname="gdk_pixbuf_loader_set_size">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="width" />
          <parameter type="int" name="height" />
        </parameters>
      </method>
      <method name="Write" cname="gdk_pixbuf_loader_write">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-guchar*" name="buf" />
          <parameter type="gsize" name="count" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
    </object>
    <object name="PixbufSimpleAnim" cname="GdkPixbufSimpleAnim">
      <method name="AddFrame" cname="gdk_pixbuf_simple_anim_add_frame">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixbuf*" name="pixbuf" />
        </parameters>
      </method>
      <method name="GetType" cname="gdk_pixbuf_simple_anim_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="IterGetType" cname="gdk_pixbuf_simple_anim_iter_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gdk_pixbuf_simple_anim_new">
        <parameters>
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="gfloat" name="rate" />
        </parameters>
      </constructor>
    </object>
    <object name="Pixmap" cname="GdkPixmap" parent="GObject">
      <method name="ColormapCreateFromXpm" cname="gdk_pixmap_colormap_create_from_xpm" shared="true">
        <return-type type="GdkPixmap*" />
        <parameters>
          <parameter type="GdkDrawable*" name="drawable" />
          <parameter type="GdkColormap*" name="colormap" />
          <parameter type="GdkBitmap**" name="mask" />
          <parameter type="const-GdkColor*" name="transparent_color" />
          <parameter type="const-gchar*" name="filename" />
        </parameters>
      </method>
      <method name="ColormapCreateFromXpmD" cname="gdk_pixmap_colormap_create_from_xpm_d" shared="true">
        <return-type type="GdkPixmap*" />
        <parameters>
          <parameter type="GdkDrawable*" name="drawable" />
          <parameter type="GdkColormap*" name="colormap" />
          <parameter type="GdkBitmap**" name="mask" />
          <parameter type="const-GdkColor*" name="transparent_color" />
          <parameter type="gchar**" name="data" />
        </parameters>
      </method>
      <method name="CreateFromData" cname="gdk_pixmap_create_from_data" shared="true">
        <return-type type="GdkPixmap*" />
        <parameters>
          <parameter type="GdkDrawable*" name="drawable" />
          <parameter type="const-gchar*" name="data" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="gint" name="depth" />
          <parameter type="const-GdkColor*" name="fg" />
          <parameter type="const-GdkColor*" name="bg" />
        </parameters>
      </method>
      <method name="CreateFromXpm" cname="gdk_pixmap_create_from_xpm" shared="true">
        <return-type type="GdkPixmap*" />
        <parameters>
          <parameter type="GdkDrawable*" name="drawable" />
          <parameter type="GdkBitmap**" name="mask" />
          <parameter type="const-GdkColor*" name="transparent_color" />
          <parameter type="const-gchar*" name="filename" />
        </parameters>
      </method>
      <method name="CreateFromXpmD" cname="gdk_pixmap_create_from_xpm_d" shared="true">
        <return-type type="GdkPixmap*" />
        <parameters>
          <parameter type="GdkDrawable*" name="drawable" />
          <parameter type="GdkBitmap**" name="mask" />
          <parameter type="const-GdkColor*" name="transparent_color" />
          <parameter type="gchar**" name="data" />
        </parameters>
      </method>
      <method name="ForeignNew" cname="gdk_pixmap_foreign_new" shared="true">
        <return-type type="GdkPixmap*" />
        <parameters>
          <parameter type="GdkNativeWindow" name="anid" />
        </parameters>
      </method>
      <method name="ForeignNewForDisplay" cname="gdk_pixmap_foreign_new_for_display" shared="true">
        <return-type type="GdkPixmap*" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="GdkNativeWindow" name="anid" />
        </parameters>
      </method>
      <method name="ForeignNewForScreen" cname="gdk_pixmap_foreign_new_for_screen" shared="true">
        <return-type type="GdkPixmap*" />
        <parameters>
          <parameter type="GdkScreen*" name="screen" />
          <parameter type="GdkNativeWindow" name="anid" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="gint" name="depth" />
        </parameters>
      </method>
      <method name="GetType" cname="gdk_pixmap_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Lookup" cname="gdk_pixmap_lookup" shared="true">
        <return-type type="GdkPixmap*" />
        <parameters>
          <parameter type="GdkNativeWindow" name="anid" />
        </parameters>
      </method>
      <method name="LookupForDisplay" cname="gdk_pixmap_lookup_for_display" shared="true">
        <return-type type="GdkPixmap*" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="GdkNativeWindow" name="anid" />
        </parameters>
      </method>
      <constructor cname="gdk_pixmap_new">
        <parameters>
          <parameter type="GdkDrawable*" name="drawable" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="gint" name="depth" />
        </parameters>
      </constructor>
    </object>
    <object name="Screen" cname="GdkScreen" parent="GObject">
      <field name="Closed" cname="closed" bits="1" type="guint" />
      <field name="NormalGcs" cname="normal_gcs" array_len="32" type="GdkGC*" />
      <field name="ExposureGcs" cname="exposure_gcs" array_len="32" type="GdkGC*" />
      <field name="FontOptions" cname="font_options" type="cairo_font_options_t*" />
      <field name="Resolution" cname="resolution" type="double" />
      <method name="BroadcastClientMessage" cname="gdk_screen_broadcast_client_message">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="GetActiveWindow" cname="gdk_screen_get_active_window">
        <return-type type="GdkWindow*" />
      </method>
      <method name="GetDefault" cname="gdk_screen_get_default" shared="true">
        <return-type type="GdkScreen*" />
      </method>
      <method name="GetDefaultColormap" cname="gdk_screen_get_default_colormap">
        <return-type type="GdkColormap*" />
      </method>
      <method name="GetDisplay" cname="gdk_screen_get_display">
        <return-type type="GdkDisplay*" />
      </method>
      <method name="GetFontOptions" cname="gdk_screen_get_font_options">
        <return-type type="const-cairo_font_options_t*" />
      </method>
      <method name="GetHeight" cname="gdk_screen_get_height">
        <return-type type="gint" />
      </method>
      <method name="GetHeightMm" cname="gdk_screen_get_height_mm">
        <return-type type="gint" />
      </method>
      <method name="GetMonitorAtPoint" cname="gdk_screen_get_monitor_at_point">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="GetMonitorAtWindow" cname="gdk_screen_get_monitor_at_window">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
        </parameters>
      </method>
      <method name="GetMonitorGeometry" cname="gdk_screen_get_monitor_geometry">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="monitor_num" />
          <parameter type="GdkRectangle*" name="dest" />
        </parameters>
      </method>
      <method name="GetNMonitors" cname="gdk_screen_get_n_monitors">
        <return-type type="gint" />
      </method>
      <method name="GetNumber" cname="gdk_screen_get_number">
        <return-type type="gint" />
      </method>
      <method name="GetResolution" cname="gdk_screen_get_resolution">
        <return-type type="gdouble" />
      </method>
      <method name="GetRgbColormap" cname="gdk_screen_get_rgb_colormap">
        <return-type type="GdkColormap*" />
      </method>
      <method name="GetRgbVisual" cname="gdk_screen_get_rgb_visual">
        <return-type type="GdkVisual*" />
      </method>
      <method name="GetRgbaColormap" cname="gdk_screen_get_rgba_colormap">
        <return-type type="GdkColormap*" />
      </method>
      <method name="GetRgbaVisual" cname="gdk_screen_get_rgba_visual">
        <return-type type="GdkVisual*" />
      </method>
      <method name="GetRootWindow" cname="gdk_screen_get_root_window">
        <return-type type="GdkWindow*" />
      </method>
      <method name="GetSetting" cname="gdk_screen_get_setting">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="GValue*" name="value" />
        </parameters>
      </method>
      <method name="GetSystemColormap" cname="gdk_screen_get_system_colormap">
        <return-type type="GdkColormap*" />
      </method>
      <method name="GetSystemVisual" cname="gdk_screen_get_system_visual">
        <return-type type="GdkVisual*" />
      </method>
      <method name="GetToplevelWindows" cname="gdk_screen_get_toplevel_windows">
        <return-type type="GList*" />
      </method>
      <method name="GetType" cname="gdk_screen_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetWidth" cname="gdk_screen_get_width">
        <return-type type="gint" />
      </method>
      <method name="GetWidthMm" cname="gdk_screen_get_width_mm">
        <return-type type="gint" />
      </method>
      <method name="GetWindowStack" cname="gdk_screen_get_window_stack">
        <return-type type="GList*" />
      </method>
      <method name="Height" cname="gdk_screen_height" shared="true">
        <return-type type="gint" />
      </method>
      <method name="HeightMm" cname="gdk_screen_height_mm" shared="true">
        <return-type type="gint" />
      </method>
      <method name="IsComposited" cname="gdk_screen_is_composited">
        <return-type type="gboolean" />
      </method>
      <method name="ListVisuals" cname="gdk_screen_list_visuals">
        <return-type type="GList*" />
      </method>
      <method name="MakeDisplayName" cname="gdk_screen_make_display_name">
        <return-type type="gchar*" />
      </method>
      <method name="SetDefaultColormap" cname="gdk_screen_set_default_colormap">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkColormap*" name="colormap" />
        </parameters>
      </method>
      <method name="SetFontOptions" cname="gdk_screen_set_font_options">
        <return-type type="void" />
        <parameters>
          <parameter type="const-cairo_font_options_t*" name="options" />
        </parameters>
      </method>
      <method name="SetResolution" cname="gdk_screen_set_resolution">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="dpi" />
        </parameters>
      </method>
      <method name="Width" cname="gdk_screen_width" shared="true">
        <return-type type="gint" />
      </method>
      <method name="WidthMm" cname="gdk_screen_width_mm" shared="true">
        <return-type type="gint" />
      </method>
    </object>
    <object name="Visual" cname="GdkVisual" parent="GObject">
      <field name="Type" cname="type" type="GdkVisualType" />
      <field name="Depth" cname="depth" type="gint" />
      <field name="ByteOrder" cname="byte_order" type="GdkByteOrder" />
      <field name="ColormapSize" cname="colormap_size" type="gint" />
      <field name="BitsPerRgb" cname="bits_per_rgb" type="gint" />
      <field name="RedMask" cname="red_mask" type="guint32" />
      <field name="RedShift" cname="red_shift" type="gint" />
      <field name="RedPrec" cname="red_prec" type="gint" />
      <field name="GreenMask" cname="green_mask" type="guint32" />
      <field name="GreenShift" cname="green_shift" type="gint" />
      <field name="GreenPrec" cname="green_prec" type="gint" />
      <field name="BlueMask" cname="blue_mask" type="guint32" />
      <field name="BlueShift" cname="blue_shift" type="gint" />
      <field name="BluePrec" cname="blue_prec" type="gint" />
      <method name="GetBest" cname="gdk_visual_get_best" shared="true">
        <return-type type="GdkVisual*" />
      </method>
      <method name="GetBestDepth" cname="gdk_visual_get_best_depth" shared="true">
        <return-type type="gint" />
      </method>
      <method name="GetBestType" cname="gdk_visual_get_best_type" shared="true">
        <return-type type="GdkVisualType" />
      </method>
      <method name="GetBestWithBoth" cname="gdk_visual_get_best_with_both" shared="true">
        <return-type type="GdkVisual*" />
        <parameters>
          <parameter type="gint" name="depth" />
          <parameter type="GdkVisualType" name="visual_type" />
        </parameters>
      </method>
      <method name="GetBestWithDepth" cname="gdk_visual_get_best_with_depth" shared="true">
        <return-type type="GdkVisual*" />
        <parameters>
          <parameter type="gint" name="depth" />
        </parameters>
      </method>
      <method name="GetBestWithType" cname="gdk_visual_get_best_with_type" shared="true">
        <return-type type="GdkVisual*" />
        <parameters>
          <parameter type="GdkVisualType" name="visual_type" />
        </parameters>
      </method>
      <method name="GetScreen" cname="gdk_visual_get_screen">
        <return-type type="GdkScreen*" />
      </method>
      <method name="GetSystem" cname="gdk_visual_get_system" shared="true">
        <return-type type="GdkVisual*" />
      </method>
      <method name="GetType" cname="gdk_visual_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <object name="Window" cname="GdkWindow" parent="GObject">
      <method name="AddFilter" cname="gdk_window_add_filter">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkFilterFunc" name="function" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="AtPointer" cname="gdk_window_at_pointer" shared="true">
        <return-type type="GdkWindow*" />
        <parameters>
          <parameter type="gint*" name="win_x" />
          <parameter type="gint*" name="win_y" />
        </parameters>
      </method>
      <method name="BeginMoveDrag" cname="gdk_window_begin_move_drag">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="button" />
          <parameter type="gint" name="root_x" />
          <parameter type="gint" name="root_y" />
          <parameter type="guint32" name="timestamp" />
        </parameters>
      </method>
      <method name="BeginPaintRect" cname="gdk_window_begin_paint_rect">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRectangle*" name="rectangle" />
        </parameters>
      </method>
      <method name="BeginPaintRegion" cname="gdk_window_begin_paint_region">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRegion*" name="region" />
        </parameters>
      </method>
      <method name="BeginResizeDrag" cname="gdk_window_begin_resize_drag">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindowEdge" name="edge" />
          <parameter type="gint" name="button" />
          <parameter type="gint" name="root_x" />
          <parameter type="gint" name="root_y" />
          <parameter type="guint32" name="timestamp" />
        </parameters>
      </method>
      <method name="Clear" cname="gdk_window_clear">
        <return-type type="void" />
      </method>
      <method name="ClearArea" cname="gdk_window_clear_area">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="ClearAreaE" cname="gdk_window_clear_area_e">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="ConfigureFinished" cname="gdk_window_configure_finished">
        <return-type type="void" />
      </method>
      <method name="ConstrainSize" cname="gdk_window_constrain_size" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGeometry*" name="geometry" />
          <parameter type="guint" name="flags" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="gint*" name="new_width" />
          <parameter type="gint*" name="new_height" />
        </parameters>
      </method>
      <method name="Deiconify" cname="gdk_window_deiconify">
        <return-type type="void" />
      </method>
      <method name="Destroy" cname="gdk_window_destroy">
        <return-type type="void" />
      </method>
      <method name="EnableSynchronizedConfigure" cname="gdk_window_enable_synchronized_configure">
        <return-type type="void" />
      </method>
      <method name="EndPaint" cname="gdk_window_end_paint">
        <return-type type="void" />
      </method>
      <method name="Focus" cname="gdk_window_focus">
        <return-type type="void" />
        <parameters>
          <parameter type="guint32" name="timestamp" />
        </parameters>
      </method>
      <method name="ForeignNew" cname="gdk_window_foreign_new" shared="true">
        <return-type type="GdkWindow*" />
        <parameters>
          <parameter type="GdkNativeWindow" name="anid" />
        </parameters>
      </method>
      <method name="ForeignNewForDisplay" cname="gdk_window_foreign_new_for_display" shared="true">
        <return-type type="GdkWindow*" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="GdkNativeWindow" name="anid" />
        </parameters>
      </method>
      <method name="FreezeUpdates" cname="gdk_window_freeze_updates">
        <return-type type="void" />
      </method>
      <method name="Fullscreen" cname="gdk_window_fullscreen">
        <return-type type="void" />
      </method>
      <method name="GetChildren" cname="gdk_window_get_children">
        <return-type type="GList*" />
      </method>
      <method name="GetDecorations" cname="gdk_window_get_decorations">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkWMDecoration*" name="decorations" />
        </parameters>
      </method>
      <method name="GetDeskrelativeOrigin" cname="gdk_window_get_deskrelative_origin" deprecated="1">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
        </parameters>
      </method>
      <method name="GetEvents" cname="gdk_window_get_events">
        <return-type type="GdkEventMask" />
      </method>
      <method name="GetFrameExtents" cname="gdk_window_get_frame_extents">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRectangle*" name="rect" />
        </parameters>
      </method>
      <method name="GetGeometry" cname="gdk_window_get_geometry">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="height" />
          <parameter type="gint*" name="depth" />
        </parameters>
      </method>
      <method name="GetGroup" cname="gdk_window_get_group">
        <return-type type="GdkWindow*" />
      </method>
      <method name="GetInternalPaintInfo" cname="gdk_window_get_internal_paint_info">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDrawable**" name="real_drawable" />
          <parameter type="gint*" name="x_offset" />
          <parameter type="gint*" name="y_offset" />
        </parameters>
      </method>
      <method name="GetOrigin" cname="gdk_window_get_origin">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
        </parameters>
      </method>
      <method name="GetParent" cname="gdk_window_get_parent">
        <return-type type="GdkWindow*" />
      </method>
      <method name="GetPointer" cname="gdk_window_get_pointer">
        <return-type type="GdkWindow*" />
        <parameters>
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
          <parameter type="GdkModifierType*" name="mask" />
        </parameters>
      </method>
      <method name="GetPosition" cname="gdk_window_get_position">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
        </parameters>
      </method>
      <method name="GetRootOrigin" cname="gdk_window_get_root_origin">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
        </parameters>
      </method>
      <method name="GetState" cname="gdk_window_get_state">
        <return-type type="GdkWindowState" />
      </method>
      <method name="GetToplevel" cname="gdk_window_get_toplevel">
        <return-type type="GdkWindow*" />
      </method>
      <method name="GetToplevels" cname="gdk_window_get_toplevels" shared="true">
        <return-type type="GList*" />
      </method>
      <method name="GetTypeHint" cname="gdk_window_get_type_hint">
        <return-type type="GdkWindowTypeHint" />
      </method>
      <method name="GetUpdateArea" cname="gdk_window_get_update_area">
        <return-type type="GdkRegion*" />
      </method>
      <method name="GetUserData" cname="gdk_window_get_user_data">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer*" name="data" />
        </parameters>
      </method>
      <method name="GetWindowType" cname="gdk_window_get_window_type">
        <return-type type="GdkWindowType" />
      </method>
      <method name="Hide" cname="gdk_window_hide">
        <return-type type="void" />
      </method>
      <method name="Iconify" cname="gdk_window_iconify">
        <return-type type="void" />
      </method>
      <method name="InputShapeCombineMask" cname="gdk_window_input_shape_combine_mask">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkBitmap*" name="mask" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="InputShapeCombineRegion" cname="gdk_window_input_shape_combine_region">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRegion*" name="shape_region" />
          <parameter type="gint" name="offset_x" />
          <parameter type="gint" name="offset_y" />
        </parameters>
      </method>
      <method name="InvalidateMaybeRecurse" cname="gdk_window_invalidate_maybe_recurse">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRegion*" name="region" />
          <parameter type="InvalidateMaybeRecurseChildFunc" name="child_func" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="InvalidateRect" cname="gdk_window_invalidate_rect">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRectangle*" name="rect" />
          <parameter type="gboolean" name="invalidate_children" />
        </parameters>
      </method>
      <method name="InvalidateRegion" cname="gdk_window_invalidate_region">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRegion*" name="region" />
          <parameter type="gboolean" name="invalidate_children" />
        </parameters>
      </method>
      <method name="IsViewable" cname="gdk_window_is_viewable">
        <return-type type="gboolean" />
      </method>
      <method name="IsVisible" cname="gdk_window_is_visible">
        <return-type type="gboolean" />
      </method>
      <method name="Lookup" cname="gdk_window_lookup" shared="true">
        <return-type type="GdkWindow*" />
        <parameters>
          <parameter type="GdkNativeWindow" name="anid" />
        </parameters>
      </method>
      <method name="LookupForDisplay" cname="gdk_window_lookup_for_display" shared="true">
        <return-type type="GdkWindow*" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="GdkNativeWindow" name="anid" />
        </parameters>
      </method>
      <method name="Lower" cname="gdk_window_lower">
        <return-type type="void" />
      </method>
      <method name="Maximize" cname="gdk_window_maximize">
        <return-type type="void" />
      </method>
      <method name="MergeChildInputShapes" cname="gdk_window_merge_child_input_shapes">
        <return-type type="void" />
      </method>
      <method name="MergeChildShapes" cname="gdk_window_merge_child_shapes">
        <return-type type="void" />
      </method>
      <method name="Move" cname="gdk_window_move">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="MoveRegion" cname="gdk_window_move_region">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRegion*" name="region" />
          <parameter type="gint" name="dx" />
          <parameter type="gint" name="dy" />
        </parameters>
      </method>
      <method name="MoveResize" cname="gdk_window_move_resize">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <constructor cname="gdk_window_new">
        <parameters>
          <parameter type="GdkWindow*" name="parent" />
          <parameter type="GdkWindowAttr*" name="attributes" />
          <parameter type="gint" name="attributes_mask" />
        </parameters>
      </constructor>
      <method name="PeekChildren" cname="gdk_window_peek_children">
        <return-type type="GList*" />
      </method>
      <method name="ProcessAllUpdates" cname="gdk_window_process_all_updates" shared="true">
        <return-type type="void" />
      </method>
      <method name="ProcessUpdates" cname="gdk_window_process_updates">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="update_children" />
        </parameters>
      </method>
      <method name="Raise" cname="gdk_window_raise">
        <return-type type="void" />
      </method>
      <method name="RegisterDnd" cname="gdk_window_register_dnd">
        <return-type type="void" />
      </method>
      <method name="RemoveFilter" cname="gdk_window_remove_filter">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkFilterFunc" name="function" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="Reparent" cname="gdk_window_reparent">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="new_parent" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="Resize" cname="gdk_window_resize">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="Scroll" cname="gdk_window_scroll">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="dx" />
          <parameter type="gint" name="dy" />
        </parameters>
      </method>
      <method name="SetAcceptFocus" cname="gdk_window_set_accept_focus">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="accept_focus" />
        </parameters>
      </method>
      <method name="SetBackPixmap" cname="gdk_window_set_back_pixmap">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixmap*" name="pixmap" />
          <parameter type="gboolean" name="parent_relative" />
        </parameters>
      </method>
      <method name="SetBackground" cname="gdk_window_set_background">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="SetChildInputShapes" cname="gdk_window_set_child_input_shapes">
        <return-type type="void" />
      </method>
      <method name="SetChildShapes" cname="gdk_window_set_child_shapes">
        <return-type type="void" />
      </method>
      <method name="SetCursor" cname="gdk_window_set_cursor">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkCursor*" name="cursor" />
        </parameters>
      </method>
      <method name="SetDebugUpdates" cname="gdk_window_set_debug_updates" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetDecorations" cname="gdk_window_set_decorations">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWMDecoration" name="decorations" />
        </parameters>
      </method>
      <method name="SetEvents" cname="gdk_window_set_events">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkEventMask" name="event_mask" />
        </parameters>
      </method>
      <method name="SetFocusOnMap" cname="gdk_window_set_focus_on_map">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="focus_on_map" />
        </parameters>
      </method>
      <method name="SetFunctions" cname="gdk_window_set_functions">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWMFunction" name="functions" />
        </parameters>
      </method>
      <method name="SetGeometryHints" cname="gdk_window_set_geometry_hints">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGeometry*" name="geometry" />
          <parameter type="GdkWindowHints" name="geom_mask" />
        </parameters>
      </method>
      <method name="SetGroup" cname="gdk_window_set_group">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="leader" />
        </parameters>
      </method>
      <method name="SetHints" cname="gdk_window_set_hints" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="min_width" />
          <parameter type="gint" name="min_height" />
          <parameter type="gint" name="max_width" />
          <parameter type="gint" name="max_height" />
          <parameter type="gint" name="flags" />
        </parameters>
      </method>
      <method name="SetIcon" cname="gdk_window_set_icon">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="icon_window" />
          <parameter type="GdkPixmap*" name="pixmap" />
          <parameter type="GdkBitmap*" name="mask" />
        </parameters>
      </method>
      <method name="SetIconList" cname="gdk_window_set_icon_list">
        <return-type type="void" />
        <parameters>
          <parameter type="GList*" name="pixbufs" />
        </parameters>
      </method>
      <method name="SetIconName" cname="gdk_window_set_icon_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="SetKeepAbove" cname="gdk_window_set_keep_above">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetKeepBelow" cname="gdk_window_set_keep_below">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetModalHint" cname="gdk_window_set_modal_hint">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="modal" />
        </parameters>
      </method>
      <method name="SetOverrideRedirect" cname="gdk_window_set_override_redirect">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="override_redirect" />
        </parameters>
      </method>
      <method name="SetRole" cname="gdk_window_set_role">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="role" />
        </parameters>
      </method>
      <method name="SetSkipPagerHint" cname="gdk_window_set_skip_pager_hint">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="skips_pager" />
        </parameters>
      </method>
      <method name="SetSkipTaskbarHint" cname="gdk_window_set_skip_taskbar_hint">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="skips_taskbar" />
        </parameters>
      </method>
      <method name="SetStaticGravities" cname="gdk_window_set_static_gravities">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gboolean" name="use_static" />
        </parameters>
      </method>
      <method name="SetTitle" cname="gdk_window_set_title">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="title" />
        </parameters>
      </method>
      <method name="SetTransientFor" cname="gdk_window_set_transient_for">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="parent" />
        </parameters>
      </method>
      <method name="SetTypeHint" cname="gdk_window_set_type_hint">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindowTypeHint" name="hint" />
        </parameters>
      </method>
      <method name="SetUrgencyHint" cname="gdk_window_set_urgency_hint">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="urgent" />
        </parameters>
      </method>
      <method name="SetUserData" cname="gdk_window_set_user_data">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="ShapeCombineMask" cname="gdk_window_shape_combine_mask">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkBitmap*" name="mask" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="ShapeCombineRegion" cname="gdk_window_shape_combine_region">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRegion*" name="shape_region" />
          <parameter type="gint" name="offset_x" />
          <parameter type="gint" name="offset_y" />
        </parameters>
      </method>
      <method name="Show" cname="gdk_window_show">
        <return-type type="void" />
      </method>
      <method name="ShowUnraised" cname="gdk_window_show_unraised">
        <return-type type="void" />
      </method>
      <method name="Stick" cname="gdk_window_stick">
        <return-type type="void" />
      </method>
      <method name="ThawUpdates" cname="gdk_window_thaw_updates">
        <return-type type="void" />
      </method>
      <method name="Unfullscreen" cname="gdk_window_unfullscreen">
        <return-type type="void" />
      </method>
      <method name="Unmaximize" cname="gdk_window_unmaximize">
        <return-type type="void" />
      </method>
      <method name="Unstick" cname="gdk_window_unstick">
        <return-type type="void" />
      </method>
      <method name="Withdraw" cname="gdk_window_withdraw">
        <return-type type="void" />
      </method>
    </object>
    <object name="Bitmap" cname="GdkBitmap">
      <field name="ParentInstance" cname="parent_instance" type="GObject" />
      <method name="CreateFromData" cname="gdk_bitmap_create_from_data" shared="true">
        <return-type type="GdkBitmap*" />
        <parameters>
          <parameter type="GdkDrawable*" name="drawable" />
          <parameter type="const-gchar*" name="data" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
    </object>
    <struct name="Color" cname="GdkColor">
      <field name="Pixel" cname="pixel" type="guint32" />
      <field name="Red" cname="red" type="guint16" />
      <field name="Green" cname="green" type="guint16" />
      <field name="Blue" cname="blue" type="guint16" />
      <method name="Alloc" cname="gdk_color_alloc" deprecated="1" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdkColormap*" name="colormap" />
          <parameter type="GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="Black" cname="gdk_color_black" deprecated="1" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdkColormap*" name="colormap" />
          <parameter type="GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="Change" cname="gdk_color_change" deprecated="1" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdkColormap*" name="colormap" />
          <parameter type="GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="Copy" cname="gdk_color_copy">
        <return-type type="GdkColor*" owned="true" />
      </method>
      <method name="Equal" cname="gdk_color_equal">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GdkColor*" name="colorb" />
        </parameters>
      </method>
      <method name="Free" cname="gdk_color_free">
        <return-type type="void" />
      </method>
      <method name="GetType" cname="gdk_color_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Hash" cname="gdk_color_hash">
        <return-type type="guint" />
      </method>
      <method name="Parse" cname="gdk_color_parse" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="spec" />
          <parameter type="GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="White" cname="gdk_color_white" deprecated="1" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdkColormap*" name="colormap" />
          <parameter type="GdkColor*" name="color" />
        </parameters>
      </method>
    </struct>
    <struct name="Cursor" cname="GdkCursor" opaque="true">
      <field name="Type" cname="type" type="GdkCursorType" access="public" writeable="true" />
      <field name="RefCount" cname="ref_count" type="guint" access="private" />
      <method name="GetDisplay" cname="gdk_cursor_get_display">
        <return-type type="GdkDisplay*" />
      </method>
      <method name="GetImage" cname="gdk_cursor_get_image">
        <return-type type="GdkPixbuf*" />
      </method>
      <method name="GetType" cname="gdk_cursor_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gdk_cursor_new">
        <parameters>
          <parameter type="GdkCursorType" name="cursor_type" />
        </parameters>
      </constructor>
      <constructor cname="gdk_cursor_new_for_display">
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="GdkCursorType" name="cursor_type" />
        </parameters>
      </constructor>
      <constructor cname="gdk_cursor_new_from_name">
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </constructor>
      <constructor cname="gdk_cursor_new_from_pixbuf">
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="GdkPixbuf*" name="pixbuf" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </constructor>
      <constructor cname="gdk_cursor_new_from_pixmap">
        <parameters>
          <parameter type="GdkPixmap*" name="source" />
          <parameter type="GdkPixmap*" name="mask" />
          <parameter type="const-GdkColor*" name="fg" />
          <parameter type="const-GdkColor*" name="bg" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </constructor>
      <method name="Ref" cname="gdk_cursor_ref">
        <return-type type="GdkCursor*" />
      </method>
      <method name="Unref" cname="gdk_cursor_unref">
        <return-type type="void" />
      </method>
    </struct>
    <struct name="DeviceAxis" cname="GdkDeviceAxis">
      <field name="Use" cname="use" type="GdkAxisUse" />
      <field name="Min" cname="min" type="gdouble" />
      <field name="Max" cname="max" type="gdouble" />
    </struct>
    <struct name="DeviceKey" cname="GdkDeviceKey">
      <field name="Keyval" cname="keyval" type="guint" />
      <field name="Modifiers" cname="modifiers" type="GdkModifierType" />
    </struct>
    <struct name="DisplayPointerHooks" cname="GdkDisplayPointerHooks">
      <callback cname="get_pointer">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDisplay*" name="display,GdkScreen**" />
        </parameters>
      </callback>
      <callback cname="window_get_pointer">
        <return-type type="GdkWindow*" />
        <parameters>
          <parameter type="GdkDisplay*" name="display,GdkWindow*" />
        </parameters>
      </callback>
      <callback cname="window_at_pointer">
        <return-type type="GdkWindow*" />
        <parameters>
          <parameter type="GdkDisplay*" name="display,gint*" />
        </parameters>
      </callback>
    </struct>
    <struct name="EventAny" cname="GdkEventAny">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
    </struct>
    <struct name="EventButton" cname="GdkEventButton">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="Time" cname="time" type="guint32" />
      <field name="X" cname="x" type="gdouble" />
      <field name="Y" cname="y" type="gdouble" />
      <field name="Axes" cname="axes" type="gdouble*" />
      <field name="State" cname="state" type="guint" />
      <field name="Button" cname="button" type="guint" />
      <field name="Device" cname="device" type="GdkDevice*" />
      <field name="XRoot" cname="x_root" type="gdouble" />
      <field name="YRoot" cname="y_root" type="gdouble" />
    </struct>
    <struct name="EventClient" cname="GdkEventClient">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="MessageType" cname="message_type" type="GdkAtom" />
      <field name="DataFormat" cname="data_format" type="gushort" />
      <field name="B" cname="b" array_len="20" type="char" />
    </struct>
    <struct name="EventConfigure" cname="GdkEventConfigure">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="X" cname="x" type="gint" />
      <field name="Y" cname="y" type="gint" />
      <field name="Width" cname="width" type="gint" />
      <field name="Height" cname="height" type="gint" />
    </struct>
    <struct name="EventCrossing" cname="GdkEventCrossing">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="Subwindow" cname="subwindow" type="GdkWindow*" />
      <field name="Time" cname="time" type="guint32" />
      <field name="X" cname="x" type="gdouble" />
      <field name="Y" cname="y" type="gdouble" />
      <field name="XRoot" cname="x_root" type="gdouble" />
      <field name="YRoot" cname="y_root" type="gdouble" />
      <field name="Mode" cname="mode" type="GdkCrossingMode" />
      <field name="Detail" cname="detail" type="GdkNotifyType" />
      <field name="Focus" cname="focus" type="gboolean" />
      <field name="State" cname="state" type="guint" />
    </struct>
    <struct name="EventDND" cname="GdkEventDND">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="Context" cname="context" type="GdkDragContext*" />
      <field name="Time" cname="time" type="guint32" />
      <field name="XRoot" cname="x_root" type="gshort" />
      <field name="YRoot" cname="y_root" type="gshort" />
    </struct>
    <struct name="EventExpose" cname="GdkEventExpose">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="Area" cname="area" type="GdkRectangle" />
      <field name="Region" cname="region" type="GdkRegion*" />
      <field name="Count" cname="count" type="gint" />
    </struct>
    <struct name="EventFocus" cname="GdkEventFocus">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="In" cname="in" type="gint16" />
    </struct>
    <struct name="EventGrabBroken" cname="GdkEventGrabBroken">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="Keyboard" cname="keyboard" type="gboolean" />
      <field name="Implicit" cname="implicit" type="gboolean" />
      <field name="GrabWindow" cname="grab_window" type="GdkWindow*" />
    </struct>
    <struct name="EventKey" cname="GdkEventKey">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="Time" cname="time" type="guint32" />
      <field name="State" cname="state" type="guint" />
      <field name="Keyval" cname="keyval" type="guint" />
      <field name="Length" cname="length" type="gint" />
      <field name="String" cname="string" type="gchar*" />
      <field name="HardwareKeycode" cname="hardware_keycode" type="guint16" />
      <field name="Group" cname="group" type="guint8" />
      <field name="IsModifier" cname="is_modifier" bits="1" type="guint" />
    </struct>
    <struct name="EventMotion" cname="GdkEventMotion">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="Time" cname="time" type="guint32" />
      <field name="X" cname="x" type="gdouble" />
      <field name="Y" cname="y" type="gdouble" />
      <field name="Axes" cname="axes" type="gdouble*" />
      <field name="State" cname="state" type="guint" />
      <field name="IsHint" cname="is_hint" type="gint16" />
      <field name="Device" cname="device" type="GdkDevice*" />
      <field name="XRoot" cname="x_root" type="gdouble" />
      <field name="YRoot" cname="y_root" type="gdouble" />
    </struct>
    <struct name="EventNoExpose" cname="GdkEventNoExpose">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
    </struct>
    <struct name="EventOwnerChange" cname="GdkEventOwnerChange">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="Owner" cname="owner" type="GdkNativeWindow" />
      <field name="Reason" cname="reason" type="GdkOwnerChange" />
      <field name="Selection" cname="selection" type="GdkAtom" />
      <field name="Time" cname="time" type="guint32" />
      <field name="SelectionTime" cname="selection_time" type="guint32" />
    </struct>
    <struct name="EventProperty" cname="GdkEventProperty">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="Atom" cname="atom" type="GdkAtom" />
      <field name="Time" cname="time" type="guint32" />
      <field name="State" cname="state" type="guint" />
    </struct>
    <struct name="EventProximity" cname="GdkEventProximity">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="Time" cname="time" type="guint32" />
      <field name="Device" cname="device" type="GdkDevice*" />
    </struct>
    <struct name="EventScroll" cname="GdkEventScroll">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="Time" cname="time" type="guint32" />
      <field name="X" cname="x" type="gdouble" />
      <field name="Y" cname="y" type="gdouble" />
      <field name="State" cname="state" type="guint" />
      <field name="Direction" cname="direction" type="GdkScrollDirection" />
      <field name="Device" cname="device" type="GdkDevice*" />
      <field name="XRoot" cname="x_root" type="gdouble" />
      <field name="YRoot" cname="y_root" type="gdouble" />
    </struct>
    <struct name="EventSelection" cname="GdkEventSelection">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="Selection" cname="selection" type="GdkAtom" />
      <field name="Target" cname="target" type="GdkAtom" />
      <field name="Property" cname="property" type="GdkAtom" />
      <field name="Time" cname="time" type="guint32" />
      <field name="Requestor" cname="requestor" type="GdkNativeWindow" />
    </struct>
    <struct name="EventSetting" cname="GdkEventSetting">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="Action" cname="action" type="GdkSettingAction" />
      <field name="Name" cname="name" type="char*" />
    </struct>
    <struct name="EventVisibility" cname="GdkEventVisibility">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="State" cname="state" type="GdkVisibilityState" />
    </struct>
    <struct name="EventWindowState" cname="GdkEventWindowState">
      <field name="Type" cname="type" type="GdkEventType" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="SendEvent" cname="send_event" type="gint8" />
      <field name="ChangedMask" cname="changed_mask" type="GdkWindowState" />
      <field name="NewWindowState" cname="new_window_state" type="GdkWindowState" />
    </struct>
    <struct name="Font" cname="GdkFont" deprecated="1" opaque="true">
      <field name="Type" cname="type" type="GdkFontType" access="public" writeable="true" />
      <field name="Ascent" cname="ascent" type="gint" access="public" writeable="true" />
      <field name="Descent" cname="descent" type="gint" access="public" writeable="true" />
      <method name="Equal" cname="gdk_font_equal" deprecated="1">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GdkFont*" name="fontb" />
        </parameters>
      </method>
      <method name="FromDescription" cname="gdk_font_from_description" deprecated="1" shared="true">
        <return-type type="GdkFont*" />
        <parameters>
          <parameter type="PangoFontDescription*" name="font_desc" />
        </parameters>
      </method>
      <method name="FromDescriptionForDisplay" cname="gdk_font_from_description_for_display" deprecated="1" shared="true">
        <return-type type="GdkFont*" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="PangoFontDescription*" name="font_desc" />
        </parameters>
      </method>
      <method name="GetDisplay" cname="gdk_font_get_display" deprecated="1">
        <return-type type="GdkDisplay*" />
      </method>
      <method name="GetType" cname="gdk_font_get_type" deprecated="1" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Id" cname="gdk_font_id" deprecated="1">
        <return-type type="gint" />
      </method>
      <method name="Load" cname="gdk_font_load" deprecated="1" shared="true">
        <return-type type="GdkFont*" />
        <parameters>
          <parameter type="const-gchar*" name="font_name" />
        </parameters>
      </method>
      <method name="LoadForDisplay" cname="gdk_font_load_for_display" deprecated="1" shared="true">
        <return-type type="GdkFont*" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="const-gchar*" name="font_name" />
        </parameters>
      </method>
      <method name="Ref" cname="gdk_font_ref" deprecated="1">
        <return-type type="GdkFont*" />
      </method>
      <method name="Unref" cname="gdk_font_unref" deprecated="1">
        <return-type type="void" />
      </method>
    </struct>
    <struct name="GCValues" cname="GdkGCValues">
      <field name="Foreground" cname="foreground" type="GdkColor" />
      <field name="Background" cname="background" type="GdkColor" />
      <field name="Font" cname="font" type="GdkFont*" />
      <field name="Function" cname="function" type="GdkFunction" />
      <field name="Fill" cname="fill" type="GdkFill" />
      <field name="Tile" cname="tile" type="GdkPixmap*" />
      <field name="Stipple" cname="stipple" type="GdkPixmap*" />
      <field name="ClipMask" cname="clip_mask" type="GdkPixmap*" />
      <field name="SubwindowMode" cname="subwindow_mode" type="GdkSubwindowMode" />
      <field name="TsXOrigin" cname="ts_x_origin" type="gint" />
      <field name="TsYOrigin" cname="ts_y_origin" type="gint" />
      <field name="ClipXOrigin" cname="clip_x_origin" type="gint" />
      <field name="ClipYOrigin" cname="clip_y_origin" type="gint" />
      <field name="GraphicsExposures" cname="graphics_exposures" type="gint" />
      <field name="LineWidth" cname="line_width" type="gint" />
      <field name="LineStyle" cname="line_style" type="GdkLineStyle" />
      <field name="CapStyle" cname="cap_style" type="GdkCapStyle" />
      <field name="JoinStyle" cname="join_style" type="GdkJoinStyle" />
    </struct>
    <struct name="Geometry" cname="GdkGeometry">
      <field name="MinWidth" cname="min_width" type="gint" />
      <field name="MinHeight" cname="min_height" type="gint" />
      <field name="MaxWidth" cname="max_width" type="gint" />
      <field name="MaxHeight" cname="max_height" type="gint" />
      <field name="BaseWidth" cname="base_width" type="gint" />
      <field name="BaseHeight" cname="base_height" type="gint" />
      <field name="WidthInc" cname="width_inc" type="gint" />
      <field name="HeightInc" cname="height_inc" type="gint" />
      <field name="MinAspect" cname="min_aspect" type="gdouble" />
      <field name="MaxAspect" cname="max_aspect" type="gdouble" />
      <field name="WinGravity" cname="win_gravity" type="GdkGravity" />
    </struct>
    <struct name="KeymapKey" cname="GdkKeymapKey">
      <field name="Keycode" cname="keycode" type="guint" />
      <field name="Group" cname="group" type="gint" />
      <field name="Level" cname="level" type="gint" />
    </struct>
    <alias name="NativeWindow" cname="GdkNativeWindow" type="guint32" />
    <struct name="PangoAttrEmbossed" cname="GdkPangoAttrEmbossed" opaque="true">
      <field name="Attr" cname="attr" type="PangoAttribute" access="public" writeable="true" />
      <field name="Embossed" cname="embossed" type="gboolean" access="public" writeable="true" />
      <constructor cname="gdk_pango_attr_embossed_new">
        <parameters>
          <parameter type="gboolean" name="embossed" />
        </parameters>
      </constructor>
    </struct>
    <struct name="PangoAttrStipple" cname="GdkPangoAttrStipple" opaque="true">
      <field name="Attr" cname="attr" type="PangoAttribute" access="public" writeable="true" />
      <field name="Stipple" cname="stipple" type="GdkBitmap*" access="public" writeable="true" />
      <constructor cname="gdk_pango_attr_stipple_new">
        <parameters>
          <parameter type="GdkBitmap*" name="stipple" />
        </parameters>
      </constructor>
    </struct>
    <struct name="PixbufFormat" cname="GdkPixbufFormat" opaque="true">
      <method name="GetDescription" cname="gdk_pixbuf_format_get_description">
        <return-type type="gchar*" />
      </method>
      <method name="GetExtensions" cname="gdk_pixbuf_format_get_extensions">
        <return-type type="gchar**" />
      </method>
      <method name="GetLicense" cname="gdk_pixbuf_format_get_license">
        <return-type type="gchar*" />
      </method>
      <method name="GetMimeTypes" cname="gdk_pixbuf_format_get_mime_types">
        <return-type type="gchar**" />
      </method>
      <method name="GetName" cname="gdk_pixbuf_format_get_name">
        <return-type type="gchar*" />
      </method>
      <method name="IsDisabled" cname="gdk_pixbuf_format_is_disabled">
        <return-type type="gboolean" />
      </method>
      <method name="IsScalable" cname="gdk_pixbuf_format_is_scalable">
        <return-type type="gboolean" />
      </method>
      <method name="IsWritable" cname="gdk_pixbuf_format_is_writable">
        <return-type type="gboolean" />
      </method>
      <method name="SetDisabled" cname="gdk_pixbuf_format_set_disabled">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="disabled" />
        </parameters>
      </method>
    </struct>
    <struct name="Pixdata" cname="GdkPixdata">
      <field name="Magic" cname="magic" type="guint32" />
      <field name="Length" cname="length" type="gint32" />
      <field name="PixdataType" cname="pixdata_type" type="guint32" />
      <field name="Rowstride" cname="rowstride" type="guint32" />
      <field name="Width" cname="width" type="guint32" />
      <field name="Height" cname="height" type="guint32" />
      <field name="PixelData" cname="pixel_data" type="guint8*" />
      <method name="Deserialize" cname="gdk_pixdata_deserialize">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="stream_length" />
          <parameter type="const-guint8*" name="stream" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="FromPixbuf" cname="gdk_pixdata_from_pixbuf">
        <return-type type="gpointer" />
        <parameters>
          <parameter type="const-GdkPixbuf*" name="pixbuf" />
          <parameter type="gboolean" name="use_rle" />
        </parameters>
      </method>
      <method name="Serialize" cname="gdk_pixdata_serialize">
        <return-type type="guint8*" />
        <parameters>
          <parameter type="guint*" name="stream_length_p" />
        </parameters>
      </method>
      <method name="ToCsource" cname="gdk_pixdata_to_csource">
        <return-type type="GString*" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="GdkPixdataDumpType" name="dump_type" />
        </parameters>
      </method>
    </struct>
    <struct name="PixmapObject" cname="GdkPixmapObject">
      <field name="ParentInstance" cname="parent_instance" type="GdkDrawable" />
      <field name="Impl" cname="impl" type="GdkDrawable*" />
      <field name="Depth" cname="depth" type="gint" />
    </struct>
    <struct name="Point" cname="GdkPoint">
      <field name="X" cname="x" type="gint" />
      <field name="Y" cname="y" type="gint" />
    </struct>
    <struct name="PointerHooks" cname="GdkPointerHooks">
      <callback cname="get_pointer">
        <return-type type="GdkWindow*" />
        <parameters>
          <parameter type="GdkWindow*" name="window,gint*" />
        </parameters>
      </callback>
      <callback cname="window_at_pointer">
        <return-type type="GdkWindow*" />
        <parameters>
          <parameter type="GdkScreen*" name="screen," />
        </parameters>
      </callback>
    </struct>
    <struct name="Rectangle" cname="GdkRectangle">
      <field name="X" cname="x" type="gint" />
      <field name="Y" cname="y" type="gint" />
      <field name="Width" cname="width" type="gint" />
      <field name="Height" cname="height" type="gint" />
      <method name="GetType" cname="gdk_rectangle_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Intersect" cname="gdk_rectangle_intersect">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkRectangle*" name="src2" />
          <parameter type="GdkRectangle*" name="dest" />
        </parameters>
      </method>
      <method name="Union" cname="gdk_rectangle_union">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRectangle*" name="src2" />
          <parameter type="GdkRectangle*" name="dest" />
        </parameters>
      </method>
    </struct>
    <struct name="Region" cname="GdkRegion" opaque="true">
      <method name="Copy" cname="gdk_region_copy">
        <return-type type="GdkRegion*" owned="true" />
      </method>
      <method name="Destroy" cname="gdk_region_destroy">
        <return-type type="void" />
      </method>
      <method name="Empty" cname="gdk_region_empty">
        <return-type type="gboolean" />
      </method>
      <method name="Equal" cname="gdk_region_equal">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkRegion*" name="region2" />
        </parameters>
      </method>
      <method name="GetClipbox" cname="gdk_region_get_clipbox">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRectangle*" name="rectangle" />
        </parameters>
      </method>
      <method name="GetRectangles" cname="gdk_region_get_rectangles">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRectangle**" name="rectangles" />
          <parameter type="gint*" name="n_rectangles" />
        </parameters>
      </method>
      <method name="Intersect" cname="gdk_region_intersect">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRegion*" name="source2" />
        </parameters>
      </method>
      <constructor cname="gdk_region_new" />
      <method name="Offset" cname="gdk_region_offset">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="dx" />
          <parameter type="gint" name="dy" />
        </parameters>
      </method>
      <method name="PointIn" cname="gdk_region_point_in">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="int" name="x" />
          <parameter type="int" name="y" />
        </parameters>
      </method>
      <method name="Polygon" cname="gdk_region_polygon" shared="true">
        <return-type type="GdkRegion*" />
        <parameters>
          <parameter type="GdkPoint*" name="points" />
          <parameter type="gint" name="npoints" />
          <parameter type="GdkFillRule" name="fill_rule" />
        </parameters>
      </method>
      <method name="RectIn" cname="gdk_region_rect_in">
        <return-type type="GdkOverlapType" />
        <parameters>
          <parameter type="GdkRectangle*" name="rectangle" />
        </parameters>
      </method>
      <method name="Rectangle" cname="gdk_region_rectangle" shared="true">
        <return-type type="GdkRegion*" />
        <parameters>
          <parameter type="GdkRectangle*" name="rectangle" />
        </parameters>
      </method>
      <method name="Shrink" cname="gdk_region_shrink">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="dx" />
          <parameter type="gint" name="dy" />
        </parameters>
      </method>
      <method name="SpansIntersectForeach" cname="gdk_region_spans_intersect_foreach">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkSpan*" name="spans" />
          <parameter type="int" name="n_spans" />
          <parameter type="gboolean" name="sorted" />
          <parameter type="GdkSpanFunc" name="function" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="Subtract" cname="gdk_region_subtract">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRegion*" name="source2" />
        </parameters>
      </method>
      <method name="Union" cname="gdk_region_union">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRegion*" name="source2" />
        </parameters>
      </method>
      <method name="UnionWithRect" cname="gdk_region_union_with_rect">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRectangle*" name="rect" />
        </parameters>
      </method>
      <method name="Xor" cname="gdk_region_xor">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRegion*" name="source2" />
        </parameters>
      </method>
    </struct>
    <struct name="RgbCmap" cname="GdkRgbCmap" opaque="true">
      <field name="Colors" cname="colors" array_len="256" type="guint32" access="public" writeable="true" />
      <field name="NColors" cname="n_colors" type="gint" access="public" writeable="true" />
      <field name="InfoList" cname="info_list" type="GSList*" access="private" />
      <method name="Free" cname="gdk_rgb_cmap_free">
        <return-type type="void" />
      </method>
      <constructor cname="gdk_rgb_cmap_new">
        <parameters>
          <parameter type="guint32*" name="colors" />
          <parameter type="gint" name="n_colors" />
        </parameters>
      </constructor>
    </struct>
    <struct name="Segment" cname="GdkSegment">
      <field name="X1" cname="x1" type="gint" />
      <field name="Y1" cname="y1" type="gint" />
      <field name="X2" cname="x2" type="gint" />
      <field name="Y2" cname="y2" type="gint" />
    </struct>
    <alias name="Selection" cname="GdkSelection" type="GdkAtom" />
    <alias name="SelectionType" cname="GdkSelectionType" type="GdkAtom" />
    <struct name="Span" cname="GdkSpan">
      <field name="X" cname="x" type="gint" />
      <field name="Y" cname="y" type="gint" />
      <field name="Width" cname="width" type="gint" />
    </struct>
    <alias name="Target" cname="GdkTarget" type="GdkAtom" />
    <struct name="TimeCoord" cname="GdkTimeCoord">
      <field name="Time" cname="time" type="guint32" />
      <field name="Axes" cname="axes" array_len="GDK_MAX_TIMECOORD_AXES" type="gdouble" />
    </struct>
    <struct name="Trapezoid" cname="GdkTrapezoid">
      <field name="Y1" cname="y1" type="double" />
      <field name="X11" cname="x11" type="double" />
      <field name="X21" cname="x21" type="double" />
      <field name="Y2" cname="y2" type="double" />
      <field name="X12" cname="x12" type="double" />
      <field name="X22" cname="x22" type="double" />
    </struct>
    <alias name="WChar" cname="GdkWChar" type="guint32" />
    <struct name="WindowAttr" cname="GdkWindowAttr">
      <field name="Title" cname="title" type="gchar*" />
      <field name="EventMask" cname="event_mask" type="gint" />
      <field name="X" cname="x" type="gint" />
      <field name="Y" cname="y" type="gint" />
      <field name="Width" cname="width" type="gint" />
      <field name="Height" cname="height" type="gint" />
      <field name="Wclass" cname="wclass" type="GdkWindowClass" />
      <field name="Visual" cname="visual" type="GdkVisual*" />
      <field name="Colormap" cname="colormap" type="GdkColormap*" />
      <field name="WindowType" cname="window_type" type="GdkWindowType" />
      <field name="Cursor" cname="cursor" type="GdkCursor*" />
      <field name="WmclassName" cname="wmclass_name" type="gchar*" />
      <field name="WmclassClass" cname="wmclass_class" type="gchar*" />
      <field name="OverrideRedirect" cname="override_redirect" type="gboolean" />
    </struct>
    <struct name="WindowObject" cname="GdkWindowObject">
      <field name="ParentInstance" cname="parent_instance" type="GdkDrawable" />
      <field name="Impl" cname="impl" type="GdkDrawable*" />
      <field name="Parent" cname="parent" type="GdkWindowObject*" />
      <field name="UserData" cname="user_data" type="gpointer" />
      <field name="X" cname="x" type="gint" />
      <field name="Y" cname="y" type="gint" />
      <field name="ExtensionEvents" cname="extension_events" type="gint" />
      <field name="Filters" cname="filters" type="GList*" />
      <field name="Children" cname="children" type="GList*" />
      <field name="BgColor" cname="bg_color" type="GdkColor" />
      <field name="BgPixmap" cname="bg_pixmap" type="GdkPixmap*" />
      <field name="PaintStack" cname="paint_stack" type="GSList*" />
      <field name="UpdateArea" cname="update_area" type="GdkRegion*" />
      <field name="UpdateFreezeCount" cname="update_freeze_count" type="guint" />
      <field name="WindowType" cname="window_type" type="guint8" />
      <field name="Depth" cname="depth" type="guint8" />
      <field name="ResizeCount" cname="resize_count" type="guint8" />
      <field name="State" cname="state" type="GdkWindowState" />
      <field name="GuffawGravity" cname="guffaw_gravity" bits="1" type="guint" />
      <field name="InputOnly" cname="input_only" bits="1" type="guint" />
      <field name="ModalHint" cname="modal_hint" bits="1" type="guint" />
      <field name="Destroyed" cname="destroyed" bits="2" type="guint" />
      <field name="AcceptFocus" cname="accept_focus" bits="1" type="guint" />
      <field name="FocusOnMap" cname="focus_on_map" bits="1" type="guint" />
      <field name="Shaped" cname="shaped" bits="1" type="guint" />
      <field name="EventMask" cname="event_mask" type="GdkEventMask" />
      <method name="GetType" cname="gdk_window_object_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </struct>
    <alias name="XEvent" cname="GdkXEvent" type="void" />
    <struct name="Atom" cname="GdkAtom" opaque="true">
      <method name="Intern" cname="gdk_atom_intern" shared="true">
        <return-type type="GdkAtom" />
        <parameters>
          <parameter type="const-gchar*" name="atom_name" />
          <parameter type="gboolean" name="only_if_exists" />
        </parameters>
      </method>
      <method name="InternStaticString" cname="gdk_atom_intern_static_string" shared="true">
        <return-type type="GdkAtom" />
        <parameters>
          <parameter type="const-gchar*" name="atom_name" />
        </parameters>
      </method>
      <method name="Name" cname="gdk_atom_name">
        <return-type type="gchar*" />
      </method>
    </struct>
    <callback name="InvalidateMaybeRecurseChildFunc" cname="InvalidateMaybeRecurseChildFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="GdkWindow*" name="arg1" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <class name="Global" cname="GdkGlobal">
      <method name="AddClientMessageFilter" cname="gdk_add_client_message_filter" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkAtom" name="message_type" />
          <parameter type="GdkFilterFunc" name="func" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="AddOptionEntriesLibgtkOnly" cname="gdk_add_option_entries_libgtk_only" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GOptionGroup*" name="group" />
        </parameters>
      </method>
      <method name="DevicesList" cname="gdk_devices_list" shared="true">
        <return-type type="GList*" />
      </method>
      <method name="EventsPending" cname="gdk_events_pending" shared="true">
        <return-type type="gboolean" />
      </method>
      <method name="FreeCompoundText" cname="gdk_free_compound_text" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="guchar*" name="ctext" />
        </parameters>
      </method>
      <method name="FreeTextList" cname="gdk_free_text_list" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gchar**" name="list" />
        </parameters>
      </method>
      <method name="GetDefaultRootWindow" cname="gdk_get_default_root_window" shared="true">
        <return-type type="GdkWindow*" />
      </method>
      <method name="GetDisplay" cname="gdk_get_display" shared="true">
        <return-type type="gchar*" />
      </method>
      <method name="GetDisplayArgName" cname="gdk_get_display_arg_name" shared="true">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetProgramClass" cname="gdk_get_program_class" shared="true">
        <return-type type="const-char*" />
      </method>
      <method name="GetShowEvents" cname="gdk_get_show_events" shared="true">
        <return-type type="gboolean" />
      </method>
      <method name="GetUseXshm" cname="gdk_get_use_xshm" deprecated="1" shared="true">
        <return-type type="gboolean" />
      </method>
      <method name="InitCheck" cname="gdk_init_check" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint*" name="argc" />
          <parameter type="gchar***" name="argv" />
        </parameters>
      </method>
      <method name="ListVisuals" cname="gdk_list_visuals" shared="true">
        <return-type type="GList*" />
      </method>
      <method name="NetWmSupports" cname="gdk_net_wm_supports" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkAtom" name="property" />
        </parameters>
      </method>
      <method name="NotifyStartupComplete" cname="gdk_notify_startup_complete" shared="true">
        <return-type type="void" />
      </method>
      <method name="ParseArgs" cname="gdk_parse_args" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="argc" />
          <parameter type="gchar***" name="argv" />
        </parameters>
      </method>
      <method name="PreParseLibgtkOnly" cname="gdk_pre_parse_libgtk_only" shared="true">
        <return-type type="void" />
      </method>
      <method name="SetDoubleClickTime" cname="gdk_set_double_click_time" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="msec" />
        </parameters>
      </method>
      <method name="SetLocale" cname="gdk_set_locale" shared="true">
        <return-type type="gchar*" />
      </method>
      <method name="SetPointerHooks" cname="gdk_set_pointer_hooks" shared="true">
        <return-type type="GdkPointerHooks*" />
        <parameters>
          <parameter type="const-GdkPointerHooks*" name="new_hooks" />
        </parameters>
      </method>
      <method name="SetProgramClass" cname="gdk_set_program_class" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="program_class" />
        </parameters>
      </method>
      <method name="SetShowEvents" cname="gdk_set_show_events" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="show_events" />
        </parameters>
      </method>
      <method name="SetSmClientId" cname="gdk_set_sm_client_id" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="sm_client_id" />
        </parameters>
      </method>
      <method name="SetUseXshm" cname="gdk_set_use_xshm" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="use_xshm" />
        </parameters>
      </method>
      <method name="SettingGet" cname="gdk_setting_get" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="GValue*" name="value" />
        </parameters>
      </method>
      <method name="StringExtents" cname="gdk_string_extents" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkFont*" name="font" />
          <parameter type="const-gchar*" name="string" />
          <parameter type="gint*" name="lbearing" />
          <parameter type="gint*" name="rbearing" />
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="ascent" />
          <parameter type="gint*" name="descent" />
        </parameters>
      </method>
      <method name="StringHeight" cname="gdk_string_height" deprecated="1" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdkFont*" name="font" />
          <parameter type="const-gchar*" name="string" />
        </parameters>
      </method>
      <method name="StringMeasure" cname="gdk_string_measure" deprecated="1" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdkFont*" name="font" />
          <parameter type="const-gchar*" name="string" />
        </parameters>
      </method>
      <method name="StringToCompoundText" cname="gdk_string_to_compound_text" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="const-gchar*" name="str" />
          <parameter type="GdkAtom*" name="encoding" />
          <parameter type="gint*" name="format" />
          <parameter type="guchar**" name="ctext" />
          <parameter type="gint*" name="length" />
        </parameters>
      </method>
      <method name="StringToCompoundTextForDisplay" cname="gdk_string_to_compound_text_for_display" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="const-gchar*" name="str" />
          <parameter type="GdkAtom*" name="encoding" />
          <parameter type="gint*" name="format" />
          <parameter type="guchar**" name="ctext" />
          <parameter type="gint*" name="length" />
        </parameters>
      </method>
      <method name="StringWidth" cname="gdk_string_width" deprecated="1" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdkFont*" name="font" />
          <parameter type="const-gchar*" name="string" />
        </parameters>
      </method>
      <method name="UnicodeToKeyval" cname="gdk_unicode_to_keyval" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="guint32" name="wc" />
        </parameters>
      </method>
    </class>
    <class name="Cairo" cname="GdkCairo_">
      <method name="Create" cname="gdk_cairo_create" shared="true">
        <return-type type="cairo_t*" />
        <parameters>
          <parameter type="GdkDrawable*" name="drawable" />
        </parameters>
      </method>
      <method name="Rectangle" cname="gdk_cairo_rectangle" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="cairo_t*" name="cr" />
          <parameter type="GdkRectangle*" name="rectangle" />
        </parameters>
      </method>
      <method name="Region" cname="gdk_cairo_region" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="cairo_t*" name="cr" />
          <parameter type="GdkRegion*" name="region" />
        </parameters>
      </method>
      <method name="SetSourceColor" cname="gdk_cairo_set_source_color" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="cairo_t*" name="cr" />
          <parameter type="GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="SetSourcePixbuf" cname="gdk_cairo_set_source_pixbuf" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="cairo_t*" name="cr" />
          <parameter type="GdkPixbuf*" name="pixbuf" />
          <parameter type="double" name="pixbuf_x" />
          <parameter type="double" name="pixbuf_y" />
        </parameters>
      </method>
      <method name="SetSourcePixmap" cname="gdk_cairo_set_source_pixmap" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="cairo_t*" name="cr" />
          <parameter type="GdkPixmap*" name="pixmap" />
          <parameter type="double" name="pixmap_x" />
          <parameter type="double" name="pixmap_y" />
        </parameters>
      </method>
    </class>
    <class name="Char" cname="GdkChar_">
      <method name="Height" cname="gdk_char_height" deprecated="1" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdkFont*" name="font" />
          <parameter type="gchar" name="character" />
        </parameters>
      </method>
      <method name="Measure" cname="gdk_char_measure" deprecated="1" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdkFont*" name="font" />
          <parameter type="gchar" name="character" />
        </parameters>
      </method>
      <method name="Width" cname="gdk_char_width" deprecated="1" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdkFont*" name="font" />
          <parameter type="gchar" name="character" />
        </parameters>
      </method>
      <method name="WidthWc" cname="gdk_char_width_wc" deprecated="1" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdkFont*" name="font" />
          <parameter type="GdkWChar" name="character" />
        </parameters>
      </method>
    </class>
    <class name="Colors" cname="GdkColors_">
      <method name="Alloc" cname="gdk_colors_alloc" deprecated="1" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdkColormap*" name="colormap" />
          <parameter type="gboolean" name="contiguous" />
          <parameter type="gulong*" name="planes" />
          <parameter type="gint" name="nplanes" />
          <parameter type="gulong*" name="pixels" />
          <parameter type="gint" name="npixels" />
        </parameters>
      </method>
      <method name="Free" cname="gdk_colors_free" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkColormap*" name="colormap" />
          <parameter type="gulong*" name="pixels" />
          <parameter type="gint" name="npixels" />
          <parameter type="gulong" name="planes" />
        </parameters>
      </method>
      <method name="Store" cname="gdk_colors_store" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkColormap*" name="colormap" />
          <parameter type="GdkColor*" name="colors" />
          <parameter type="gint" name="ncolors" />
        </parameters>
      </method>
    </class>
    <class name="Drag" cname="GdkDrag_">
      <method name="Abort" cname="gdk_drag_abort" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="Begin" cname="gdk_drag_begin" shared="true">
        <return-type type="GdkDragContext*" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GList*" name="targets" />
        </parameters>
      </method>
      <method name="Drop" cname="gdk_drag_drop" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="DropSucceeded" cname="gdk_drag_drop_succeeded" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
        </parameters>
      </method>
      <method name="FindWindow" cname="gdk_drag_find_window" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="GdkWindow*" name="drag_window" />
          <parameter type="gint" name="x_root" />
          <parameter type="gint" name="y_root" />
          <parameter type="GdkWindow**" name="dest_window" />
          <parameter type="GdkDragProtocol*" name="protocol" />
        </parameters>
      </method>
      <method name="FindWindowForScreen" cname="gdk_drag_find_window_for_screen" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="GdkWindow*" name="drag_window" />
          <parameter type="GdkScreen*" name="screen" />
          <parameter type="gint" name="x_root" />
          <parameter type="gint" name="y_root" />
          <parameter type="GdkWindow**" name="dest_window" />
          <parameter type="GdkDragProtocol*" name="protocol" />
        </parameters>
      </method>
      <method name="GetProtocol" cname="gdk_drag_get_protocol" shared="true">
        <return-type type="guint32" />
        <parameters>
          <parameter type="guint32" name="xid" />
          <parameter type="GdkDragProtocol*" name="protocol" />
        </parameters>
      </method>
      <method name="GetProtocolForDisplay" cname="gdk_drag_get_protocol_for_display" shared="true">
        <return-type type="guint32" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="guint32" name="xid" />
          <parameter type="GdkDragProtocol*" name="protocol" />
        </parameters>
      </method>
      <method name="GetSelection" cname="gdk_drag_get_selection" shared="true">
        <return-type type="GdkAtom" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
        </parameters>
      </method>
      <method name="Motion" cname="gdk_drag_motion" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="GdkWindow*" name="dest_window" />
          <parameter type="GdkDragProtocol" name="protocol" />
          <parameter type="gint" name="x_root" />
          <parameter type="gint" name="y_root" />
          <parameter type="GdkDragAction" name="suggested_action" />
          <parameter type="GdkDragAction" name="possible_actions" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="Status" cname="gdk_drag_status" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="GdkDragAction" name="action" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
    </class>
    <class name="Drop" cname="GdkDrop_">
      <method name="Finish" cname="gdk_drop_finish" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="gboolean" name="success" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="Reply" cname="gdk_drop_reply" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="gboolean" name="ok" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
    </class>
    <class name="Error" cname="GdkError_">
      <method name="TrapPop" cname="gdk_error_trap_pop" shared="true">
        <return-type type="gint" />
      </method>
      <method name="TrapPush" cname="gdk_error_trap_push" shared="true">
        <return-type type="void" />
      </method>
    </class>
    <class name="Event" cname="GdkEvent_">
      <method name="Copy" cname="gdk_event_copy" shared="true">
        <return-type type="GdkEvent*" owned="true" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="Free" cname="gdk_event_free" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="Get" cname="gdk_event_get" shared="true">
        <return-type type="GdkEvent*" />
      </method>
      <method name="GetAxis" cname="gdk_event_get_axis" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
          <parameter type="GdkAxisUse" name="axis_use" />
          <parameter type="gdouble*" name="value" />
        </parameters>
      </method>
      <method name="GetCoords" cname="gdk_event_get_coords" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
          <parameter type="gdouble*" name="x_win" />
          <parameter type="gdouble*" name="y_win" />
        </parameters>
      </method>
      <method name="GetGraphicsExpose" cname="gdk_event_get_graphics_expose" shared="true">
        <return-type type="GdkEvent*" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
        </parameters>
      </method>
      <method name="GetRootCoords" cname="gdk_event_get_root_coords" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
          <parameter type="gdouble*" name="x_root" />
          <parameter type="gdouble*" name="y_root" />
        </parameters>
      </method>
      <method name="GetScreen" cname="gdk_event_get_screen" shared="true">
        <return-type type="GdkScreen*" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="GetState" cname="gdk_event_get_state" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
          <parameter type="GdkModifierType*" name="state" />
        </parameters>
      </method>
      <method name="GetTime" cname="gdk_event_get_time" shared="true">
        <return-type type="guint32" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="GetType" cname="gdk_event_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="HandlerSet" cname="gdk_event_handler_set" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkEventFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GDestroyNotify" name="notify" />
        </parameters>
      </method>
      <method name="New" cname="gdk_event_new" shared="true">
        <return-type type="GdkEvent*" />
        <parameters>
          <parameter type="GdkEventType" name="type" />
        </parameters>
      </method>
      <method name="Peek" cname="gdk_event_peek" shared="true">
        <return-type type="GdkEvent*" />
      </method>
      <method name="Put" cname="gdk_event_put" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="SendClientMessage" cname="gdk_event_send_client_message" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
          <parameter type="GdkNativeWindow" name="winid" />
        </parameters>
      </method>
      <method name="SendClientMessageForDisplay" cname="gdk_event_send_client_message_for_display" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="GdkEvent*" name="event" />
          <parameter type="GdkNativeWindow" name="winid" />
        </parameters>
      </method>
      <method name="SendClientmessageToall" cname="gdk_event_send_clientmessage_toall" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="SetScreen" cname="gdk_event_set_screen" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
          <parameter type="GdkScreen*" name="screen" />
        </parameters>
      </method>
    </class>
    <class name="Fontset" cname="GdkFontset_">
      <method name="Load" cname="gdk_fontset_load" deprecated="1" shared="true">
        <return-type type="GdkFont*" />
        <parameters>
          <parameter type="const-gchar*" name="fontset_name" />
        </parameters>
      </method>
      <method name="LoadForDisplay" cname="gdk_fontset_load_for_display" deprecated="1" shared="true">
        <return-type type="GdkFont*" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="const-gchar*" name="fontset_name" />
        </parameters>
      </method>
    </class>
    <class name="Input" cname="GdkInput_">
      <method name="Add" cname="gdk_input_add" deprecated="1" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="source" />
          <parameter type="GdkInputCondition" name="condition" />
          <parameter type="GdkInputFunction" name="function" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="AddFull" cname="gdk_input_add_full" deprecated="1" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="source" />
          <parameter type="GdkInputCondition" name="condition" />
          <parameter type="GdkInputFunction" name="function" />
          <parameter type="gpointer" name="data" />
          <parameter type="GdkDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="Remove" cname="gdk_input_remove" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="tag" />
        </parameters>
      </method>
      <method name="SetExtensionEvents" cname="gdk_input_set_extension_events" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="gint" name="mask" />
          <parameter type="GdkExtensionMode" name="mode" />
        </parameters>
      </method>
    </class>
    <class name="Keyboard" cname="GdkKeyboard_">
      <method name="Grab" cname="gdk_keyboard_grab" shared="true">
        <return-type type="GdkGrabStatus" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="gboolean" name="owner_events" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="GrabInfoLibgtkOnly" cname="gdk_keyboard_grab_info_libgtk_only" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="GdkWindow**" name="grab_window" />
          <parameter type="gboolean*" name="owner_events" />
        </parameters>
      </method>
      <method name="Ungrab" cname="gdk_keyboard_ungrab" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
    </class>
    <class name="Keyval" cname="GdkKeyval_">
      <method name="ConvertCase" cname="gdk_keyval_convert_case" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="symbol" />
          <parameter type="guint*" name="lower" />
          <parameter type="guint*" name="upper" />
        </parameters>
      </method>
      <method name="FromName" cname="gdk_keyval_from_name" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="const-gchar*" name="keyval_name" />
        </parameters>
      </method>
      <method name="IsLower" cname="gdk_keyval_is_lower" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="keyval" />
        </parameters>
      </method>
      <method name="IsUpper" cname="gdk_keyval_is_upper" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="keyval" />
        </parameters>
      </method>
      <method name="Name" cname="gdk_keyval_name" shared="true">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="guint" name="keyval" />
        </parameters>
      </method>
      <method name="ToLower" cname="gdk_keyval_to_lower" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="guint" name="keyval" />
        </parameters>
      </method>
      <method name="ToUnicode" cname="gdk_keyval_to_unicode" shared="true">
        <return-type type="guint32" />
        <parameters>
          <parameter type="guint" name="keyval" />
        </parameters>
      </method>
      <method name="ToUpper" cname="gdk_keyval_to_upper" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="guint" name="keyval" />
        </parameters>
      </method>
    </class>
    <class name="Pango" cname="GdkPango_">
      <method name="ContextGet" cname="gdk_pango_context_get" shared="true">
        <return-type type="PangoContext*" />
      </method>
      <method name="ContextGetForScreen" cname="gdk_pango_context_get_for_screen" shared="true">
        <return-type type="PangoContext*" />
        <parameters>
          <parameter type="GdkScreen*" name="screen" />
        </parameters>
      </method>
      <method name="ContextSetColormap" cname="gdk_pango_context_set_colormap" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoContext*" name="context" />
          <parameter type="GdkColormap*" name="colormap" />
        </parameters>
      </method>
      <method name="LayoutGetClipRegion" cname="gdk_pango_layout_get_clip_region" shared="true">
        <return-type type="GdkRegion*" />
        <parameters>
          <parameter type="PangoLayout*" name="layout" />
          <parameter type="gint" name="x_origin" />
          <parameter type="gint" name="y_origin" />
          <parameter type="gint*" name="index_ranges" />
          <parameter type="gint" name="n_ranges" />
        </parameters>
      </method>
      <method name="LayoutLineGetClipRegion" cname="gdk_pango_layout_line_get_clip_region" shared="true">
        <return-type type="GdkRegion*" />
        <parameters>
          <parameter type="PangoLayoutLine*" name="line" />
          <parameter type="gint" name="x_origin" />
          <parameter type="gint" name="y_origin" />
          <parameter type="gint*" name="index_ranges" />
          <parameter type="gint" name="n_ranges" />
        </parameters>
      </method>
    </class>
    <class name="Pointer" cname="GdkPointer_">
      <method name="Grab" cname="gdk_pointer_grab" shared="true">
        <return-type type="GdkGrabStatus" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="gboolean" name="owner_events" />
          <parameter type="GdkEventMask" name="event_mask" />
          <parameter type="GdkWindow*" name="confine_to" />
          <parameter type="GdkCursor*" name="cursor" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="GrabInfoLibgtkOnly" cname="gdk_pointer_grab_info_libgtk_only" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="GdkWindow**" name="grab_window" />
          <parameter type="gboolean*" name="owner_events" />
        </parameters>
      </method>
      <method name="IsGrabbed" cname="gdk_pointer_is_grabbed" shared="true">
        <return-type type="gboolean" />
      </method>
      <method name="Ungrab" cname="gdk_pointer_ungrab" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
    </class>
    <class name="Property" cname="GdkProperty_">
      <method name="Change" cname="gdk_property_change" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GdkAtom" name="property" />
          <parameter type="GdkAtom" name="type" />
          <parameter type="gint" name="format" />
          <parameter type="GdkPropMode" name="mode" />
          <parameter type="const-guchar*" name="data" />
          <parameter type="gint" name="nelements" />
        </parameters>
      </method>
      <method name="Delete" cname="gdk_property_delete" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GdkAtom" name="property" />
        </parameters>
      </method>
      <method name="Get" cname="gdk_property_get" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GdkAtom" name="property" />
          <parameter type="GdkAtom" name="type" />
          <parameter type="gulong" name="offset" />
          <parameter type="gulong" name="length" />
          <parameter type="gint" name="pdelete" />
          <parameter type="GdkAtom*" name="actual_property_type" />
          <parameter type="gint*" name="actual_format" />
          <parameter type="gint*" name="actual_length" />
          <parameter type="guchar**" name="data" />
        </parameters>
      </method>
    </class>
    <class name="Query" cname="GdkQuery_">
      <method name="Depths" cname="gdk_query_depths" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gint**" name="depths" />
          <parameter type="gint*" name="count" />
        </parameters>
      </method>
      <method name="VisualTypes" cname="gdk_query_visual_types" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkVisualType**" name="visual_types" />
          <parameter type="gint*" name="count" />
        </parameters>
      </method>
    </class>
    <class name="Rgb" cname="GdkRgb_">
      <method name="ColormapDitherable" cname="gdk_rgb_colormap_ditherable" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkColormap*" name="cmap" />
        </parameters>
      </method>
      <method name="Ditherable" cname="gdk_rgb_ditherable" shared="true">
        <return-type type="gboolean" />
      </method>
      <method name="FindColor" cname="gdk_rgb_find_color" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkColormap*" name="colormap" />
          <parameter type="GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="GcSetBackground" cname="gdk_rgb_gc_set_background" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGC*" name="gc" />
          <parameter type="guint32" name="rgb" />
        </parameters>
      </method>
      <method name="GcSetForeground" cname="gdk_rgb_gc_set_foreground" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGC*" name="gc" />
          <parameter type="guint32" name="rgb" />
        </parameters>
      </method>
      <method name="GetColormap" cname="gdk_rgb_get_colormap" shared="true">
        <return-type type="GdkColormap*" />
      </method>
      <method name="GetVisual" cname="gdk_rgb_get_visual" shared="true">
        <return-type type="GdkVisual*" />
      </method>
      <method name="Init" cname="gdk_rgb_init" deprecated="1" shared="true">
        <return-type type="void" />
      </method>
      <method name="SetInstall" cname="gdk_rgb_set_install" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="install" />
        </parameters>
      </method>
      <method name="SetMinColors" cname="gdk_rgb_set_min_colors" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="min_colors" />
        </parameters>
      </method>
      <method name="SetVerbose" cname="gdk_rgb_set_verbose" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="verbose" />
        </parameters>
      </method>
      <method name="XpixelFromRgb" cname="gdk_rgb_xpixel_from_rgb" deprecated="1" shared="true">
        <return-type type="gulong" />
        <parameters>
          <parameter type="guint32" name="rgb" />
        </parameters>
      </method>
    </class>
    <class name="Selection" cname="GdkSelection_">
      <method name="Convert" cname="gdk_selection_convert" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="requestor" />
          <parameter type="GdkAtom" name="selection" />
          <parameter type="GdkAtom" name="target" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="OwnerGet" cname="gdk_selection_owner_get" shared="true">
        <return-type type="GdkWindow*" />
        <parameters>
          <parameter type="GdkAtom" name="selection" />
        </parameters>
      </method>
      <method name="OwnerGetForDisplay" cname="gdk_selection_owner_get_for_display" shared="true">
        <return-type type="GdkWindow*" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="GdkAtom" name="selection" />
        </parameters>
      </method>
      <method name="OwnerSet" cname="gdk_selection_owner_set" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkWindow*" name="owner" />
          <parameter type="GdkAtom" name="selection" />
          <parameter type="guint32" name="time_" />
          <parameter type="gboolean" name="send_event" />
        </parameters>
      </method>
      <method name="OwnerSetForDisplay" cname="gdk_selection_owner_set_for_display" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="GdkWindow*" name="owner" />
          <parameter type="GdkAtom" name="selection" />
          <parameter type="guint32" name="time_" />
          <parameter type="gboolean" name="send_event" />
        </parameters>
      </method>
      <method name="PropertyGet" cname="gdk_selection_property_get" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkWindow*" name="requestor" />
          <parameter type="guchar**" name="data" />
          <parameter type="GdkAtom*" name="prop_type" />
          <parameter type="gint*" name="prop_format" />
        </parameters>
      </method>
      <method name="SendNotify" cname="gdk_selection_send_notify" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="guint32" name="requestor" />
          <parameter type="GdkAtom" name="selection" />
          <parameter type="GdkAtom" name="target" />
          <parameter type="GdkAtom" name="property" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="SendNotifyForDisplay" cname="gdk_selection_send_notify_for_display" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="guint32" name="requestor" />
          <parameter type="GdkAtom" name="selection" />
          <parameter type="GdkAtom" name="target" />
          <parameter type="GdkAtom" name="property" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
    </class>
    <class name="Spawn" cname="GdkSpawn_">
      <method name="CommandLineOnScreen" cname="gdk_spawn_command_line_on_screen" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkScreen*" name="screen" />
          <parameter type="const-gchar*" name="command_line" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="OnScreen" cname="gdk_spawn_on_screen" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkScreen*" name="screen" />
          <parameter type="const-gchar*" name="working_directory" />
          <parameter type="gchar**" name="argv" />
          <parameter type="gchar**" name="envp" />
          <parameter type="GSpawnFlags" name="flags" />
          <parameter type="GSpawnChildSetupFunc" name="child_setup" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="gint*" name="child_pid" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="OnScreenWithPipes" cname="gdk_spawn_on_screen_with_pipes" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkScreen*" name="screen" />
          <parameter type="const-gchar*" name="working_directory" />
          <parameter type="gchar**" name="argv" />
          <parameter type="gchar**" name="envp" />
          <parameter type="GSpawnFlags" name="flags" />
          <parameter type="GSpawnChildSetupFunc" name="child_setup" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="gint*" name="child_pid" />
          <parameter type="gint*" name="standard_input" />
          <parameter type="gint*" name="standard_output" />
          <parameter type="gint*" name="standard_error" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
    </class>
    <class name="Text" cname="GdkText_">
      <method name="Extents" cname="gdk_text_extents" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkFont*" name="font" />
          <parameter type="const-gchar*" name="text" />
          <parameter type="gint" name="text_length" />
          <parameter type="gint*" name="lbearing" />
          <parameter type="gint*" name="rbearing" />
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="ascent" />
          <parameter type="gint*" name="descent" />
        </parameters>
      </method>
      <method name="ExtentsWc" cname="gdk_text_extents_wc" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkFont*" name="font" />
          <parameter type="const-GdkWChar*" name="text" />
          <parameter type="gint" name="text_length" />
          <parameter type="gint*" name="lbearing" />
          <parameter type="gint*" name="rbearing" />
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="ascent" />
          <parameter type="gint*" name="descent" />
        </parameters>
      </method>
      <method name="Height" cname="gdk_text_height" deprecated="1" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdkFont*" name="font" />
          <parameter type="const-gchar*" name="text" />
          <parameter type="gint" name="text_length" />
        </parameters>
      </method>
      <method name="Measure" cname="gdk_text_measure" deprecated="1" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdkFont*" name="font" />
          <parameter type="const-gchar*" name="text" />
          <parameter type="gint" name="text_length" />
        </parameters>
      </method>
      <method name="PropertyToTextList" cname="gdk_text_property_to_text_list" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdkAtom" name="encoding" />
          <parameter type="gint" name="format" />
          <parameter type="const-guchar*" name="text" />
          <parameter type="gint" name="length" />
          <parameter type="gchar***" name="list" />
        </parameters>
      </method>
      <method name="PropertyToTextListForDisplay" cname="gdk_text_property_to_text_list_for_display" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="GdkAtom" name="encoding" />
          <parameter type="gint" name="format" />
          <parameter type="const-guchar*" name="text" />
          <parameter type="gint" name="length" />
          <parameter type="gchar***" name="list" />
        </parameters>
      </method>
      <method name="PropertyToUtf8List" cname="gdk_text_property_to_utf8_list" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdkAtom" name="encoding" />
          <parameter type="gint" name="format" />
          <parameter type="const-guchar*" name="text" />
          <parameter type="gint" name="length" />
          <parameter type="gchar***" name="list" />
        </parameters>
      </method>
      <method name="PropertyToUtf8ListForDisplay" cname="gdk_text_property_to_utf8_list_for_display" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="GdkAtom" name="encoding" />
          <parameter type="gint" name="format" />
          <parameter type="const-guchar*" name="text" />
          <parameter type="gint" name="length" />
          <parameter type="gchar***" name="list" />
        </parameters>
      </method>
      <method name="Width" cname="gdk_text_width" deprecated="1" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdkFont*" name="font" />
          <parameter type="const-gchar*" name="text" />
          <parameter type="gint" name="text_length" />
        </parameters>
      </method>
      <method name="WidthWc" cname="gdk_text_width_wc" deprecated="1" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdkFont*" name="font" />
          <parameter type="const-GdkWChar*" name="text" />
          <parameter type="gint" name="text_length" />
        </parameters>
      </method>
    </class>
    <class name="Threads" cname="GdkThreads_">
      <method name="Enter" cname="gdk_threads_enter" shared="true">
        <return-type type="void" />
      </method>
      <method name="Init" cname="gdk_threads_init" shared="true">
        <return-type type="void" />
      </method>
      <method name="Leave" cname="gdk_threads_leave" shared="true">
        <return-type type="void" />
      </method>
      <method name="SetLockFunctions" cname="gdk_threads_set_lock_functions" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GCallback" name="enter_fn" />
          <parameter type="GCallback" name="leave_fn" />
        </parameters>
      </method>
    </class>
    <class name="Xid" cname="GdkXid_">
      <method name="TableLookup" cname="gdk_xid_table_lookup" shared="true">
        <return-type type="gpointer" />
        <parameters>
          <parameter type="XID" name="xid" />
        </parameters>
      </method>
      <method name="TableLookupForDisplay" cname="gdk_xid_table_lookup_for_display" shared="true">
        <return-type type="gpointer" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="XID" name="xid" />
        </parameters>
      </method>
    </class>
  </namespace>
  <namespace name="Pango" library="libgtk">
    <enum name="Alignment" cname="PangoAlignment" type="enum">
      <member cname="PANGO_ALIGN_LEFT" name="Left" />
      <member cname="PANGO_ALIGN_CENTER" name="Center" />
      <member cname="PANGO_ALIGN_RIGHT" name="Right" />
    </enum>
    <enum name="AttrType" cname="PangoAttrType" type="enum">
      <member cname="PANGO_ATTR_INVALID" name="Invalid" />
      <member cname="PANGO_ATTR_LANGUAGE" name="Language" />
      <member cname="PANGO_ATTR_FAMILY" name="Family" />
      <member cname="PANGO_ATTR_STYLE" name="Style" />
      <member cname="PANGO_ATTR_WEIGHT" name="Weight" />
      <member cname="PANGO_ATTR_VARIANT" name="Variant" />
      <member cname="PANGO_ATTR_STRETCH" name="Stretch" />
      <member cname="PANGO_ATTR_SIZE" name="Size" />
      <member cname="PANGO_ATTR_FONT_DESC" name="FontDesc" />
      <member cname="PANGO_ATTR_FOREGROUND" name="Foreground" />
      <member cname="PANGO_ATTR_BACKGROUND" name="Background" />
      <member cname="PANGO_ATTR_UNDERLINE" name="Underline" />
      <member cname="PANGO_ATTR_STRIKETHROUGH" name="Strikethrough" />
      <member cname="PANGO_ATTR_RISE" name="Rise" />
      <member cname="PANGO_ATTR_SHAPE" name="Shape" />
      <member cname="PANGO_ATTR_SCALE" name="Scale" />
      <member cname="PANGO_ATTR_FALLBACK" name="Fallback" />
      <member cname="PANGO_ATTR_LETTER_SPACING" name="LetterSpacing" />
      <member cname="PANGO_ATTR_UNDERLINE_COLOR" name="UnderlineColor" />
      <member cname="PANGO_ATTR_STRIKETHROUGH_COLOR" name="StrikethroughColor" />
      <member cname="PANGO_ATTR_ABSOLUTE_SIZE" name="AbsoluteSize" />
      <member cname="PANGO_ATTR_GRAVITY" name="Gravity" />
      <member cname="PANGO_ATTR_GRAVITY_HINT" name="GravityHint" />
    </enum>
    <enum name="CoverageLevel" cname="PangoCoverageLevel" type="enum">
      <member cname="PANGO_COVERAGE_NONE" name="None" />
      <member cname="PANGO_COVERAGE_FALLBACK" name="Fallback" />
      <member cname="PANGO_COVERAGE_APPROXIMATE" name="Approximate" />
      <member cname="PANGO_COVERAGE_EXACT" name="Exact" />
    </enum>
    <enum name="Direction" cname="PangoDirection" type="enum">
      <member cname="PANGO_DIRECTION_LTR" name="Ltr" />
      <member cname="PANGO_DIRECTION_RTL" name="Rtl" />
      <member cname="PANGO_DIRECTION_TTB_LTR" name="TtbLtr" />
      <member cname="PANGO_DIRECTION_TTB_RTL" name="TtbRtl" />
      <member cname="PANGO_DIRECTION_WEAK_LTR" name="WeakLtr" />
      <member cname="PANGO_DIRECTION_WEAK_RTL" name="WeakRtl" />
      <member cname="PANGO_DIRECTION_NEUTRAL" name="Neutral" />
    </enum>
    <enum name="EllipsizeMode" cname="PangoEllipsizeMode" type="enum">
      <member cname="PANGO_ELLIPSIZE_NONE" name="None" />
      <member cname="PANGO_ELLIPSIZE_START" name="Start" />
      <member cname="PANGO_ELLIPSIZE_MIDDLE" name="Middle" />
      <member cname="PANGO_ELLIPSIZE_END" name="End" />
    </enum>
    <enum name="FontMask" cname="PangoFontMask" type="flags">
      <member cname="PANGO_FONT_MASK_FAMILY" name="Family" value="1 &lt;&lt; 0" />
      <member cname="PANGO_FONT_MASK_STYLE" name="Style" value="1 &lt;&lt; 1" />
      <member cname="PANGO_FONT_MASK_VARIANT" name="Variant" value="1 &lt;&lt; 2" />
      <member cname="PANGO_FONT_MASK_WEIGHT" name="Weight" value="1 &lt;&lt; 3" />
      <member cname="PANGO_FONT_MASK_STRETCH" name="Stretch" value="1 &lt;&lt; 4" />
      <member cname="PANGO_FONT_MASK_SIZE" name="Size" value="1 &lt;&lt; 5" />
      <member cname="PANGO_FONT_MASK_GRAVITY" name="Gravity" value="1 &lt;&lt; 6" />
    </enum>
    <enum name="Gravity" cname="PangoGravity" type="enum">
      <member cname="PANGO_GRAVITY_SOUTH" name="South" />
      <member cname="PANGO_GRAVITY_EAST" name="East" />
      <member cname="PANGO_GRAVITY_NORTH" name="North" />
      <member cname="PANGO_GRAVITY_WEST" name="West" />
      <member cname="PANGO_GRAVITY_AUTO" name="Auto" />
    </enum>
    <enum name="GravityHint" cname="PangoGravityHint" type="enum">
      <member cname="PANGO_GRAVITY_HINT_NATURAL" name="Natural" />
      <member cname="PANGO_GRAVITY_HINT_STRONG" name="Strong" />
      <member cname="PANGO_GRAVITY_HINT_LINE" name="Line" />
    </enum>
    <enum name="RenderPart" cname="PangoRenderPart" type="enum">
      <member cname="PANGO_RENDER_PART_FOREGROUND" name="Foreground" />
      <member cname="PANGO_RENDER_PART_BACKGROUND" name="Background" />
      <member cname="PANGO_RENDER_PART_UNDERLINE" name="Underline" />
      <member cname="PANGO_RENDER_PART_STRIKETHROUGH" name="Strikethrough" />
    </enum>
    <enum name="Script" cname="PangoScript" type="enum">
      <member cname="PANGO_SCRIPT_INVALID_CODE" name="InvalidCode" value="-1" />
      <member cname="PANGO_SCRIPT_COMMON" name="Common" />
      <member cname="PANGO_SCRIPT_INHERITED" name="Inherited" />
      <member cname="PANGO_SCRIPT_ARABIC" name="Arabic" />
      <member cname="PANGO_SCRIPT_ARMENIAN" name="Armenian" />
      <member cname="PANGO_SCRIPT_BENGALI" name="Bengali" />
      <member cname="PANGO_SCRIPT_BOPOMOFO" name="Bopomofo" />
      <member cname="PANGO_SCRIPT_CHEROKEE" name="Cherokee" />
      <member cname="PANGO_SCRIPT_COPTIC" name="Coptic" />
      <member cname="PANGO_SCRIPT_CYRILLIC" name="Cyrillic" />
      <member cname="PANGO_SCRIPT_DESERET" name="Deseret" />
      <member cname="PANGO_SCRIPT_DEVANAGARI" name="Devanagari" />
      <member cname="PANGO_SCRIPT_ETHIOPIC" name="Ethiopic" />
      <member cname="PANGO_SCRIPT_GEORGIAN" name="Georgian" />
      <member cname="PANGO_SCRIPT_GOTHIC" name="Gothic" />
      <member cname="PANGO_SCRIPT_GREEK" name="Greek" />
      <member cname="PANGO_SCRIPT_GUJARATI" name="Gujarati" />
      <member cname="PANGO_SCRIPT_GURMUKHI" name="Gurmukhi" />
      <member cname="PANGO_SCRIPT_HAN" name="Han" />
      <member cname="PANGO_SCRIPT_HANGUL" name="Hangul" />
      <member cname="PANGO_SCRIPT_HEBREW" name="Hebrew" />
      <member cname="PANGO_SCRIPT_HIRAGANA" name="Hiragana" />
      <member cname="PANGO_SCRIPT_KANNADA" name="Kannada" />
      <member cname="PANGO_SCRIPT_KATAKANA" name="Katakana" />
      <member cname="PANGO_SCRIPT_KHMER" name="Khmer" />
      <member cname="PANGO_SCRIPT_LAO" name="Lao" />
      <member cname="PANGO_SCRIPT_LATIN" name="Latin" />
      <member cname="PANGO_SCRIPT_MALAYALAM" name="Malayalam" />
      <member cname="PANGO_SCRIPT_MONGOLIAN" name="Mongolian" />
      <member cname="PANGO_SCRIPT_MYANMAR" name="Myanmar" />
      <member cname="PANGO_SCRIPT_OGHAM" name="Ogham" />
      <member cname="PANGO_SCRIPT_OLD_ITALIC" name="OldItalic" />
      <member cname="PANGO_SCRIPT_ORIYA" name="Oriya" />
      <member cname="PANGO_SCRIPT_RUNIC" name="Runic" />
      <member cname="PANGO_SCRIPT_SINHALA" name="Sinhala" />
      <member cname="PANGO_SCRIPT_SYRIAC" name="Syriac" />
      <member cname="PANGO_SCRIPT_TAMIL" name="Tamil" />
      <member cname="PANGO_SCRIPT_TELUGU" name="Telugu" />
      <member cname="PANGO_SCRIPT_THAANA" name="Thaana" />
      <member cname="PANGO_SCRIPT_THAI" name="Thai" />
      <member cname="PANGO_SCRIPT_TIBETAN" name="Tibetan" />
      <member cname="PANGO_SCRIPT_CANADIAN_ABORIGINAL" name="CanadianAboriginal" />
      <member cname="PANGO_SCRIPT_YI" name="Yi" />
      <member cname="PANGO_SCRIPT_TAGALOG" name="Tagalog" />
      <member cname="PANGO_SCRIPT_HANUNOO" name="Hanunoo" />
      <member cname="PANGO_SCRIPT_BUHID" name="Buhid" />
      <member cname="PANGO_SCRIPT_TAGBANWA" name="Tagbanwa" />
      <member cname="PANGO_SCRIPT_BRAILLE" name="Braille" />
      <member cname="PANGO_SCRIPT_CYPRIOT" name="Cypriot" />
      <member cname="PANGO_SCRIPT_LIMBU" name="Limbu" />
      <member cname="PANGO_SCRIPT_OSMANYA" name="Osmanya" />
      <member cname="PANGO_SCRIPT_SHAVIAN" name="Shavian" />
      <member cname="PANGO_SCRIPT_LINEAR_B" name="LinearB" />
      <member cname="PANGO_SCRIPT_TAI_LE" name="TaiLe" />
      <member cname="PANGO_SCRIPT_UGARITIC" name="Ugaritic" />
      <member cname="PANGO_SCRIPT_NEW_TAI_LUE" name="NewTaiLue" />
      <member cname="PANGO_SCRIPT_BUGINESE" name="Buginese" />
      <member cname="PANGO_SCRIPT_GLAGOLITIC" name="Glagolitic" />
      <member cname="PANGO_SCRIPT_TIFINAGH" name="Tifinagh" />
      <member cname="PANGO_SCRIPT_SYLOTI_NAGRI" name="SylotiNagri" />
      <member cname="PANGO_SCRIPT_OLD_PERSIAN" name="OldPersian" />
      <member cname="PANGO_SCRIPT_KHAROSHTHI" name="Kharoshthi" />
      <member cname="PANGO_SCRIPT_UNKNOWN" name="Unknown" />
      <member cname="PANGO_SCRIPT_BALINESE" name="Balinese" />
      <member cname="PANGO_SCRIPT_CUNEIFORM" name="Cuneiform" />
      <member cname="PANGO_SCRIPT_PHOENICIAN" name="Phoenician" />
      <member cname="PANGO_SCRIPT_PHAGS_PA" name="PhagsPa" />
      <member cname="PANGO_SCRIPT_NKO" name="Nko" />
    </enum>
    <enum name="Stretch" cname="PangoStretch" type="enum">
      <member cname="PANGO_STRETCH_ULTRA_CONDENSED" name="UltraCondensed" />
      <member cname="PANGO_STRETCH_EXTRA_CONDENSED" name="ExtraCondensed" />
      <member cname="PANGO_STRETCH_CONDENSED" name="Condensed" />
      <member cname="PANGO_STRETCH_SEMI_CONDENSED" name="SemiCondensed" />
      <member cname="PANGO_STRETCH_NORMAL" name="Normal" />
      <member cname="PANGO_STRETCH_SEMI_EXPANDED" name="SemiExpanded" />
      <member cname="PANGO_STRETCH_EXPANDED" name="Expanded" />
      <member cname="PANGO_STRETCH_EXTRA_EXPANDED" name="ExtraExpanded" />
      <member cname="PANGO_STRETCH_ULTRA_EXPANDED" name="UltraExpanded" />
    </enum>
    <enum name="Style" cname="PangoStyle" type="enum">
      <member cname="PANGO_STYLE_NORMAL" name="Normal" />
      <member cname="PANGO_STYLE_OBLIQUE" name="Oblique" />
      <member cname="PANGO_STYLE_ITALIC" name="Italic" />
    </enum>
    <enum name="TabAlign" cname="PangoTabAlign" type="enum">
      <member cname="PANGO_TAB_LEFT" name="Left" />
    </enum>
    <enum name="Underline" cname="PangoUnderline" type="enum">
      <member cname="PANGO_UNDERLINE_NONE" name="None" />
      <member cname="PANGO_UNDERLINE_SINGLE" name="Single" />
      <member cname="PANGO_UNDERLINE_DOUBLE" name="Double" />
      <member cname="PANGO_UNDERLINE_LOW" name="Low" />
      <member cname="PANGO_UNDERLINE_ERROR" name="Error" />
    </enum>
    <enum name="Variant" cname="PangoVariant" type="enum">
      <member cname="PANGO_VARIANT_NORMAL" name="Normal" />
      <member cname="PANGO_VARIANT_SMALL_CAPS" name="SmallCaps" />
    </enum>
    <enum name="Weight" cname="PangoWeight" type="enum">
      <member cname="PANGO_WEIGHT_ULTRALIGHT" name="Ultralight" value="200" />
      <member cname="PANGO_WEIGHT_LIGHT" name="Light" value="300" />
      <member cname="PANGO_WEIGHT_NORMAL" name="Normal" value="400" />
      <member cname="PANGO_WEIGHT_SEMIBOLD" name="Semibold" value="600" />
      <member cname="PANGO_WEIGHT_BOLD" name="Bold" value="700" />
      <member cname="PANGO_WEIGHT_ULTRABOLD" name="Ultrabold" value="800" />
      <member cname="PANGO_WEIGHT_HEAVY" name="Heavy" value="900" />
    </enum>
    <enum name="WrapMode" cname="PangoWrapMode" type="enum">
      <member cname="PANGO_WRAP_WORD" name="Word" />
      <member cname="PANGO_WRAP_CHAR" name="Char" />
      <member cname="PANGO_WRAP_WORD_CHAR" name="WordChar" />
    </enum>
    <callback name="AttrDataCopyFunc" cname="PangoAttrDataCopyFunc">
      <return-type type="gpointer" />
      <parameters>
        <parameter type="gconstpointer" name="data" />
      </parameters>
    </callback>
    <callback name="AttrFilterFunc" cname="PangoAttrFilterFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="PangoAttribute*" name="attribute" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="FT2SubstituteFunc" cname="PangoFT2SubstituteFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="FcPattern*" name="pattern" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="FcDecoderFindFunc" cname="PangoFcDecoderFindFunc">
      <return-type type="PangoFcDecoder*" />
      <parameters>
        <parameter type="FcPattern*" name="pattern" />
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <callback name="FontsetForeachFunc" cname="PangoFontsetForeachFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="PangoFontset*" name="fontset" />
        <parameter type="PangoFont*" name="font" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="FreeGCFunc" cname="PangoFreeGCFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="PangoContext*" name="context" />
        <parameter type="GC" name="gc" />
      </parameters>
    </callback>
    <callback name="GetGCFunc" cname="PangoGetGCFunc">
      <return-type type="GC" />
      <parameters>
        <parameter type="PangoContext*" name="context" />
        <parameter type="PangoColor*" name="color" />
        <parameter type="GC" name="base_gc" />
      </parameters>
    </callback>
    <callback name="XftSubstituteFunc" cname="PangoXftSubstituteFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="FcPattern*" name="pattern" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <object name="CairoFontMap" cname="PangoCairoFontMap">
      <method name="CreateContext" cname="pango_cairo_font_map_create_context">
        <return-type type="PangoContext*" />
      </method>
      <method name="GetDefault" cname="pango_cairo_font_map_get_default" shared="true">
        <return-type type="PangoFontMap*" />
      </method>
      <method name="GetResolution" cname="pango_cairo_font_map_get_resolution">
        <return-type type="double" />
      </method>
      <method name="GetType" cname="pango_cairo_font_map_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="pango_cairo_font_map_new" />
      <method name="SetResolution" cname="pango_cairo_font_map_set_resolution">
        <return-type type="void" />
        <parameters>
          <parameter type="double" name="dpi" />
        </parameters>
      </method>
    </object>
    <object name="Context" cname="PangoContext">
      <method name="GetBaseDir" cname="pango_context_get_base_dir">
        <return-type type="PangoDirection" />
      </method>
      <method name="GetBaseGravity" cname="pango_context_get_base_gravity">
        <return-type type="PangoGravity" />
      </method>
      <method name="GetFontDescription" cname="pango_context_get_font_description">
        <return-type type="PangoFontDescription*" />
      </method>
      <method name="GetFontMap" cname="pango_context_get_font_map">
        <return-type type="PangoFontMap*" />
      </method>
      <method name="GetGravity" cname="pango_context_get_gravity">
        <return-type type="PangoGravity" />
      </method>
      <method name="GetGravityHint" cname="pango_context_get_gravity_hint">
        <return-type type="PangoGravityHint" />
      </method>
      <method name="GetLanguage" cname="pango_context_get_language">
        <return-type type="PangoLanguage*" />
      </method>
      <method name="GetMatrix" cname="pango_context_get_matrix">
        <return-type type="const-PangoMatrix*" />
      </method>
      <method name="GetMetrics" cname="pango_context_get_metrics">
        <return-type type="PangoFontMetrics*" />
        <parameters>
          <parameter type="const-PangoFontDescription*" name="desc" />
          <parameter type="PangoLanguage*" name="language" />
        </parameters>
      </method>
      <method name="GetType" cname="pango_context_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ListFamilies" cname="pango_context_list_families">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoFontFamily***" name="families" />
          <parameter type="int*" name="n_families" />
        </parameters>
      </method>
      <method name="LoadFont" cname="pango_context_load_font">
        <return-type type="PangoFont*" />
        <parameters>
          <parameter type="const-PangoFontDescription*" name="desc" />
        </parameters>
      </method>
      <method name="LoadFontset" cname="pango_context_load_fontset">
        <return-type type="PangoFontset*" />
        <parameters>
          <parameter type="const-PangoFontDescription*" name="desc" />
          <parameter type="PangoLanguage*" name="language" />
        </parameters>
      </method>
      <method name="SetBaseDir" cname="pango_context_set_base_dir">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoDirection" name="direction" />
        </parameters>
      </method>
      <method name="SetBaseGravity" cname="pango_context_set_base_gravity">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoGravity" name="gravity" />
        </parameters>
      </method>
      <method name="SetFontDescription" cname="pango_context_set_font_description">
        <return-type type="void" />
        <parameters>
          <parameter type="const-PangoFontDescription*" name="desc" />
        </parameters>
      </method>
      <method name="SetGravityHint" cname="pango_context_set_gravity_hint">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoGravityHint" name="hint" />
        </parameters>
      </method>
      <method name="SetLanguage" cname="pango_context_set_language">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoLanguage*" name="language" />
        </parameters>
      </method>
      <method name="SetMatrix" cname="pango_context_set_matrix">
        <return-type type="void" />
        <parameters>
          <parameter type="const-PangoMatrix*" name="matrix" />
        </parameters>
      </method>
    </object>
    <object name="FcDecoder" cname="PangoFcDecoder" parent="GObject">
      <method name="GetCharset" cname="pango_fc_decoder_get_charset">
        <return-type type="FcCharSet*" />
        <parameters>
          <parameter type="PangoFcFont*" name="fcfont" />
        </parameters>
      </method>
      <method name="GetGlyph" cname="pango_fc_decoder_get_glyph">
        <return-type type="PangoGlyph" />
        <parameters>
          <parameter type="PangoFcFont*" name="fcfont" />
          <parameter type="guint32" name="wc" />
        </parameters>
      </method>
      <method name="GetType" cname="pango_fc_decoder_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <object name="FcFont" cname="PangoFcFont" parent="PangoFont">
      <method name="DescriptionFromPattern" cname="pango_fc_font_description_from_pattern" shared="true">
        <return-type type="PangoFontDescription*" />
        <parameters>
          <parameter type="FcPattern*" name="pattern" />
          <parameter type="gboolean" name="include_size" />
        </parameters>
      </method>
      <method name="GetType" cname="pango_fc_font_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="LockFace" cname="pango_fc_font_lock_face">
        <return-type type="FT_Face" />
      </method>
      <method name="UnlockFace" cname="pango_fc_font_unlock_face">
        <return-type type="void" />
      </method>
    </object>
    <object name="FcFontMap" cname="PangoFcFontMap" parent="PangoFontMap">
      <method name="AddDecoderFindFunc" cname="pango_fc_font_map_add_decoder_find_func">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoFcDecoderFindFunc" name="findfunc" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="dnotify" />
        </parameters>
      </method>
      <method name="GetType" cname="pango_fc_font_map_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <object name="Font" cname="PangoFont" parent="GObject">
      <method name="Describe" cname="pango_font_describe">
        <return-type type="PangoFontDescription*" />
      </method>
      <method name="DescribeWithAbsoluteSize" cname="pango_font_describe_with_absolute_size">
        <return-type type="PangoFontDescription*" />
      </method>
      <method name="DescriptionsFree" cname="pango_font_descriptions_free" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoFontDescription**" name="descs" />
          <parameter type="int" name="n_descs" />
        </parameters>
      </method>
      <method name="FindShaper" cname="pango_font_find_shaper">
        <return-type type="PangoEngineShape*" />
        <parameters>
          <parameter type="PangoLanguage*" name="language" />
          <parameter type="guint32" name="ch" />
        </parameters>
      </method>
      <method name="GetCoverage" cname="pango_font_get_coverage">
        <return-type type="PangoCoverage*" />
        <parameters>
          <parameter type="PangoLanguage*" name="language" />
        </parameters>
      </method>
      <method name="GetFontMap" cname="pango_font_get_font_map">
        <return-type type="PangoFontMap*" />
      </method>
      <method name="GetGlyphExtents" cname="pango_font_get_glyph_extents">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoGlyph" name="glyph" />
          <parameter type="PangoRectangle*" name="ink_rect" />
          <parameter type="PangoRectangle*" name="logical_rect" />
        </parameters>
      </method>
      <method name="GetMetrics" cname="pango_font_get_metrics">
        <return-type type="PangoFontMetrics*" />
        <parameters>
          <parameter type="PangoLanguage*" name="language" />
        </parameters>
      </method>
      <method name="GetType" cname="pango_font_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <object name="Fontset" cname="PangoFontset" parent="GObject">
      <method name="Foreach" cname="pango_fontset_foreach">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoFontsetForeachFunc" name="func" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="GetFont" cname="pango_fontset_get_font">
        <return-type type="PangoFont*" />
        <parameters>
          <parameter type="guint" name="wc" />
        </parameters>
      </method>
      <method name="GetMetrics" cname="pango_fontset_get_metrics">
        <return-type type="PangoFontMetrics*" />
      </method>
      <method name="GetType" cname="pango_fontset_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <object name="FontFace" cname="PangoFontFace" parent="GObject">
      <method name="Describe" cname="pango_font_face_describe">
        <return-type type="PangoFontDescription*" />
      </method>
      <method name="GetFaceName" cname="pango_font_face_get_face_name">
        <return-type type="const-char*" />
      </method>
      <method name="GetType" cname="pango_font_face_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ListSizes" cname="pango_font_face_list_sizes">
        <return-type type="void" />
        <parameters>
          <parameter type="int**" name="sizes" />
          <parameter type="int*" name="n_sizes" />
        </parameters>
      </method>
    </object>
    <object name="FontFamily" cname="PangoFontFamily" parent="GObject">
      <method name="GetName" cname="pango_font_family_get_name">
        <return-type type="const-char*" />
      </method>
      <method name="GetType" cname="pango_font_family_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="IsMonospace" cname="pango_font_family_is_monospace">
        <return-type type="gboolean" />
      </method>
      <method name="ListFaces" cname="pango_font_family_list_faces">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoFontFace***" name="faces" />
          <parameter type="int*" name="n_faces" />
        </parameters>
      </method>
    </object>
    <object name="FontMap" cname="PangoFontMap" parent="GObject">
      <method name="GetType" cname="pango_font_map_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ListFamilies" cname="pango_font_map_list_families">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoFontFamily***" name="families" />
          <parameter type="int*" name="n_families" />
        </parameters>
      </method>
      <method name="LoadFont" cname="pango_font_map_load_font">
        <return-type type="PangoFont*" />
        <parameters>
          <parameter type="PangoContext*" name="context" />
          <parameter type="const-PangoFontDescription*" name="desc" />
        </parameters>
      </method>
      <method name="LoadFontset" cname="pango_font_map_load_fontset">
        <return-type type="PangoFontset*" />
        <parameters>
          <parameter type="PangoContext*" name="context" />
          <parameter type="const-PangoFontDescription*" name="desc" />
          <parameter type="PangoLanguage*" name="language" />
        </parameters>
      </method>
    </object>
    <object name="FT2FontMap" cname="PangoFT2FontMap">
      <method name="CreateContext" cname="pango_ft2_font_map_create_context">
        <return-type type="PangoContext*" />
      </method>
      <method name="ForDisplay" cname="pango_ft2_font_map_for_display" deprecated="1" shared="true">
        <return-type type="PangoFontMap*" />
      </method>
      <method name="GetType" cname="pango_ft2_font_map_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="pango_ft2_font_map_new" />
      <method name="SetDefaultSubstitute" cname="pango_ft2_font_map_set_default_substitute">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoFT2SubstituteFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GDestroyNotify" name="notify" />
        </parameters>
      </method>
      <method name="SetResolution" cname="pango_ft2_font_map_set_resolution">
        <return-type type="void" />
        <parameters>
          <parameter type="double" name="dpi_x" />
          <parameter type="double" name="dpi_y" />
        </parameters>
      </method>
      <method name="SubstituteChanged" cname="pango_ft2_font_map_substitute_changed">
        <return-type type="void" />
      </method>
    </object>
    <object name="Layout" cname="PangoLayout">
      <method name="ContextChanged" cname="pango_layout_context_changed">
        <return-type type="void" />
      </method>
      <method name="Copy" cname="pango_layout_copy">
        <return-type type="PangoLayout*" owned="true" />
      </method>
      <method name="GetAlignment" cname="pango_layout_get_alignment">
        <return-type type="PangoAlignment" />
      </method>
      <method name="GetAttributes" cname="pango_layout_get_attributes">
        <return-type type="PangoAttrList*" />
      </method>
      <method name="GetAutoDir" cname="pango_layout_get_auto_dir">
        <return-type type="gboolean" />
      </method>
      <method name="GetContext" cname="pango_layout_get_context">
        <return-type type="PangoContext*" />
      </method>
      <method name="GetCursorPos" cname="pango_layout_get_cursor_pos">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="index_" />
          <parameter type="PangoRectangle*" name="strong_pos" />
          <parameter type="PangoRectangle*" name="weak_pos" />
        </parameters>
      </method>
      <method name="GetEllipsize" cname="pango_layout_get_ellipsize">
        <return-type type="PangoEllipsizeMode" />
      </method>
      <method name="GetExtents" cname="pango_layout_get_extents">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoRectangle*" name="ink_rect" />
          <parameter type="PangoRectangle*" name="logical_rect" />
        </parameters>
      </method>
      <method name="GetFontDescription" cname="pango_layout_get_font_description">
        <return-type type="const-PangoFontDescription*" />
      </method>
      <method name="GetIndent" cname="pango_layout_get_indent">
        <return-type type="int" />
      </method>
      <method name="GetIter" cname="pango_layout_get_iter">
        <return-type type="PangoLayoutIter*" />
      </method>
      <method name="GetJustify" cname="pango_layout_get_justify">
        <return-type type="gboolean" />
      </method>
      <method name="GetLine" cname="pango_layout_get_line">
        <return-type type="PangoLayoutLine*" />
        <parameters>
          <parameter type="int" name="line" />
        </parameters>
      </method>
      <method name="GetLineCount" cname="pango_layout_get_line_count">
        <return-type type="int" />
      </method>
      <method name="GetLineReadonly" cname="pango_layout_get_line_readonly">
        <return-type type="PangoLayoutLine*" />
        <parameters>
          <parameter type="int" name="line" />
        </parameters>
      </method>
      <method name="GetLines" cname="pango_layout_get_lines">
        <return-type type="GSList*" />
      </method>
      <method name="GetLinesReadonly" cname="pango_layout_get_lines_readonly">
        <return-type type="GSList*" />
      </method>
      <method name="GetLogAttrs" cname="pango_layout_get_log_attrs">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoLogAttr**" name="attrs" />
          <parameter type="gint*" name="n_attrs" />
        </parameters>
      </method>
      <method name="GetPixelExtents" cname="pango_layout_get_pixel_extents">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoRectangle*" name="ink_rect" />
          <parameter type="PangoRectangle*" name="logical_rect" />
        </parameters>
      </method>
      <method name="GetPixelSize" cname="pango_layout_get_pixel_size">
        <return-type type="void" />
        <parameters>
          <parameter type="int*" name="width" />
          <parameter type="int*" name="height" />
        </parameters>
      </method>
      <method name="GetSingleParagraphMode" cname="pango_layout_get_single_paragraph_mode">
        <return-type type="gboolean" />
      </method>
      <method name="GetSize" cname="pango_layout_get_size">
        <return-type type="void" />
        <parameters>
          <parameter type="int*" name="width" />
          <parameter type="int*" name="height" />
        </parameters>
      </method>
      <method name="GetSpacing" cname="pango_layout_get_spacing">
        <return-type type="int" />
      </method>
      <method name="GetTabs" cname="pango_layout_get_tabs">
        <return-type type="PangoTabArray*" />
      </method>
      <method name="GetText" cname="pango_layout_get_text">
        <return-type type="const-char*" />
      </method>
      <method name="GetType" cname="pango_layout_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUnknownGlyphsCount" cname="pango_layout_get_unknown_glyphs_count">
        <return-type type="int" />
      </method>
      <method name="GetWidth" cname="pango_layout_get_width">
        <return-type type="int" />
      </method>
      <method name="GetWrap" cname="pango_layout_get_wrap">
        <return-type type="PangoWrapMode" />
      </method>
      <method name="IndexToLineX" cname="pango_layout_index_to_line_x">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="index_" />
          <parameter type="gboolean" name="trailing" />
          <parameter type="int*" name="line" />
          <parameter type="int*" name="x_pos" />
        </parameters>
      </method>
      <method name="IndexToPos" cname="pango_layout_index_to_pos">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="index_" />
          <parameter type="PangoRectangle*" name="pos" />
        </parameters>
      </method>
      <method name="IsEllipsized" cname="pango_layout_is_ellipsized">
        <return-type type="gboolean" />
      </method>
      <method name="IsWrapped" cname="pango_layout_is_wrapped">
        <return-type type="gboolean" />
      </method>
      <method name="MoveCursorVisually" cname="pango_layout_move_cursor_visually">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="strong" />
          <parameter type="int" name="old_index" />
          <parameter type="int" name="old_trailing" />
          <parameter type="int" name="direction" />
          <parameter type="int*" name="new_index" />
          <parameter type="int*" name="new_trailing" />
        </parameters>
      </method>
      <constructor cname="pango_layout_new">
        <parameters>
          <parameter type="PangoContext*" name="context" />
        </parameters>
      </constructor>
      <method name="SetAlignment" cname="pango_layout_set_alignment">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoAlignment" name="alignment" />
        </parameters>
      </method>
      <method name="SetAttributes" cname="pango_layout_set_attributes">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoAttrList*" name="attrs" />
        </parameters>
      </method>
      <method name="SetAutoDir" cname="pango_layout_set_auto_dir">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="auto_dir" />
        </parameters>
      </method>
      <method name="SetEllipsize" cname="pango_layout_set_ellipsize">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoEllipsizeMode" name="ellipsize" />
        </parameters>
      </method>
      <method name="SetFontDescription" cname="pango_layout_set_font_description">
        <return-type type="void" />
        <parameters>
          <parameter type="const-PangoFontDescription*" name="desc" />
        </parameters>
      </method>
      <method name="SetIndent" cname="pango_layout_set_indent">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="indent" />
        </parameters>
      </method>
      <method name="SetJustify" cname="pango_layout_set_justify">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="justify" />
        </parameters>
      </method>
      <method name="SetMarkup" cname="pango_layout_set_markup">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="markup" />
          <parameter type="int" name="length" />
        </parameters>
      </method>
      <method name="SetMarkupWithAccel" cname="pango_layout_set_markup_with_accel">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="markup" />
          <parameter type="int" name="length" />
          <parameter type="gunichar" name="accel_marker" />
          <parameter type="gunichar*" name="accel_char" />
        </parameters>
      </method>
      <method name="SetSingleParagraphMode" cname="pango_layout_set_single_paragraph_mode">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetSpacing" cname="pango_layout_set_spacing">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="spacing" />
        </parameters>
      </method>
      <method name="SetTabs" cname="pango_layout_set_tabs">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoTabArray*" name="tabs" />
        </parameters>
      </method>
      <method name="SetText" cname="pango_layout_set_text">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="text" />
          <parameter type="int" name="length" />
        </parameters>
      </method>
      <method name="SetWidth" cname="pango_layout_set_width">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="width" />
        </parameters>
      </method>
      <method name="SetWrap" cname="pango_layout_set_wrap">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoWrapMode" name="wrap" />
        </parameters>
      </method>
      <method name="XyToIndex" cname="pango_layout_xy_to_index">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="int" name="x" />
          <parameter type="int" name="y" />
          <parameter type="int*" name="index_" />
          <parameter type="int*" name="trailing" />
        </parameters>
      </method>
    </object>
    <object name="Renderer" cname="PangoRenderer" parent="GObject">
      <field name="Underline" cname="underline" type="PangoUnderline" />
      <field name="Strikethrough" cname="strikethrough" type="gboolean" />
      <field name="ActiveCount" cname="active_count" type="int" />
      <field name="Matrix" cname="matrix" type="PangoMatrix*" access="public" />
      <field name="Priv" cname="priv" type="PangoRendererPrivate*" />
      <method name="Activate" cname="pango_renderer_activate">
        <return-type type="void" />
      </method>
      <method name="Deactivate" cname="pango_renderer_deactivate">
        <return-type type="void" />
      </method>
      <method name="DrawErrorUnderline" cname="pango_renderer_draw_error_underline">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="x" />
          <parameter type="int" name="y" />
          <parameter type="int" name="width" />
          <parameter type="int" name="height" />
        </parameters>
      </method>
      <method name="DrawGlyph" cname="pango_renderer_draw_glyph">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoFont*" name="font" />
          <parameter type="PangoGlyph" name="glyph" />
          <parameter type="double" name="x" />
          <parameter type="double" name="y" />
        </parameters>
      </method>
      <method name="DrawGlyphs" cname="pango_renderer_draw_glyphs">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoFont*" name="font" />
          <parameter type="PangoGlyphString*" name="glyphs" />
          <parameter type="int" name="x" />
          <parameter type="int" name="y" />
        </parameters>
      </method>
      <method name="DrawLayout" cname="pango_renderer_draw_layout">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoLayout*" name="layout" />
          <parameter type="int" name="x" />
          <parameter type="int" name="y" />
        </parameters>
      </method>
      <method name="DrawLayoutLine" cname="pango_renderer_draw_layout_line">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoLayoutLine*" name="line" />
          <parameter type="int" name="x" />
          <parameter type="int" name="y" />
        </parameters>
      </method>
      <method name="DrawRectangle" cname="pango_renderer_draw_rectangle">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoRenderPart" name="part" />
          <parameter type="int" name="x" />
          <parameter type="int" name="y" />
          <parameter type="int" name="width" />
          <parameter type="int" name="height" />
        </parameters>
      </method>
      <method name="DrawTrapezoid" cname="pango_renderer_draw_trapezoid">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoRenderPart" name="part" />
          <parameter type="double" name="y1_" />
          <parameter type="double" name="x11" />
          <parameter type="double" name="x21" />
          <parameter type="double" name="y2" />
          <parameter type="double" name="x12" />
          <parameter type="double" name="x22" />
        </parameters>
      </method>
      <method name="GetColor" cname="pango_renderer_get_color">
        <return-type type="PangoColor*" />
        <parameters>
          <parameter type="PangoRenderPart" name="part" />
        </parameters>
      </method>
      <method name="GetMatrix" cname="pango_renderer_get_matrix">
        <return-type type="const-PangoMatrix*" />
      </method>
      <method name="GetType" cname="pango_renderer_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="PartChanged" cname="pango_renderer_part_changed">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoRenderPart" name="part" />
        </parameters>
      </method>
      <method name="SetColor" cname="pango_renderer_set_color">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoRenderPart" name="part" />
          <parameter type="const-PangoColor*" name="color" />
        </parameters>
      </method>
      <method name="SetMatrix" cname="pango_renderer_set_matrix">
        <return-type type="void" />
        <parameters>
          <parameter type="const-PangoMatrix*" name="matrix" />
        </parameters>
      </method>
    </object>
    <object name="XftFont" cname="PangoXftFont">
      <method name="GetType" cname="pango_xft_font_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <object name="XftFontMap" cname="PangoXftFontMap">
      <method name="GetType" cname="pango_xft_font_map_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <object name="XftRenderer" cname="PangoXftRenderer" parent="PangoRenderer">
      <field name="Display" cname="display" type="Display*" />
      <field name="Screen" cname="screen" type="int" />
      <field name="Draw" cname="draw" type="XftDraw*" />
      <field name="Priv" cname="priv" type="PangoXftRendererPrivate*" />
      <method name="GetType" cname="pango_xft_renderer_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="pango_xft_renderer_new">
        <parameters>
          <parameter type="Display*" name="display" />
          <parameter type="int" name="screen" />
        </parameters>
      </constructor>
      <method name="SetDefaultColor" cname="pango_xft_renderer_set_default_color">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoColor*" name="default_color" />
        </parameters>
      </method>
      <method name="SetDraw" cname="pango_xft_renderer_set_draw">
        <return-type type="void" />
        <parameters>
          <parameter type="XftDraw*" name="draw" />
        </parameters>
      </method>
    </object>
    <struct name="Analysis" cname="PangoAnalysis">
      <field name="ShapeEngine" cname="shape_engine" type="PangoEngineShape*" />
      <field name="LangEngine" cname="lang_engine" type="PangoEngineLang*" />
      <field name="Font" cname="font" type="PangoFont*" />
      <field name="Level" cname="level" type="guint8" />
      <field name="Gravity" cname="gravity" type="guint8" />
      <field name="Flags" cname="flags" type="guint8" />
      <field name="Language" cname="language" type="PangoLanguage*" />
      <field name="ExtraAttrs" cname="extra_attrs" type="GSList*" />
    </struct>
    <struct name="AttrClass" cname="PangoAttrClass">
      <field name="Type" cname="type" type="PangoAttrType" />
      <callback cname="copy">
        <return-type type="PangoAttribute*" />
        <parameters>
          <parameter type="const-PangoAttribute*" name="attr" />
        </parameters>
      </callback>
      <callback cname="destroy">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoAttribute*" name="attr" />
        </parameters>
      </callback>
      <callback cname="equal">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-PangoAttribute*" name="attr1," />
        </parameters>
      </callback>
    </struct>
    <struct name="AttrColor" cname="PangoAttrColor">
      <field name="Attr" cname="attr" type="PangoAttribute" />
      <field name="Color" cname="color" type="PangoColor" />
    </struct>
    <struct name="AttrFloat" cname="PangoAttrFloat">
      <field name="Attr" cname="attr" type="PangoAttribute" />
      <field name="Value" cname="value" type="double" />
    </struct>
    <struct name="AttrFontDesc" cname="PangoAttrFontDesc" opaque="true">
      <field name="Attr" cname="attr" type="PangoAttribute" access="public" writeable="true" />
      <field name="Desc" cname="desc" type="PangoFontDescription*" access="public" writeable="true" />
      <constructor cname="pango_attr_font_desc_new">
        <parameters>
          <parameter type="const-PangoFontDescription*" name="desc" />
        </parameters>
      </constructor>
    </struct>
    <struct name="AttrInt" cname="PangoAttrInt">
      <field name="Attr" cname="attr" type="PangoAttribute" />
      <field name="Value" cname="value" type="int" />
    </struct>
    <struct name="AttrIterator" cname="PangoAttrIterator" opaque="true">
      <method name="Copy" cname="pango_attr_iterator_copy">
        <return-type type="PangoAttrIterator*" owned="true" />
      </method>
      <method name="Destroy" cname="pango_attr_iterator_destroy">
        <return-type type="void" />
      </method>
      <method name="Get" cname="pango_attr_iterator_get">
        <return-type type="PangoAttribute*" />
        <parameters>
          <parameter type="PangoAttrType" name="type" />
        </parameters>
      </method>
      <method name="GetAttrs" cname="pango_attr_iterator_get_attrs">
        <return-type type="GSList*" />
      </method>
      <method name="GetFont" cname="pango_attr_iterator_get_font">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoFontDescription*" name="desc" />
          <parameter type="PangoLanguage**" name="language" />
          <parameter type="GSList**" name="extra_attrs" />
        </parameters>
      </method>
      <method name="Next" cname="pango_attr_iterator_next">
        <return-type type="gboolean" />
      </method>
      <method name="Range" cname="pango_attr_iterator_range">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="start" />
          <parameter type="gint*" name="end" />
        </parameters>
      </method>
    </struct>
    <struct name="AttrLanguage" cname="PangoAttrLanguage" opaque="true">
      <field name="Attr" cname="attr" type="PangoAttribute" access="public" writeable="true" />
      <field name="Value" cname="value" type="PangoLanguage*" access="public" writeable="true" />
      <constructor cname="pango_attr_language_new">
        <parameters>
          <parameter type="PangoLanguage*" name="language" />
        </parameters>
      </constructor>
    </struct>
    <struct name="AttrList" cname="PangoAttrList" opaque="true">
      <method name="Change" cname="pango_attr_list_change">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoAttribute*" name="attr" />
        </parameters>
      </method>
      <method name="Copy" cname="pango_attr_list_copy">
        <return-type type="PangoAttrList*" owned="true" />
      </method>
      <method name="Filter" cname="pango_attr_list_filter">
        <return-type type="PangoAttrList*" />
        <parameters>
          <parameter type="PangoAttrFilterFunc" name="func" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="GetIterator" cname="pango_attr_list_get_iterator">
        <return-type type="PangoAttrIterator*" />
      </method>
      <method name="GetType" cname="pango_attr_list_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Insert" cname="pango_attr_list_insert">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoAttribute*" name="attr" />
        </parameters>
      </method>
      <method name="InsertBefore" cname="pango_attr_list_insert_before">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoAttribute*" name="attr" />
        </parameters>
      </method>
      <constructor cname="pango_attr_list_new" />
      <method name="Ref" cname="pango_attr_list_ref">
        <return-type type="PangoAttrList*" />
      </method>
      <method name="Splice" cname="pango_attr_list_splice">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoAttrList*" name="other" />
          <parameter type="gint" name="pos" />
          <parameter type="gint" name="len" />
        </parameters>
      </method>
      <method name="Unref" cname="pango_attr_list_unref">
        <return-type type="void" />
      </method>
    </struct>
    <struct name="AttrShape" cname="PangoAttrShape" opaque="true">
      <field name="Attr" cname="attr" type="PangoAttribute" access="public" writeable="true" />
      <field name="InkRect" cname="ink_rect" type="PangoRectangle" access="public" writeable="true" />
      <field name="LogicalRect" cname="logical_rect" type="PangoRectangle" access="public" writeable="true" />
      <field name="Data" cname="data" type="gpointer" access="public" writeable="true" />
      <field name="CopyFunc" cname="copy_func" type="PangoAttrDataCopyFunc" access="public" writeable="true" />
      <field name="DestroyFunc" cname="destroy_func" type="GDestroyNotify" access="public" writeable="true" />
      <constructor cname="pango_attr_shape_new">
        <parameters>
          <parameter type="const-PangoRectangle*" name="ink_rect" />
          <parameter type="const-PangoRectangle*" name="logical_rect" />
        </parameters>
      </constructor>
      <constructor cname="pango_attr_shape_new_with_data">
        <parameters>
          <parameter type="const-PangoRectangle*" name="ink_rect" />
          <parameter type="const-PangoRectangle*" name="logical_rect" />
          <parameter type="gpointer" name="data" />
          <parameter type="PangoAttrDataCopyFunc" name="copy_func" />
          <parameter type="GDestroyNotify" name="destroy_func" />
        </parameters>
      </constructor>
    </struct>
    <struct name="AttrSize" cname="PangoAttrSize" opaque="true">
      <field name="Attr" cname="attr" type="PangoAttribute" access="public" writeable="true" />
      <field name="Size" cname="size" type="int" access="public" writeable="true" />
      <field name="Absolute" cname="absolute" bits="1" type="guint" access="public" writeable="true" />
      <constructor cname="pango_attr_size_new">
        <parameters>
          <parameter type="int" name="size" />
        </parameters>
      </constructor>
      <constructor cname="pango_attr_size_new_absolute">
        <parameters>
          <parameter type="int" name="size" />
        </parameters>
      </constructor>
    </struct>
    <struct name="AttrString" cname="PangoAttrString">
      <field name="Attr" cname="attr" type="PangoAttribute" />
      <field name="Value" cname="value" type="char*" />
    </struct>
    <struct name="Attribute" cname="PangoAttribute" opaque="true">
      <field name="Klass" cname="klass" type="const-PangoAttrClass*" access="public" writeable="true" />
      <field name="StartIndex" cname="start_index" type="guint" access="public" writeable="true" />
      <field name="EndIndex" cname="end_index" type="guint" access="public" writeable="true" />
      <method name="Copy" cname="pango_attribute_copy">
        <return-type type="PangoAttribute*" owned="true" />
      </method>
      <method name="Destroy" cname="pango_attribute_destroy">
        <return-type type="void" />
      </method>
      <method name="Equal" cname="pango_attribute_equal">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-PangoAttribute*" name="attr2" />
        </parameters>
      </method>
    </struct>
    <struct name="Color" cname="PangoColor">
      <field name="Red" cname="red" type="guint16" />
      <field name="Green" cname="green" type="guint16" />
      <field name="Blue" cname="blue" type="guint16" />
      <method name="Copy" cname="pango_color_copy">
        <return-type type="PangoColor*" owned="true" />
      </method>
      <method name="Free" cname="pango_color_free">
        <return-type type="void" />
      </method>
      <method name="GetType" cname="pango_color_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Parse" cname="pango_color_parse">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="spec" />
        </parameters>
      </method>
      <method name="ToString" cname="pango_color_to_string">
        <return-type type="gchar*" />
      </method>
    </struct>
    <struct name="Coverage" cname="PangoCoverage" opaque="true">
      <method name="Copy" cname="pango_coverage_copy">
        <return-type type="PangoCoverage*" owned="true" />
      </method>
      <method name="FromBytes" cname="pango_coverage_from_bytes" shared="true">
        <return-type type="PangoCoverage*" />
        <parameters>
          <parameter type="guchar*" name="bytes" />
          <parameter type="int" name="n_bytes" />
        </parameters>
      </method>
      <method name="Get" cname="pango_coverage_get">
        <return-type type="PangoCoverageLevel" />
        <parameters>
          <parameter type="int" name="index_" />
        </parameters>
      </method>
      <method name="Max" cname="pango_coverage_max">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoCoverage*" name="other" />
        </parameters>
      </method>
      <constructor cname="pango_coverage_new" />
      <method name="Ref" cname="pango_coverage_ref">
        <return-type type="PangoCoverage*" />
      </method>
      <method name="Set" cname="pango_coverage_set">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="index_" />
          <parameter type="PangoCoverageLevel" name="level" />
        </parameters>
      </method>
      <method name="ToBytes" cname="pango_coverage_to_bytes">
        <return-type type="void" />
        <parameters>
          <parameter type="guchar**" name="bytes" />
          <parameter type="int*" name="n_bytes" />
        </parameters>
      </method>
      <method name="Unref" cname="pango_coverage_unref">
        <return-type type="void" />
      </method>
    </struct>
    <struct name="EngineLang" cname="PangoEngineLang" opaque="true" />
    <struct name="EngineShape" cname="PangoEngineShape" opaque="true" />
    <struct name="FontDescription" cname="PangoFontDescription" opaque="true">
      <method name="BetterMatch" cname="pango_font_description_better_match">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-PangoFontDescription*" name="old_match" />
          <parameter type="const-PangoFontDescription*" name="new_match" />
        </parameters>
      </method>
      <method name="Copy" cname="pango_font_description_copy">
        <return-type type="PangoFontDescription*" owned="true" />
      </method>
      <method name="CopyStatic" cname="pango_font_description_copy_static">
        <return-type type="PangoFontDescription*" />
      </method>
      <method name="Equal" cname="pango_font_description_equal">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-PangoFontDescription*" name="desc2" />
        </parameters>
      </method>
      <method name="Free" cname="pango_font_description_free">
        <return-type type="void" />
      </method>
      <method name="FromString" cname="pango_font_description_from_string" shared="true">
        <return-type type="PangoFontDescription*" />
        <parameters>
          <parameter type="const-char*" name="str" />
        </parameters>
      </method>
      <method name="GetFamily" cname="pango_font_description_get_family">
        <return-type type="const-char*" />
      </method>
      <method name="GetGravity" cname="pango_font_description_get_gravity">
        <return-type type="PangoGravity" />
      </method>
      <method name="GetSetFields" cname="pango_font_description_get_set_fields">
        <return-type type="PangoFontMask" />
      </method>
      <method name="GetSize" cname="pango_font_description_get_size">
        <return-type type="gint" />
      </method>
      <method name="GetSizeIsAbsolute" cname="pango_font_description_get_size_is_absolute">
        <return-type type="gboolean" />
      </method>
      <method name="GetStretch" cname="pango_font_description_get_stretch">
        <return-type type="PangoStretch" />
      </method>
      <method name="GetStyle" cname="pango_font_description_get_style">
        <return-type type="PangoStyle" />
      </method>
      <method name="GetType" cname="pango_font_description_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVariant" cname="pango_font_description_get_variant">
        <return-type type="PangoVariant" />
      </method>
      <method name="GetWeight" cname="pango_font_description_get_weight">
        <return-type type="PangoWeight" />
      </method>
      <method name="Hash" cname="pango_font_description_hash">
        <return-type type="guint" />
      </method>
      <method name="Merge" cname="pango_font_description_merge">
        <return-type type="void" />
        <parameters>
          <parameter type="const-PangoFontDescription*" name="desc_to_merge" />
          <parameter type="gboolean" name="replace_existing" />
        </parameters>
      </method>
      <method name="MergeStatic" cname="pango_font_description_merge_static">
        <return-type type="void" />
        <parameters>
          <parameter type="const-PangoFontDescription*" name="desc_to_merge" />
          <parameter type="gboolean" name="replace_existing" />
        </parameters>
      </method>
      <constructor cname="pango_font_description_new" />
      <method name="SetAbsoluteSize" cname="pango_font_description_set_absolute_size">
        <return-type type="void" />
        <parameters>
          <parameter type="double" name="size" />
        </parameters>
      </method>
      <method name="SetFamily" cname="pango_font_description_set_family">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="family" />
        </parameters>
      </method>
      <method name="SetFamilyStatic" cname="pango_font_description_set_family_static">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="family" />
        </parameters>
      </method>
      <method name="SetGravity" cname="pango_font_description_set_gravity">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoGravity" name="gravity" />
        </parameters>
      </method>
      <method name="SetSize" cname="pango_font_description_set_size">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="size" />
        </parameters>
      </method>
      <method name="SetStretch" cname="pango_font_description_set_stretch">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoStretch" name="stretch" />
        </parameters>
      </method>
      <method name="SetStyle" cname="pango_font_description_set_style">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoStyle" name="style" />
        </parameters>
      </method>
      <method name="SetVariant" cname="pango_font_description_set_variant">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoVariant" name="variant" />
        </parameters>
      </method>
      <method name="SetWeight" cname="pango_font_description_set_weight">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoWeight" name="weight" />
        </parameters>
      </method>
      <method name="ToFilename" cname="pango_font_description_to_filename">
        <return-type type="char*" />
      </method>
      <method name="ToString" cname="pango_font_description_to_string">
        <return-type type="char*" />
      </method>
      <method name="UnsetFields" cname="pango_font_description_unset_fields">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoFontMask" name="to_unset" />
        </parameters>
      </method>
    </struct>
    <struct name="FontMetrics" cname="PangoFontMetrics" opaque="true">
      <method name="GetApproximateCharWidth" cname="pango_font_metrics_get_approximate_char_width">
        <return-type type="int" />
      </method>
      <method name="GetApproximateDigitWidth" cname="pango_font_metrics_get_approximate_digit_width">
        <return-type type="int" />
      </method>
      <method name="GetAscent" cname="pango_font_metrics_get_ascent">
        <return-type type="int" />
      </method>
      <method name="GetDescent" cname="pango_font_metrics_get_descent">
        <return-type type="int" />
      </method>
      <method name="GetStrikethroughPosition" cname="pango_font_metrics_get_strikethrough_position">
        <return-type type="int" />
      </method>
      <method name="GetStrikethroughThickness" cname="pango_font_metrics_get_strikethrough_thickness">
        <return-type type="int" />
      </method>
      <method name="GetType" cname="pango_font_metrics_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUnderlinePosition" cname="pango_font_metrics_get_underline_position">
        <return-type type="int" />
      </method>
      <method name="GetUnderlineThickness" cname="pango_font_metrics_get_underline_thickness">
        <return-type type="int" />
      </method>
      <method name="Ref" cname="pango_font_metrics_ref">
        <return-type type="PangoFontMetrics*" />
      </method>
      <method name="Unref" cname="pango_font_metrics_unref">
        <return-type type="void" />
      </method>
    </struct>
    <alias name="Glyph" cname="PangoGlyph" type="guint32" />
    <struct name="GlyphGeometry" cname="PangoGlyphGeometry">
      <field name="Width" cname="width" type="PangoGlyphUnit" />
      <field name="XOffset" cname="x_offset" type="PangoGlyphUnit" />
      <field name="YOffset" cname="y_offset" type="PangoGlyphUnit" />
    </struct>
    <struct name="GlyphInfo" cname="PangoGlyphInfo">
      <field name="Glyph" cname="glyph" type="PangoGlyph" />
      <field name="Geometry" cname="geometry" type="PangoGlyphGeometry" />
      <field name="Attr" cname="attr" type="PangoGlyphVisAttr" />
    </struct>
    <struct name="GlyphItem" cname="PangoGlyphItem">
      <field name="Item" cname="item" type="PangoItem*" />
      <field name="Glyphs" cname="glyphs" type="PangoGlyphString*" />
      <method name="ApplyAttrs" cname="pango_glyph_item_apply_attrs">
        <return-type type="GSList*" />
        <parameters>
          <parameter type="const-char*" name="text" />
          <parameter type="PangoAttrList*" name="list" />
        </parameters>
      </method>
      <method name="Free" cname="pango_glyph_item_free">
        <return-type type="void" />
      </method>
      <method name="LetterSpace" cname="pango_glyph_item_letter_space">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="text" />
          <parameter type="PangoLogAttr*" name="log_attrs" />
          <parameter type="int" name="letter_spacing" />
        </parameters>
      </method>
      <method name="Split" cname="pango_glyph_item_split">
        <return-type type="PangoGlyphItem*" />
        <parameters>
          <parameter type="const-char*" name="text" />
          <parameter type="int" name="split_index" />
        </parameters>
      </method>
    </struct>
    <struct name="GlyphString" cname="PangoGlyphString" opaque="true">
      <field name="NumGlyphs" cname="num_glyphs" type="gint" access="public" writeable="true" />
      <field name="Glyphs" cname="glyphs" type="PangoGlyphInfo*" access="public" writeable="true" />
      <field name="LogClusters" cname="log_clusters" type="gint*" access="public" writeable="true" />
      <field name="Space" cname="space" type="gint" access="private" />
      <method name="Copy" cname="pango_glyph_string_copy">
        <return-type type="PangoGlyphString*" owned="true" />
      </method>
      <method name="Extents" cname="pango_glyph_string_extents">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoFont*" name="font" />
          <parameter type="PangoRectangle*" name="ink_rect" />
          <parameter type="PangoRectangle*" name="logical_rect" />
        </parameters>
      </method>
      <method name="ExtentsRange" cname="pango_glyph_string_extents_range">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="start" />
          <parameter type="int" name="end" />
          <parameter type="PangoFont*" name="font" />
          <parameter type="PangoRectangle*" name="ink_rect" />
          <parameter type="PangoRectangle*" name="logical_rect" />
        </parameters>
      </method>
      <method name="Free" cname="pango_glyph_string_free">
        <return-type type="void" />
      </method>
      <method name="GetLogicalWidths" cname="pango_glyph_string_get_logical_widths">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="text" />
          <parameter type="int" name="length" />
          <parameter type="int" name="embedding_level" />
          <parameter type="int*" name="logical_widths" />
        </parameters>
      </method>
      <method name="GetType" cname="pango_glyph_string_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetWidth" cname="pango_glyph_string_get_width">
        <return-type type="int" />
      </method>
      <method name="IndexToX" cname="pango_glyph_string_index_to_x">
        <return-type type="void" />
        <parameters>
          <parameter type="char*" name="text" />
          <parameter type="int" name="length" />
          <parameter type="PangoAnalysis*" name="analysis" />
          <parameter type="int" name="index_" />
          <parameter type="gboolean" name="trailing" />
          <parameter type="int*" name="x_pos" />
        </parameters>
      </method>
      <constructor cname="pango_glyph_string_new" />
      <method name="SetSize" cname="pango_glyph_string_set_size">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="new_len" />
        </parameters>
      </method>
      <method name="XToIndex" cname="pango_glyph_string_x_to_index">
        <return-type type="void" />
        <parameters>
          <parameter type="char*" name="text" />
          <parameter type="int" name="length" />
          <parameter type="PangoAnalysis*" name="analysis" />
          <parameter type="int" name="x_pos" />
          <parameter type="int*" name="index_" />
          <parameter type="int*" name="trailing" />
        </parameters>
      </method>
    </struct>
    <alias name="GlyphUnit" cname="PangoGlyphUnit" type="gint32" />
    <struct name="GlyphVisAttr" cname="PangoGlyphVisAttr">
      <field name="IsClusterStart" cname="is_cluster_start" bits="1" type="guint" />
    </struct>
    <struct name="Item" cname="PangoItem" opaque="true">
      <field name="Offset" cname="offset" type="gint" access="public" writeable="true" />
      <field name="Length" cname="length" type="gint" access="public" writeable="true" />
      <field name="NumChars" cname="num_chars" type="gint" access="public" writeable="true" />
      <field name="Analysis" cname="analysis" type="PangoAnalysis" access="public" writeable="true" />
      <method name="Copy" cname="pango_item_copy">
        <return-type type="PangoItem*" owned="true" />
      </method>
      <method name="Free" cname="pango_item_free">
        <return-type type="void" />
      </method>
      <method name="GetType" cname="pango_item_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="pango_item_new" />
      <method name="Split" cname="pango_item_split">
        <return-type type="PangoItem*" />
        <parameters>
          <parameter type="int" name="split_index" />
          <parameter type="int" name="split_offset" />
        </parameters>
      </method>
    </struct>
    <struct name="Language" cname="PangoLanguage" opaque="true">
      <method name="FromString" cname="pango_language_from_string" shared="true">
        <return-type type="PangoLanguage*" />
        <parameters>
          <parameter type="const-char*" name="language" />
        </parameters>
      </method>
      <method name="GetDefault" cname="pango_language_get_default" shared="true">
        <return-type type="PangoLanguage*" />
      </method>
      <method name="GetSampleString" cname="pango_language_get_sample_string">
        <return-type type="const-char*" />
      </method>
      <method name="GetType" cname="pango_language_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="IncludesScript" cname="pango_language_includes_script">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="PangoScript" name="script" />
        </parameters>
      </method>
      <method name="Matches" cname="pango_language_matches">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="range_list" />
        </parameters>
      </method>
    </struct>
    <struct name="LayoutIter" cname="PangoLayoutIter" opaque="true">
      <method name="AtLastLine" cname="pango_layout_iter_at_last_line">
        <return-type type="gboolean" />
      </method>
      <method name="Free" cname="pango_layout_iter_free">
        <return-type type="void" />
      </method>
      <method name="GetBaseline" cname="pango_layout_iter_get_baseline">
        <return-type type="int" />
      </method>
      <method name="GetCharExtents" cname="pango_layout_iter_get_char_extents">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoRectangle*" name="logical_rect" />
        </parameters>
      </method>
      <method name="GetClusterExtents" cname="pango_layout_iter_get_cluster_extents">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoRectangle*" name="ink_rect" />
          <parameter type="PangoRectangle*" name="logical_rect" />
        </parameters>
      </method>
      <method name="GetIndex" cname="pango_layout_iter_get_index">
        <return-type type="int" />
      </method>
      <method name="GetLayoutExtents" cname="pango_layout_iter_get_layout_extents">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoRectangle*" name="ink_rect" />
          <parameter type="PangoRectangle*" name="logical_rect" />
        </parameters>
      </method>
      <method name="GetLine" cname="pango_layout_iter_get_line">
        <return-type type="PangoLayoutLine*" />
      </method>
      <method name="GetLineExtents" cname="pango_layout_iter_get_line_extents">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoRectangle*" name="ink_rect" />
          <parameter type="PangoRectangle*" name="logical_rect" />
        </parameters>
      </method>
      <method name="GetLineReadonly" cname="pango_layout_iter_get_line_readonly">
        <return-type type="PangoLayoutLine*" />
      </method>
      <method name="GetLineYrange" cname="pango_layout_iter_get_line_yrange">
        <return-type type="void" />
        <parameters>
          <parameter type="int*" name="y0_" />
          <parameter type="int*" name="y1_" />
        </parameters>
      </method>
      <method name="GetRun" cname="pango_layout_iter_get_run">
        <return-type type="PangoLayoutRun*" />
      </method>
      <method name="GetRunExtents" cname="pango_layout_iter_get_run_extents">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoRectangle*" name="ink_rect" />
          <parameter type="PangoRectangle*" name="logical_rect" />
        </parameters>
      </method>
      <method name="GetRunReadonly" cname="pango_layout_iter_get_run_readonly">
        <return-type type="PangoLayoutRun*" />
      </method>
      <method name="GetType" cname="pango_layout_iter_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="NextChar" cname="pango_layout_iter_next_char">
        <return-type type="gboolean" />
      </method>
      <method name="NextCluster" cname="pango_layout_iter_next_cluster">
        <return-type type="gboolean" />
      </method>
      <method name="NextLine" cname="pango_layout_iter_next_line">
        <return-type type="gboolean" />
      </method>
      <method name="NextRun" cname="pango_layout_iter_next_run">
        <return-type type="gboolean" />
      </method>
    </struct>
    <struct name="LayoutLine" cname="PangoLayoutLine" opaque="true">
      <field name="Layout" cname="layout" type="PangoLayout*" access="public" writeable="true" />
      <field name="StartIndex" cname="start_index" type="gint" access="public" writeable="true" />
      <field name="Length" cname="length" type="gint" access="public" writeable="true" />
      <field name="Runs" cname="runs" type="GSList*" access="public" writeable="true" />
      <field name="IsParagraphStart" cname="is_paragraph_start" bits="1" type="guint" access="public" writeable="true" />
      <field name="ResolvedDir" cname="resolved_dir" bits="3" type="guint" access="public" writeable="true" />
      <method name="GetExtents" cname="pango_layout_line_get_extents">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoRectangle*" name="ink_rect" />
          <parameter type="PangoRectangle*" name="logical_rect" />
        </parameters>
      </method>
      <method name="GetPixelExtents" cname="pango_layout_line_get_pixel_extents">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoRectangle*" name="ink_rect" />
          <parameter type="PangoRectangle*" name="logical_rect" />
        </parameters>
      </method>
      <method name="GetType" cname="pango_layout_line_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetXRanges" cname="pango_layout_line_get_x_ranges">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="start_index" />
          <parameter type="int" name="end_index" />
          <parameter type="int**" name="ranges" />
          <parameter type="int*" name="n_ranges" />
        </parameters>
      </method>
      <method name="IndexToX" cname="pango_layout_line_index_to_x">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="index_" />
          <parameter type="gboolean" name="trailing" />
          <parameter type="int*" name="x_pos" />
        </parameters>
      </method>
      <method name="Ref" cname="pango_layout_line_ref">
        <return-type type="PangoLayoutLine*" />
      </method>
      <method name="Unref" cname="pango_layout_line_unref">
        <return-type type="void" />
      </method>
      <method name="XToIndex" cname="pango_layout_line_x_to_index">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="int" name="x_pos" />
          <parameter type="int*" name="index_" />
          <parameter type="int*" name="trailing" />
        </parameters>
      </method>
    </struct>
    <struct name="LayoutRun" cname="PangoLayoutRun">
      <field name="Item" cname="item" type="PangoItem*" />
      <field name="Glyphs" cname="glyphs" type="PangoGlyphString*" />
    </struct>
    <struct name="LogAttr" cname="PangoLogAttr">
      <field name="IsLineBreak" cname="is_line_break" bits="1" type="guint" />
      <field name="IsMandatoryBreak" cname="is_mandatory_break" bits="1" type="guint" />
      <field name="IsCharBreak" cname="is_char_break" bits="1" type="guint" />
      <field name="IsWhite" cname="is_white" bits="1" type="guint" />
      <field name="IsCursorPosition" cname="is_cursor_position" bits="1" type="guint" />
      <field name="IsWordStart" cname="is_word_start" bits="1" type="guint" />
      <field name="IsWordEnd" cname="is_word_end" bits="1" type="guint" />
      <field name="IsSentenceBoundary" cname="is_sentence_boundary" bits="1" type="guint" />
      <field name="IsSentenceStart" cname="is_sentence_start" bits="1" type="guint" />
      <field name="IsSentenceEnd" cname="is_sentence_end" bits="1" type="guint" />
      <field name="BackspaceDeletesCharacter" cname="backspace_deletes_character" bits="1" type="guint" />
    </struct>
    <struct name="Matrix" cname="PangoMatrix">
      <field name="Xx" cname="xx" type="double" />
      <field name="Xy" cname="xy" type="double" />
      <field name="Yx" cname="yx" type="double" />
      <field name="Yy" cname="yy" type="double" />
      <field name="X0" cname="x0" type="double" />
      <field name="Y0" cname="y0" type="double" />
      <method name="Concat" cname="pango_matrix_concat">
        <return-type type="void" />
        <parameters>
          <parameter type="const-PangoMatrix*" name="new_matrix" />
        </parameters>
      </method>
      <method name="Copy" cname="pango_matrix_copy">
        <return-type type="PangoMatrix*" owned="true" />
      </method>
      <method name="Free" cname="pango_matrix_free">
        <return-type type="void" />
      </method>
      <method name="GetFontScaleFactor" cname="pango_matrix_get_font_scale_factor">
        <return-type type="double" />
      </method>
      <method name="GetType" cname="pango_matrix_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Rotate" cname="pango_matrix_rotate">
        <return-type type="void" />
        <parameters>
          <parameter type="double" name="degrees" />
        </parameters>
      </method>
      <method name="Scale" cname="pango_matrix_scale">
        <return-type type="void" />
        <parameters>
          <parameter type="double" name="scale_x" />
          <parameter type="double" name="scale_y" />
        </parameters>
      </method>
      <method name="TransformDistance" cname="pango_matrix_transform_distance">
        <return-type type="void" />
        <parameters>
          <parameter type="double*" name="dx" />
          <parameter type="double*" name="dy" />
        </parameters>
      </method>
      <method name="TransformPixelRectangle" cname="pango_matrix_transform_pixel_rectangle">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoRectangle*" name="rect" />
        </parameters>
      </method>
      <method name="TransformPoint" cname="pango_matrix_transform_point">
        <return-type type="void" />
        <parameters>
          <parameter type="double*" name="x" />
          <parameter type="double*" name="y" />
        </parameters>
      </method>
      <method name="TransformRectangle" cname="pango_matrix_transform_rectangle">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoRectangle*" name="rect" />
        </parameters>
      </method>
      <method name="Translate" cname="pango_matrix_translate">
        <return-type type="void" />
        <parameters>
          <parameter type="double" name="tx" />
          <parameter type="double" name="ty" />
        </parameters>
      </method>
    </struct>
    <struct name="Rectangle" cname="PangoRectangle">
      <field name="X" cname="x" type="int" />
      <field name="Y" cname="y" type="int" />
      <field name="Width" cname="width" type="int" />
      <field name="Height" cname="height" type="int" />
    </struct>
    <struct name="ScriptIter" cname="PangoScriptIter" opaque="true">
      <method name="Free" cname="pango_script_iter_free">
        <return-type type="void" />
      </method>
      <method name="GetRange" cname="pango_script_iter_get_range">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char**" pass_as="out" name="start" />
          <parameter type="const-char**" pass_as="out" name="end" />
          <parameter type="PangoScript*" name="script" />
        </parameters>
      </method>
      <constructor cname="pango_script_iter_new">
        <parameters>
          <parameter type="const-char*" name="text" />
          <parameter type="int" name="length" />
        </parameters>
      </constructor>
      <method name="Next" cname="pango_script_iter_next">
        <return-type type="gboolean" />
      </method>
    </struct>
    <struct name="TabArray" cname="PangoTabArray" opaque="true">
      <method name="Copy" cname="pango_tab_array_copy">
        <return-type type="PangoTabArray*" owned="true" />
      </method>
      <method name="Free" cname="pango_tab_array_free">
        <return-type type="void" />
      </method>
      <method name="GetPositionsInPixels" cname="pango_tab_array_get_positions_in_pixels">
        <return-type type="gboolean" />
      </method>
      <method name="GetSize" cname="pango_tab_array_get_size">
        <return-type type="gint" />
      </method>
      <method name="GetTab" cname="pango_tab_array_get_tab">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="tab_index" />
          <parameter type="PangoTabAlign*" name="alignment" />
          <parameter type="gint*" name="location" />
        </parameters>
      </method>
      <method name="GetTabs" cname="pango_tab_array_get_tabs">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoTabAlign**" name="alignments" />
          <parameter type="gint**" name="locations" />
        </parameters>
      </method>
      <method name="GetType" cname="pango_tab_array_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="pango_tab_array_new">
        <parameters>
          <parameter type="gint" name="initial_size" />
          <parameter type="gboolean" name="positions_in_pixels" />
        </parameters>
      </constructor>
      <constructor cname="pango_tab_array_new_with_positions">
        <parameters>
          <parameter type="gint" name="size" />
          <parameter type="gboolean" name="positions_in_pixels" />
          <parameter type="PangoTabAlign" name="first_alignment" />
          <parameter type="gint" name="first_position" />
          <parameter ellipsis="true" />
        </parameters>
      </constructor>
      <method name="Resize" cname="pango_tab_array_resize">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="new_size" />
        </parameters>
      </method>
      <method name="SetTab" cname="pango_tab_array_set_tab">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="tab_index" />
          <parameter type="PangoTabAlign" name="alignment" />
          <parameter type="gint" name="location" />
        </parameters>
      </method>
    </struct>
    <struct name="XFontCache" cname="PangoXFontCache" opaque="true">
      <method name="Free" cname="pango_x_font_cache_free" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="Load" cname="pango_x_font_cache_load" deprecated="1">
        <return-type type="XFontStruct*" />
        <parameters>
          <parameter type="const-char*" name="xlfd" />
        </parameters>
      </method>
      <constructor cname="pango_x_font_cache_new" deprecated="1">
        <parameters>
          <parameter type="Display*" name="display" />
        </parameters>
      </constructor>
      <method name="Unload" cname="pango_x_font_cache_unload" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="XFontStruct*" name="fs" />
        </parameters>
      </method>
    </struct>
    <alias name="XSubfont" cname="PangoXSubfont" type="guint16" />
    <class name="Attr" cname="PangoAttr_">
      <method name="BackgroundNew" cname="pango_attr_background_new" shared="true">
        <return-type type="PangoAttribute*" />
        <parameters>
          <parameter type="guint16" name="red" />
          <parameter type="guint16" name="green" />
          <parameter type="guint16" name="blue" />
        </parameters>
      </method>
      <method name="FallbackNew" cname="pango_attr_fallback_new" shared="true">
        <return-type type="PangoAttribute*" />
        <parameters>
          <parameter type="gboolean" name="enable_fallback" />
        </parameters>
      </method>
      <method name="FamilyNew" cname="pango_attr_family_new" shared="true">
        <return-type type="PangoAttribute*" />
        <parameters>
          <parameter type="const-char*" name="family" />
        </parameters>
      </method>
      <method name="ForegroundNew" cname="pango_attr_foreground_new" shared="true">
        <return-type type="PangoAttribute*" />
        <parameters>
          <parameter type="guint16" name="red" />
          <parameter type="guint16" name="green" />
          <parameter type="guint16" name="blue" />
        </parameters>
      </method>
      <method name="GravityHintNew" cname="pango_attr_gravity_hint_new" shared="true">
        <return-type type="PangoAttribute*" />
        <parameters>
          <parameter type="PangoGravityHint" name="hint" />
        </parameters>
      </method>
      <method name="GravityNew" cname="pango_attr_gravity_new" shared="true">
        <return-type type="PangoAttribute*" />
        <parameters>
          <parameter type="PangoGravity" name="gravity" />
        </parameters>
      </method>
      <method name="LetterSpacingNew" cname="pango_attr_letter_spacing_new" shared="true">
        <return-type type="PangoAttribute*" />
        <parameters>
          <parameter type="int" name="letter_spacing" />
        </parameters>
      </method>
      <method name="RiseNew" cname="pango_attr_rise_new" shared="true">
        <return-type type="PangoAttribute*" />
        <parameters>
          <parameter type="int" name="rise" />
        </parameters>
      </method>
      <method name="ScaleNew" cname="pango_attr_scale_new" shared="true">
        <return-type type="PangoAttribute*" />
        <parameters>
          <parameter type="double" name="scale_factor" />
        </parameters>
      </method>
      <method name="StretchNew" cname="pango_attr_stretch_new" shared="true">
        <return-type type="PangoAttribute*" />
        <parameters>
          <parameter type="PangoStretch" name="stretch" />
        </parameters>
      </method>
      <method name="StrikethroughColorNew" cname="pango_attr_strikethrough_color_new" shared="true">
        <return-type type="PangoAttribute*" />
        <parameters>
          <parameter type="guint16" name="red" />
          <parameter type="guint16" name="green" />
          <parameter type="guint16" name="blue" />
        </parameters>
      </method>
      <method name="StrikethroughNew" cname="pango_attr_strikethrough_new" shared="true">
        <return-type type="PangoAttribute*" />
        <parameters>
          <parameter type="gboolean" name="strikethrough" />
        </parameters>
      </method>
      <method name="StyleNew" cname="pango_attr_style_new" shared="true">
        <return-type type="PangoAttribute*" />
        <parameters>
          <parameter type="PangoStyle" name="style" />
        </parameters>
      </method>
      <method name="TypeRegister" cname="pango_attr_type_register" shared="true">
        <return-type type="PangoAttrType" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="UnderlineColorNew" cname="pango_attr_underline_color_new" shared="true">
        <return-type type="PangoAttribute*" />
        <parameters>
          <parameter type="guint16" name="red" />
          <parameter type="guint16" name="green" />
          <parameter type="guint16" name="blue" />
        </parameters>
      </method>
      <method name="UnderlineNew" cname="pango_attr_underline_new" shared="true">
        <return-type type="PangoAttribute*" />
        <parameters>
          <parameter type="PangoUnderline" name="underline" />
        </parameters>
      </method>
      <method name="VariantNew" cname="pango_attr_variant_new" shared="true">
        <return-type type="PangoAttribute*" />
        <parameters>
          <parameter type="PangoVariant" name="variant" />
        </parameters>
      </method>
      <method name="WeightNew" cname="pango_attr_weight_new" shared="true">
        <return-type type="PangoAttribute*" />
        <parameters>
          <parameter type="PangoWeight" name="weight" />
        </parameters>
      </method>
    </class>
    <class name="Cairo" cname="PangoCairo_">
      <method name="ContextGetFontOptions" cname="pango_cairo_context_get_font_options" shared="true">
        <return-type type="const-cairo_font_options_t*" />
        <parameters>
          <parameter type="PangoContext*" name="context" />
        </parameters>
      </method>
      <method name="ContextGetResolution" cname="pango_cairo_context_get_resolution" shared="true">
        <return-type type="double" />
        <parameters>
          <parameter type="PangoContext*" name="context" />
        </parameters>
      </method>
      <method name="ContextSetFontOptions" cname="pango_cairo_context_set_font_options" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoContext*" name="context" />
          <parameter type="const-cairo_font_options_t*" name="options" />
        </parameters>
      </method>
      <method name="ContextSetResolution" cname="pango_cairo_context_set_resolution" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoContext*" name="context" />
          <parameter type="double" name="dpi" />
        </parameters>
      </method>
      <method name="CreateLayout" cname="pango_cairo_create_layout" shared="true">
        <return-type type="PangoLayout*" />
        <parameters>
          <parameter type="cairo_t*" name="cr" />
        </parameters>
      </method>
      <method name="ErrorUnderlinePath" cname="pango_cairo_error_underline_path" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="cairo_t*" name="cr" />
          <parameter type="double" name="x" />
          <parameter type="double" name="y" />
          <parameter type="double" name="width" />
          <parameter type="double" name="height" />
        </parameters>
      </method>
      <method name="GlyphStringPath" cname="pango_cairo_glyph_string_path" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="cairo_t*" name="cr" />
          <parameter type="PangoFont*" name="font" />
          <parameter type="PangoGlyphString*" name="glyphs" />
        </parameters>
      </method>
      <method name="LayoutLinePath" cname="pango_cairo_layout_line_path" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="cairo_t*" name="cr" />
          <parameter type="PangoLayoutLine*" name="line" />
        </parameters>
      </method>
      <method name="LayoutPath" cname="pango_cairo_layout_path" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="cairo_t*" name="cr" />
          <parameter type="PangoLayout*" name="layout" />
        </parameters>
      </method>
      <method name="ShowErrorUnderline" cname="pango_cairo_show_error_underline" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="cairo_t*" name="cr" />
          <parameter type="double" name="x" />
          <parameter type="double" name="y" />
          <parameter type="double" name="width" />
          <parameter type="double" name="height" />
        </parameters>
      </method>
      <method name="ShowGlyphString" cname="pango_cairo_show_glyph_string" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="cairo_t*" name="cr" />
          <parameter type="PangoFont*" name="font" />
          <parameter type="PangoGlyphString*" name="glyphs" />
        </parameters>
      </method>
      <method name="ShowLayout" cname="pango_cairo_show_layout" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="cairo_t*" name="cr" />
          <parameter type="PangoLayout*" name="layout" />
        </parameters>
      </method>
      <method name="ShowLayoutLine" cname="pango_cairo_show_layout_line" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="cairo_t*" name="cr" />
          <parameter type="PangoLayoutLine*" name="line" />
        </parameters>
      </method>
      <method name="UpdateContext" cname="pango_cairo_update_context" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="cairo_t*" name="cr" />
          <parameter type="PangoContext*" name="context" />
        </parameters>
      </method>
      <method name="UpdateLayout" cname="pango_cairo_update_layout" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="cairo_t*" name="cr" />
          <parameter type="PangoLayout*" name="layout" />
        </parameters>
      </method>
    </class>
    <class name="Global" cname="PangoGlobal">
      <method name="ExtentsToPixels" cname="pango_extents_to_pixels" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoRectangle*" name="ink_rect" />
          <parameter type="PangoRectangle*" name="logical_rect" />
        </parameters>
      </method>
      <method name="FindBaseDir" cname="pango_find_base_dir" shared="true">
        <return-type type="PangoDirection" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
          <parameter type="gint" name="length" />
        </parameters>
      </method>
      <method name="FindParagraphBoundary" cname="pango_find_paragraph_boundary" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
          <parameter type="gint" name="length" />
          <parameter type="gint*" name="paragraph_delimiter_index" />
          <parameter type="gint*" name="next_paragraph_start" />
        </parameters>
      </method>
      <method name="GetLogAttrs" cname="pango_get_log_attrs" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="text" />
          <parameter type="int" name="length" />
          <parameter type="int" name="level" />
          <parameter type="PangoLanguage*" name="language" />
          <parameter type="PangoLogAttr*" name="log_attrs" />
          <parameter type="int" name="attrs_len" />
        </parameters>
      </method>
      <method name="GetMirrorChar" cname="pango_get_mirror_char" deprecated="1" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gunichar" name="ch" />
          <parameter type="gunichar*" name="mirrored_ch" />
        </parameters>
      </method>
      <method name="GravityGetForMatrix" cname="pango_gravity_get_for_matrix" shared="true">
        <return-type type="PangoGravity" />
        <parameters>
          <parameter type="const-PangoMatrix*" name="matrix" />
        </parameters>
      </method>
      <method name="GravityGetForScript" cname="pango_gravity_get_for_script" shared="true">
        <return-type type="PangoGravity" />
        <parameters>
          <parameter type="PangoScript" name="script" />
          <parameter type="PangoGravity" name="base_gravity" />
          <parameter type="PangoGravityHint" name="hint" />
        </parameters>
      </method>
      <method name="GravityToRotation" cname="pango_gravity_to_rotation" shared="true">
        <return-type type="double" />
        <parameters>
          <parameter type="PangoGravity" name="gravity" />
        </parameters>
      </method>
      <method name="IsZeroWidth" cname="pango_is_zero_width" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gunichar" name="ch" />
        </parameters>
      </method>
      <method name="ItemizeWithBaseDir" cname="pango_itemize_with_base_dir" shared="true">
        <return-type type="GList*" />
        <parameters>
          <parameter type="PangoContext*" name="context" />
          <parameter type="PangoDirection" name="base_dir" />
          <parameter type="const-char*" name="text" />
          <parameter type="int" name="start_index" />
          <parameter type="int" name="length" />
          <parameter type="PangoAttrList*" name="attrs" />
          <parameter type="PangoAttrIterator*" name="cached_iter" />
        </parameters>
      </method>
      <method name="ParseEnum" cname="pango_parse_enum" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GType" name="type" />
          <parameter type="const-char*" name="str" />
          <parameter type="int*" name="value" />
          <parameter type="gboolean" name="warn" />
          <parameter type="char**" name="possible_values" />
        </parameters>
      </method>
      <method name="ParseMarkup" cname="pango_parse_markup" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="markup_text" />
          <parameter type="int" name="length" />
          <parameter type="gunichar" name="accel_marker" />
          <parameter type="PangoAttrList**" name="attr_list" />
          <parameter type="char**" name="text" />
          <parameter type="gunichar*" name="accel_char" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ParseStretch" cname="pango_parse_stretch" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="str" />
          <parameter type="PangoStretch*" name="stretch" />
          <parameter type="gboolean" name="warn" />
        </parameters>
      </method>
      <method name="ParseStyle" cname="pango_parse_style" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="str" />
          <parameter type="PangoStyle*" name="style" />
          <parameter type="gboolean" name="warn" />
        </parameters>
      </method>
      <method name="ParseVariant" cname="pango_parse_variant" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="str" />
          <parameter type="PangoVariant*" name="variant" />
          <parameter type="gboolean" name="warn" />
        </parameters>
      </method>
      <method name="ParseWeight" cname="pango_parse_weight" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="str" />
          <parameter type="PangoWeight*" name="weight" />
          <parameter type="gboolean" name="warn" />
        </parameters>
      </method>
      <method name="QuantizeLineGeometry" cname="pango_quantize_line_geometry" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="int*" name="thickness" />
          <parameter type="int*" name="position" />
        </parameters>
      </method>
      <method name="ReadLine" cname="pango_read_line" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="FILE*" name="stream" />
          <parameter type="GString*" name="str" />
        </parameters>
      </method>
      <method name="ReorderItems" cname="pango_reorder_items" shared="true">
        <return-type type="GList*" />
        <parameters>
          <parameter type="GList*" name="logical_items" />
        </parameters>
      </method>
      <method name="ScanInt" cname="pango_scan_int" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char**" name="pos" />
          <parameter type="int*" name="out" />
        </parameters>
      </method>
      <method name="ScanString" cname="pango_scan_string" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char**" name="pos" />
          <parameter type="GString*" name="out" />
        </parameters>
      </method>
      <method name="ScanWord" cname="pango_scan_word" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char**" name="pos" />
          <parameter type="GString*" name="out" />
        </parameters>
      </method>
      <method name="ScriptForUnichar" cname="pango_script_for_unichar" shared="true">
        <return-type type="PangoScript" />
        <parameters>
          <parameter type="gunichar" name="ch" />
        </parameters>
      </method>
      <method name="ScriptGetSampleLanguage" cname="pango_script_get_sample_language" shared="true">
        <return-type type="PangoLanguage*" />
        <parameters>
          <parameter type="PangoScript" name="script" />
        </parameters>
      </method>
      <method name="SkipSpace" cname="pango_skip_space" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char**" name="pos" />
        </parameters>
      </method>
      <method name="SplitFileList" cname="pango_split_file_list" shared="true">
        <return-type type="char**" />
        <parameters>
          <parameter type="const-char*" name="str" />
        </parameters>
      </method>
      <method name="TrimString" cname="pango_trim_string" shared="true">
        <return-type type="char*" />
        <parameters>
          <parameter type="const-char*" name="str" />
        </parameters>
      </method>
      <method name="UnicharDirection" cname="pango_unichar_direction" shared="true">
        <return-type type="PangoDirection" />
        <parameters>
          <parameter type="gunichar" name="ch" />
        </parameters>
      </method>
    </class>
    <class name="Units" cname="PangoUnits_">
      <method name="FromDouble" cname="pango_units_from_double" shared="true">
        <return-type type="int" />
        <parameters>
          <parameter type="double" name="d" />
        </parameters>
      </method>
      <method name="ToDouble" cname="pango_units_to_double" shared="true">
        <return-type type="double" />
        <parameters>
          <parameter type="int" name="i" />
        </parameters>
      </method>
    </class>
    <class name="Version" cname="PangoVersion_">
      <method name="Check" cname="pango_version_check" shared="true">
        <return-type type="const-char*" />
        <parameters>
          <parameter type="int" name="required_major" />
          <parameter type="int" name="required_minor" />
          <parameter type="int" name="required_micro" />
        </parameters>
      </method>
      <method name="String" cname="pango_version_string" shared="true">
        <return-type type="const-char*" />
      </method>
    </class>
    <class name="X" cname="PangoX_">
      <method name="ApplyLigatures" cname="pango_x_apply_ligatures" deprecated="1" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="PangoFont*" name="font" />
          <parameter type="PangoXSubfont" name="subfont" />
          <parameter type="gunichar**" name="glyphs" />
          <parameter type="int*" name="n_glyphs" />
          <parameter type="int**" name="clusters" />
        </parameters>
      </method>
      <method name="ContextSetFuncs" cname="pango_x_context_set_funcs" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoContext*" name="context" />
          <parameter type="PangoGetGCFunc" name="get_gc_func" />
          <parameter type="PangoFreeGCFunc" name="free_gc_func" />
        </parameters>
      </method>
      <method name="FallbackShape" cname="pango_x_fallback_shape" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoFont*" name="font" />
          <parameter type="PangoGlyphString*" name="glyphs" />
          <parameter type="const-char*" name="text" />
          <parameter type="int" name="n_chars" />
        </parameters>
      </method>
      <method name="FindFirstSubfont" cname="pango_x_find_first_subfont" deprecated="1" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="PangoFont*" name="font" />
          <parameter type="char**" name="charsets" />
          <parameter type="int" name="n_charsets" />
          <parameter type="PangoXSubfont*" name="rfont" />
        </parameters>
      </method>
      <method name="FontMapForDisplay" cname="pango_x_font_map_for_display" deprecated="1" shared="true">
        <return-type type="PangoFontMap*" />
        <parameters>
          <parameter type="Display*" name="display" />
        </parameters>
      </method>
      <method name="FontMapGetFontCache" cname="pango_x_font_map_get_font_cache" deprecated="1" shared="true">
        <return-type type="PangoXFontCache*" />
        <parameters>
          <parameter type="PangoFontMap*" name="font_map" />
        </parameters>
      </method>
      <method name="FontSubfontXlfd" cname="pango_x_font_subfont_xlfd" deprecated="1" shared="true">
        <return-type type="char*" />
        <parameters>
          <parameter type="PangoFont*" name="font" />
          <parameter type="PangoXSubfont" name="subfont_id" />
        </parameters>
      </method>
      <method name="GetContext" cname="pango_x_get_context" deprecated="1" shared="true">
        <return-type type="PangoContext*" />
        <parameters>
          <parameter type="Display*" name="display" />
        </parameters>
      </method>
      <method name="GetUnknownGlyph" cname="pango_x_get_unknown_glyph" deprecated="1" shared="true">
        <return-type type="PangoGlyph" />
        <parameters>
          <parameter type="PangoFont*" name="font" />
        </parameters>
      </method>
      <method name="HasGlyph" cname="pango_x_has_glyph" deprecated="1" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="PangoFont*" name="font" />
          <parameter type="PangoGlyph" name="glyph" />
        </parameters>
      </method>
      <method name="ListSubfonts" cname="pango_x_list_subfonts" deprecated="1" shared="true">
        <return-type type="int" />
        <parameters>
          <parameter type="PangoFont*" name="font" />
          <parameter type="char**" name="charsets" />
          <parameter type="int" name="n_charsets" />
          <parameter type="PangoXSubfont**" name="subfont_ids" />
          <parameter type="int**" name="subfont_charsets" />
        </parameters>
      </method>
      <method name="LoadFont" cname="pango_x_load_font" deprecated="1" shared="true">
        <return-type type="PangoFont*" />
        <parameters>
          <parameter type="Display*" name="display" />
          <parameter type="const-gchar*" name="spec" />
        </parameters>
      </method>
      <method name="Render" cname="pango_x_render" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="Display*" name="display" />
          <parameter type="Drawable" name="d" />
          <parameter type="GC" name="gc" />
          <parameter type="PangoFont*" name="font" />
          <parameter type="PangoGlyphString*" name="glyphs" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="RenderLayout" cname="pango_x_render_layout" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="Display*" name="display" />
          <parameter type="Drawable" name="drawable" />
          <parameter type="GC" name="gc" />
          <parameter type="PangoLayout*" name="layout" />
          <parameter type="int" name="x" />
          <parameter type="int" name="y" />
        </parameters>
      </method>
      <method name="RenderLayoutLine" cname="pango_x_render_layout_line" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="Display*" name="display" />
          <parameter type="Drawable" name="drawable" />
          <parameter type="GC" name="gc" />
          <parameter type="PangoLayoutLine*" name="line" />
          <parameter type="int" name="x" />
          <parameter type="int" name="y" />
        </parameters>
      </method>
      <method name="ShutdownDisplay" cname="pango_x_shutdown_display" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="Display*" name="display" />
        </parameters>
      </method>
    </class>
    <class name="Xft" cname="PangoXft_">
      <method name="GetContext" cname="pango_xft_get_context" shared="true">
        <return-type type="PangoContext*" />
        <parameters>
          <parameter type="Display*" name="display" />
          <parameter type="int" name="screen" />
        </parameters>
      </method>
      <method name="GetFontMap" cname="pango_xft_get_font_map" shared="true">
        <return-type type="PangoFontMap*" />
        <parameters>
          <parameter type="Display*" name="display" />
          <parameter type="int" name="screen" />
        </parameters>
      </method>
      <method name="PictureRender" cname="pango_xft_picture_render" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="Display*" name="display" />
          <parameter type="Picture" name="src_picture" />
          <parameter type="Picture" name="dest_picture" />
          <parameter type="PangoFont*" name="font" />
          <parameter type="PangoGlyphString*" name="glyphs" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="Render" cname="pango_xft_render" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="XftDraw*" name="draw" />
          <parameter type="XftColor*" name="color" />
          <parameter type="PangoFont*" name="font" />
          <parameter type="PangoGlyphString*" name="glyphs" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="RenderLayout" cname="pango_xft_render_layout" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="XftDraw*" name="draw" />
          <parameter type="XftColor*" name="color" />
          <parameter type="PangoLayout*" name="layout" />
          <parameter type="int" name="x" />
          <parameter type="int" name="y" />
        </parameters>
      </method>
      <method name="RenderLayoutLine" cname="pango_xft_render_layout_line" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="XftDraw*" name="draw" />
          <parameter type="XftColor*" name="color" />
          <parameter type="PangoLayoutLine*" name="line" />
          <parameter type="int" name="x" />
          <parameter type="int" name="y" />
        </parameters>
      </method>
      <method name="RenderTransformed" cname="pango_xft_render_transformed" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="XftDraw*" name="draw" />
          <parameter type="XftColor*" name="color" />
          <parameter type="PangoMatrix*" name="matrix" />
          <parameter type="PangoFont*" name="font" />
          <parameter type="PangoGlyphString*" name="glyphs" />
          <parameter type="int" name="x" />
          <parameter type="int" name="y" />
        </parameters>
      </method>
      <method name="SetDefaultSubstitute" cname="pango_xft_set_default_substitute" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="Display*" name="display" />
          <parameter type="int" name="screen" />
          <parameter type="PangoXftSubstituteFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GDestroyNotify" name="notify" />
        </parameters>
      </method>
      <method name="ShutdownDisplay" cname="pango_xft_shutdown_display" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="Display*" name="display" />
          <parameter type="int" name="screen" />
        </parameters>
      </method>
      <method name="SubstituteChanged" cname="pango_xft_substitute_changed" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="Display*" name="display" />
          <parameter type="int" name="screen" />
        </parameters>
      </method>
    </class>
  </namespace>
  <namespace name="Atk" library="libgtk">
    <enum name="CoordType" cname="AtkCoordType" type="enum">
      <member cname="ATK_XY_SCREEN" name="Screen" />
      <member cname="ATK_XY_WINDOW" name="Window" />
    </enum>
    <enum name="HyperlinkStateFlags" cname="AtkHyperlinkStateFlags" type="flags">
      <member cname="ATK_HYPERLINK_IS_INLINE" name="Inline" value="1 &lt;&lt; 0" />
    </enum>
    <enum name="KeyEventType" cname="AtkKeyEventType" type="enum">
      <member cname="ATK_KEY_EVENT_PRESS" name="Press" />
      <member cname="ATK_KEY_EVENT_RELEASE" name="Release" />
      <member cname="ATK_KEY_EVENT_LAST_DEFINED" name="LastDefined" />
    </enum>
    <enum name="Layer" cname="AtkLayer" type="enum">
      <member cname="ATK_LAYER_INVALID" name="Invalid" />
      <member cname="ATK_LAYER_BACKGROUND" name="Background" />
      <member cname="ATK_LAYER_CANVAS" name="Canvas" />
      <member cname="ATK_LAYER_WIDGET" name="Widget" />
      <member cname="ATK_LAYER_MDI" name="Mdi" />
      <member cname="ATK_LAYER_POPUP" name="Popup" />
      <member cname="ATK_LAYER_OVERLAY" name="Overlay" />
      <member cname="ATK_LAYER_WINDOW" name="Window" />
    </enum>
    <enum name="RelationType" cname="AtkRelationType" type="enum">
      <member cname="ATK_RELATION_NULL" name="Null" />
      <member cname="ATK_RELATION_CONTROLLED_BY" name="ControlledBy" />
      <member cname="ATK_RELATION_CONTROLLER_FOR" name="ControllerFor" />
      <member cname="ATK_RELATION_LABEL_FOR" name="LabelFor" />
      <member cname="ATK_RELATION_LABELLED_BY" name="LabelledBy" />
      <member cname="ATK_RELATION_MEMBER_OF" name="MemberOf" />
      <member cname="ATK_RELATION_NODE_CHILD_OF" name="NodeChildOf" />
      <member cname="ATK_RELATION_FLOWS_TO" name="FlowsTo" />
      <member cname="ATK_RELATION_FLOWS_FROM" name="FlowsFrom" />
      <member cname="ATK_RELATION_SUBWINDOW_OF" name="SubwindowOf" />
      <member cname="ATK_RELATION_EMBEDS" name="Embeds" />
      <member cname="ATK_RELATION_EMBEDDED_BY" name="EmbeddedBy" />
      <member cname="ATK_RELATION_POPUP_FOR" name="PopupFor" />
      <member cname="ATK_RELATION_PARENT_WINDOW_OF" name="ParentWindowOf" />
      <member cname="ATK_RELATION_DESCRIBED_BY" name="DescribedBy" />
      <member cname="ATK_RELATION_DESCRIPTION_FOR" name="DescriptionFor" />
      <member cname="ATK_RELATION_LAST_DEFINED" name="LastDefined" />
    </enum>
    <enum name="Role" cname="AtkRole" type="enum">
      <member cname="ATK_ROLE_INVALID" name="Invalid" />
      <member cname="ATK_ROLE_ACCEL_LABEL" name="AccelLabel" />
      <member cname="ATK_ROLE_ALERT" name="Alert" />
      <member cname="ATK_ROLE_ANIMATION" name="Animation" />
      <member cname="ATK_ROLE_ARROW" name="Arrow" />
      <member cname="ATK_ROLE_CALENDAR" name="Calendar" />
      <member cname="ATK_ROLE_CANVAS" name="Canvas" />
      <member cname="ATK_ROLE_CHECK_BOX" name="CheckBox" />
      <member cname="ATK_ROLE_CHECK_MENU_ITEM" name="CheckMenuItem" />
      <member cname="ATK_ROLE_COLOR_CHOOSER" name="ColorChooser" />
      <member cname="ATK_ROLE_COLUMN_HEADER" name="ColumnHeader" />
      <member cname="ATK_ROLE_COMBO_BOX" name="ComboBox" />
      <member cname="ATK_ROLE_DATE_EDITOR" name="DateEditor" />
      <member cname="ATK_ROLE_DESKTOP_ICON" name="DesktopIcon" />
      <member cname="ATK_ROLE_DESKTOP_FRAME" name="DesktopFrame" />
      <member cname="ATK_ROLE_DIAL" name="Dial" />
      <member cname="ATK_ROLE_DIALOG" name="Dialog" />
      <member cname="ATK_ROLE_DIRECTORY_PANE" name="DirectoryPane" />
      <member cname="ATK_ROLE_DRAWING_AREA" name="DrawingArea" />
      <member cname="ATK_ROLE_FILE_CHOOSER" name="FileChooser" />
      <member cname="ATK_ROLE_FILLER" name="Filler" />
      <member cname="ATK_ROLE_FONT_CHOOSER" name="FontChooser" />
      <member cname="ATK_ROLE_FRAME" name="Frame" />
      <member cname="ATK_ROLE_GLASS_PANE" name="GlassPane" />
      <member cname="ATK_ROLE_HTML_CONTAINER" name="HtmlContainer" />
      <member cname="ATK_ROLE_ICON" name="Icon" />
      <member cname="ATK_ROLE_IMAGE" name="Image" />
      <member cname="ATK_ROLE_INTERNAL_FRAME" name="InternalFrame" />
      <member cname="ATK_ROLE_LABEL" name="Label" />
      <member cname="ATK_ROLE_LAYERED_PANE" name="LayeredPane" />
      <member cname="ATK_ROLE_LIST" name="List" />
      <member cname="ATK_ROLE_LIST_ITEM" name="ListItem" />
      <member cname="ATK_ROLE_MENU" name="Menu" />
      <member cname="ATK_ROLE_MENU_BAR" name="MenuBar" />
      <member cname="ATK_ROLE_MENU_ITEM" name="MenuItem" />
      <member cname="ATK_ROLE_OPTION_PANE" name="OptionPane" />
      <member cname="ATK_ROLE_PAGE_TAB" name="PageTab" />
      <member cname="ATK_ROLE_PAGE_TAB_LIST" name="PageTabList" />
      <member cname="ATK_ROLE_PANEL" name="Panel" />
      <member cname="ATK_ROLE_PASSWORD_TEXT" name="PasswordText" />
      <member cname="ATK_ROLE_POPUP_MENU" name="PopupMenu" />
      <member cname="ATK_ROLE_PROGRESS_BAR" name="ProgressBar" />
      <member cname="ATK_ROLE_PUSH_BUTTON" name="PushButton" />
      <member cname="ATK_ROLE_RADIO_BUTTON" name="RadioButton" />
      <member cname="ATK_ROLE_RADIO_MENU_ITEM" name="RadioMenuItem" />
      <member cname="ATK_ROLE_ROOT_PANE" name="RootPane" />
      <member cname="ATK_ROLE_ROW_HEADER" name="RowHeader" />
      <member cname="ATK_ROLE_SCROLL_BAR" name="ScrollBar" />
      <member cname="ATK_ROLE_SCROLL_PANE" name="ScrollPane" />
      <member cname="ATK_ROLE_SEPARATOR" name="Separator" />
      <member cname="ATK_ROLE_SLIDER" name="Slider" />
      <member cname="ATK_ROLE_SPLIT_PANE" name="SplitPane" />
      <member cname="ATK_ROLE_SPIN_BUTTON" name="SpinButton" />
      <member cname="ATK_ROLE_STATUSBAR" name="Statusbar" />
      <member cname="ATK_ROLE_TABLE" name="Table" />
      <member cname="ATK_ROLE_TABLE_CELL" name="TableCell" />
      <member cname="ATK_ROLE_TABLE_COLUMN_HEADER" name="TableColumnHeader" />
      <member cname="ATK_ROLE_TABLE_ROW_HEADER" name="TableRowHeader" />
      <member cname="ATK_ROLE_TEAR_OFF_MENU_ITEM" name="TearOffMenuItem" />
      <member cname="ATK_ROLE_TERMINAL" name="Terminal" />
      <member cname="ATK_ROLE_TEXT" name="Text" />
      <member cname="ATK_ROLE_TOGGLE_BUTTON" name="ToggleButton" />
      <member cname="ATK_ROLE_TOOL_BAR" name="ToolBar" />
      <member cname="ATK_ROLE_TOOL_TIP" name="ToolTip" />
      <member cname="ATK_ROLE_TREE" name="Tree" />
      <member cname="ATK_ROLE_TREE_TABLE" name="TreeTable" />
      <member cname="ATK_ROLE_UNKNOWN" name="Unknown" />
      <member cname="ATK_ROLE_VIEWPORT" name="Viewport" />
      <member cname="ATK_ROLE_WINDOW" name="Window" />
      <member cname="ATK_ROLE_HEADER" name="Header" />
      <member cname="ATK_ROLE_FOOTER" name="Footer" />
      <member cname="ATK_ROLE_PARAGRAPH" name="Paragraph" />
      <member cname="ATK_ROLE_RULER" name="Ruler" />
      <member cname="ATK_ROLE_APPLICATION" name="Application" />
      <member cname="ATK_ROLE_AUTOCOMPLETE" name="Autocomplete" />
      <member cname="ATK_ROLE_EDITBAR" name="Editbar" />
      <member cname="ATK_ROLE_EMBEDDED" name="Embedded" />
      <member cname="ATK_ROLE_ENTRY" name="Entry" />
      <member cname="ATK_ROLE_CHART" name="Chart" />
      <member cname="ATK_ROLE_CAPTION" name="Caption" />
      <member cname="ATK_ROLE_DOCUMENT_FRAME" name="DocumentFrame" />
      <member cname="ATK_ROLE_HEADING" name="Heading" />
      <member cname="ATK_ROLE_PAGE" name="Page" />
      <member cname="ATK_ROLE_SECTION" name="Section" />
      <member cname="ATK_ROLE_REDUNDANT_OBJECT" name="RedundantObject" />
      <member cname="ATK_ROLE_FORM" name="Form" />
      <member cname="ATK_ROLE_LINK" name="Link" />
      <member cname="ATK_ROLE_INPUT_METHOD_WINDOW" name="InputMethodWindow" />
      <member cname="ATK_ROLE_LAST_DEFINED" name="LastDefined" />
    </enum>
    <enum name="StateType" cname="AtkStateType" type="enum">
      <member cname="ATK_STATE_INVALID" name="Invalid" />
      <member cname="ATK_STATE_ACTIVE" name="Active" />
      <member cname="ATK_STATE_ARMED" name="Armed" />
      <member cname="ATK_STATE_BUSY" name="Busy" />
      <member cname="ATK_STATE_CHECKED" name="Checked" />
      <member cname="ATK_STATE_DEFUNCT" name="Defunct" />
      <member cname="ATK_STATE_EDITABLE" name="Editable" />
      <member cname="ATK_STATE_ENABLED" name="Enabled" />
      <member cname="ATK_STATE_EXPANDABLE" name="Expandable" />
      <member cname="ATK_STATE_EXPANDED" name="Expanded" />
      <member cname="ATK_STATE_FOCUSABLE" name="Focusable" />
      <member cname="ATK_STATE_FOCUSED" name="Focused" />
      <member cname="ATK_STATE_HORIZONTAL" name="Horizontal" />
      <member cname="ATK_STATE_ICONIFIED" name="Iconified" />
      <member cname="ATK_STATE_MODAL" name="Modal" />
      <member cname="ATK_STATE_MULTI_LINE" name="MultiLine" />
      <member cname="ATK_STATE_MULTISELECTABLE" name="Multiselectable" />
      <member cname="ATK_STATE_OPAQUE" name="Opaque" />
      <member cname="ATK_STATE_PRESSED" name="Pressed" />
      <member cname="ATK_STATE_RESIZABLE" name="Resizable" />
      <member cname="ATK_STATE_SELECTABLE" name="Selectable" />
      <member cname="ATK_STATE_SELECTED" name="Selected" />
      <member cname="ATK_STATE_SENSITIVE" name="Sensitive" />
      <member cname="ATK_STATE_SHOWING" name="Showing" />
      <member cname="ATK_STATE_SINGLE_LINE" name="SingleLine" />
      <member cname="ATK_STATE_STALE" name="Stale" />
      <member cname="ATK_STATE_TRANSIENT" name="Transient" />
      <member cname="ATK_STATE_VERTICAL" name="Vertical" />
      <member cname="ATK_STATE_VISIBLE" name="Visible" />
      <member cname="ATK_STATE_MANAGES_DESCENDANTS" name="ManagesDescendants" />
      <member cname="ATK_STATE_INDETERMINATE" name="Indeterminate" />
      <member cname="ATK_STATE_TRUNCATED" name="Truncated" />
      <member cname="ATK_STATE_REQUIRED" name="Required" />
      <member cname="ATK_STATE_INVALID_ENTRY" name="InvalidEntry" />
      <member cname="ATK_STATE_SUPPORTS_AUTOCOMPLETION" name="SupportsAutocompletion" />
      <member cname="ATK_STATE_SELECTABLE_TEXT" name="SelectableText" />
      <member cname="ATK_STATE_DEFAULT" name="Default" />
      <member cname="ATK_STATE_ANIMATED" name="Animated" />
      <member cname="ATK_STATE_VISITED" name="Visited" />
      <member cname="ATK_STATE_LAST_DEFINED" name="LastDefined" />
    </enum>
    <enum name="TextAttribute" cname="AtkTextAttribute" type="enum">
      <member cname="ATK_TEXT_ATTR_INVALID" name="Invalid" />
      <member cname="ATK_TEXT_ATTR_LEFT_MARGIN" name="LeftMargin" />
      <member cname="ATK_TEXT_ATTR_RIGHT_MARGIN" name="RightMargin" />
      <member cname="ATK_TEXT_ATTR_INDENT" name="Indent" />
      <member cname="ATK_TEXT_ATTR_INVISIBLE" name="Invisible" />
      <member cname="ATK_TEXT_ATTR_EDITABLE" name="Editable" />
      <member cname="ATK_TEXT_ATTR_PIXELS_ABOVE_LINES" name="PixelsAboveLines" />
      <member cname="ATK_TEXT_ATTR_PIXELS_BELOW_LINES" name="PixelsBelowLines" />
      <member cname="ATK_TEXT_ATTR_PIXELS_INSIDE_WRAP" name="PixelsInsideWrap" />
      <member cname="ATK_TEXT_ATTR_BG_FULL_HEIGHT" name="BgFullHeight" />
      <member cname="ATK_TEXT_ATTR_RISE" name="Rise" />
      <member cname="ATK_TEXT_ATTR_UNDERLINE" name="Underline" />
      <member cname="ATK_TEXT_ATTR_STRIKETHROUGH" name="Strikethrough" />
      <member cname="ATK_TEXT_ATTR_SIZE" name="Size" />
      <member cname="ATK_TEXT_ATTR_SCALE" name="Scale" />
      <member cname="ATK_TEXT_ATTR_WEIGHT" name="Weight" />
      <member cname="ATK_TEXT_ATTR_LANGUAGE" name="Language" />
      <member cname="ATK_TEXT_ATTR_FAMILY_NAME" name="FamilyName" />
      <member cname="ATK_TEXT_ATTR_BG_COLOR" name="BgColor" />
      <member cname="ATK_TEXT_ATTR_FG_COLOR" name="FgColor" />
      <member cname="ATK_TEXT_ATTR_BG_STIPPLE" name="BgStipple" />
      <member cname="ATK_TEXT_ATTR_FG_STIPPLE" name="FgStipple" />
      <member cname="ATK_TEXT_ATTR_WRAP_MODE" name="WrapMode" />
      <member cname="ATK_TEXT_ATTR_DIRECTION" name="Direction" />
      <member cname="ATK_TEXT_ATTR_JUSTIFICATION" name="Justification" />
      <member cname="ATK_TEXT_ATTR_STRETCH" name="Stretch" />
      <member cname="ATK_TEXT_ATTR_VARIANT" name="Variant" />
      <member cname="ATK_TEXT_ATTR_STYLE" name="Style" />
      <member cname="ATK_TEXT_ATTR_LAST_DEFINED" name="LastDefined" />
    </enum>
    <enum name="TextBoundary" cname="AtkTextBoundary" type="enum">
      <member cname="ATK_TEXT_BOUNDARY_CHAR" name="Char" />
      <member cname="ATK_TEXT_BOUNDARY_WORD_START" name="WordStart" />
      <member cname="ATK_TEXT_BOUNDARY_WORD_END" name="WordEnd" />
      <member cname="ATK_TEXT_BOUNDARY_SENTENCE_START" name="SentenceStart" />
      <member cname="ATK_TEXT_BOUNDARY_SENTENCE_END" name="SentenceEnd" />
      <member cname="ATK_TEXT_BOUNDARY_LINE_START" name="LineStart" />
      <member cname="ATK_TEXT_BOUNDARY_LINE_END" name="LineEnd" />
    </enum>
    <enum name="TextClipType" cname="AtkTextClipType" type="enum">
      <member cname="ATK_TEXT_CLIP_NONE" name="None" />
      <member cname="ATK_TEXT_CLIP_MIN" name="Min" />
      <member cname="ATK_TEXT_CLIP_MAX" name="Max" />
      <member cname="ATK_TEXT_CLIP_BOTH" name="Both" />
    </enum>
    <callback name="EventListener" cname="AtkEventListener">
      <return-type type="void" />
      <parameters>
        <parameter type="AtkObject*" name="obj" />
      </parameters>
    </callback>
    <callback name="EventListenerInit" cname="AtkEventListenerInit">
      <return-type type="void" />
    </callback>
    <callback name="FocusHandler" cname="AtkFocusHandler">
      <return-type type="void" />
      <parameters>
        <parameter type="AtkObject*" name="arg1" />
        <parameter type="gboolean" name="arg2" />
      </parameters>
    </callback>
    <callback name="Function" cname="AtkFunction">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="KeySnoopFunc" cname="AtkKeySnoopFunc">
      <return-type type="gint" />
      <parameters>
        <parameter type="AtkKeyEventStruct*" name="event" />
        <parameter type="gpointer" name="func_data" />
      </parameters>
    </callback>
    <callback name="PropertyChangeHandler" cname="AtkPropertyChangeHandler">
      <return-type type="void" />
      <parameters>
        <parameter type="AtkObject*" name="arg1" />
        <parameter type="AtkPropertyValues*" name="arg2" />
      </parameters>
    </callback>
    <interface name="Action" cname="AtkAction">
      <virtual_method name="DoAction" cname="do_action">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkAction*" name="action" />
          <parameter type="gint" name="i" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetNActions" cname="get_n_actions">
        <return-type type="gint" />
        <parameters>
          <parameter type="AtkAction*" name="action" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetDescription" cname="get_description">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="AtkAction*" name="action" />
          <parameter type="gint" name="i" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetName" cname="get_name">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="AtkAction*" name="action" />
          <parameter type="gint" name="i" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetKeybinding" cname="get_keybinding">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="AtkAction*" name="action" />
          <parameter type="gint" name="i" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetDescription" cname="set_description">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkAction*" name="action" />
          <parameter type="gint" name="i" />
          <parameter type="const-gchar*" name="desc" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetLocalizedName" cname="get_localized_name">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="AtkAction*" name="action" />
          <parameter type="gint" name="i" />
        </parameters>
      </virtual_method>
      <method name="DoAction" cname="atk_action_do_action">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="i" />
        </parameters>
      </method>
      <method name="GetDescription" cname="atk_action_get_description">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="gint" name="i" />
        </parameters>
      </method>
      <method name="GetKeybinding" cname="atk_action_get_keybinding">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="gint" name="i" />
        </parameters>
      </method>
      <method name="GetLocalizedName" cname="atk_action_get_localized_name">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="gint" name="i" />
        </parameters>
      </method>
      <method name="GetNActions" cname="atk_action_get_n_actions">
        <return-type type="gint" />
      </method>
      <method name="GetName" cname="atk_action_get_name">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="gint" name="i" />
        </parameters>
      </method>
      <method name="GetType" cname="atk_action_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="SetDescription" cname="atk_action_set_description">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="i" />
          <parameter type="const-gchar*" name="desc" />
        </parameters>
      </method>
    </interface>
    <interface name="Component" cname="AtkComponent">
      <virtual_method name="AddFocusHandler" cname="add_focus_handler">
        <return-type type="guint" />
        <parameters>
          <parameter type="AtkComponent*" name="component" />
          <parameter type="AtkFocusHandler" name="handler" />
        </parameters>
      </virtual_method>
      <virtual_method name="Contains" cname="contains">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkComponent*" name="component" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="AtkCoordType" name="coord_type" />
        </parameters>
      </virtual_method>
      <virtual_method name="RefAccessibleAtPoint" cname="ref_accessible_at_point">
        <return-type type="AtkObject*" />
        <parameters>
          <parameter type="AtkComponent*" name="component" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="AtkCoordType" name="coord_type" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetExtents" cname="get_extents">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkComponent*" name="component" />
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="height" />
          <parameter type="AtkCoordType" name="coord_type" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetPosition" cname="get_position">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkComponent*" name="component" />
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
          <parameter type="AtkCoordType" name="coord_type" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetSize" cname="get_size">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkComponent*" name="component" />
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="height" />
        </parameters>
      </virtual_method>
      <virtual_method name="GrabFocus" cname="grab_focus">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkComponent*" name="component" />
        </parameters>
      </virtual_method>
      <virtual_method name="RemoveFocusHandler" cname="remove_focus_handler">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkComponent*" name="component" />
          <parameter type="guint" name="handler_id" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetExtents" cname="set_extents">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkComponent*" name="component" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="AtkCoordType" name="coord_type" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetPosition" cname="set_position">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkComponent*" name="component" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="AtkCoordType" name="coord_type" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetSize" cname="set_size">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkComponent*" name="component" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetLayer" cname="get_layer">
        <return-type type="AtkLayer" />
        <parameters>
          <parameter type="AtkComponent*" name="component" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetMdiZorder" cname="get_mdi_zorder">
        <return-type type="gint" />
        <parameters>
          <parameter type="AtkComponent*" name="component" />
        </parameters>
      </virtual_method>
      <virtual_method name="BoundsChanged" cname="bounds_changed">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkComponent*" name="component" />
          <parameter type="AtkRectangle*" name="bounds" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetAlpha" cname="get_alpha">
        <return-type type="gdouble" />
        <parameters>
          <parameter type="AtkComponent*" name="component" />
        </parameters>
      </virtual_method>
      <method name="AddFocusHandler" cname="atk_component_add_focus_handler">
        <return-type type="guint" />
        <parameters>
          <parameter type="AtkFocusHandler" name="handler" />
        </parameters>
      </method>
      <method name="Contains" cname="atk_component_contains">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="AtkCoordType" name="coord_type" />
        </parameters>
      </method>
      <method name="GetAlpha" cname="atk_component_get_alpha">
        <return-type type="gdouble" />
      </method>
      <method name="GetExtents" cname="atk_component_get_extents">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="height" />
          <parameter type="AtkCoordType" name="coord_type" />
        </parameters>
      </method>
      <method name="GetLayer" cname="atk_component_get_layer">
        <return-type type="AtkLayer" />
      </method>
      <method name="GetMdiZorder" cname="atk_component_get_mdi_zorder">
        <return-type type="gint" />
      </method>
      <method name="GetPosition" cname="atk_component_get_position">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
          <parameter type="AtkCoordType" name="coord_type" />
        </parameters>
      </method>
      <method name="GetSize" cname="atk_component_get_size">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="height" />
        </parameters>
      </method>
      <method name="GetType" cname="atk_component_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GrabFocus" cname="atk_component_grab_focus">
        <return-type type="gboolean" />
      </method>
      <method name="RefAccessibleAtPoint" cname="atk_component_ref_accessible_at_point">
        <return-type type="AtkObject*" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="AtkCoordType" name="coord_type" />
        </parameters>
      </method>
      <method name="RemoveFocusHandler" cname="atk_component_remove_focus_handler">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="handler_id" />
        </parameters>
      </method>
      <method name="SetExtents" cname="atk_component_set_extents">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="AtkCoordType" name="coord_type" />
        </parameters>
      </method>
      <method name="SetPosition" cname="atk_component_set_position">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="AtkCoordType" name="coord_type" />
        </parameters>
      </method>
      <method name="SetSize" cname="atk_component_set_size">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
    </interface>
    <interface name="Document" cname="AtkDocument">
      <virtual_method name="GetDocumentType" cname="get_document_type">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="AtkDocument*" name="document" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetDocument" cname="get_document">
        <return-type type="gpointer" />
        <parameters>
          <parameter type="AtkDocument*" name="document" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetDocumentLocale" cname="get_document_locale">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="AtkDocument*" name="document" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetDocumentAttributes" cname="get_document_attributes">
        <return-type type="AtkAttributeSet*" />
        <parameters>
          <parameter type="AtkDocument*" name="document" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetDocumentAttributeValue" cname="get_document_attribute_value">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="AtkDocument*" name="document" />
          <parameter type="const-gchar*" name="attribute_name" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetDocumentAttribute" cname="set_document_attribute">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkDocument*" name="document" />
          <parameter type="const-gchar*" name="attribute_name" />
          <parameter type="const-gchar*" name="attribute_value" />
        </parameters>
      </virtual_method>
      <method name="GetAttributeValue" cname="atk_document_get_attribute_value">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="const-gchar*" name="attribute_name" />
        </parameters>
      </method>
      <method name="GetAttributes" cname="atk_document_get_attributes">
        <return-type type="AtkAttributeSet*" />
      </method>
      <method name="GetDocument" cname="atk_document_get_document">
        <return-type type="gpointer" />
      </method>
      <method name="GetDocumentType" cname="atk_document_get_document_type">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetLocale" cname="atk_document_get_locale">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="atk_document_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="SetAttributeValue" cname="atk_document_set_attribute_value">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="attribute_name" />
          <parameter type="const-gchar*" name="attribute_value" />
        </parameters>
      </method>
    </interface>
    <interface name="EditableText" cname="AtkEditableText">
      <virtual_method name="SetRunAttributes" cname="set_run_attributes">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkEditableText*" name="text" />
          <parameter type="AtkAttributeSet*" name="attrib_set" />
          <parameter type="gint" name="start_offset" />
          <parameter type="gint" name="end_offset" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetTextContents" cname="set_text_contents">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkEditableText*" name="text" />
          <parameter type="const-gchar*" name="string" />
        </parameters>
      </virtual_method>
      <virtual_method name="InsertText" cname="insert_text">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkEditableText*" name="text" />
          <parameter type="const-gchar*" name="string" />
          <parameter type="gint" name="length" />
          <parameter type="gint*" name="position" />
        </parameters>
      </virtual_method>
      <virtual_method name="CopyText" cname="copy_text">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkEditableText*" name="text" />
          <parameter type="gint" name="start_pos" />
          <parameter type="gint" name="end_pos" />
        </parameters>
      </virtual_method>
      <virtual_method name="CutText" cname="cut_text">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkEditableText*" name="text" />
          <parameter type="gint" name="start_pos" />
          <parameter type="gint" name="end_pos" />
        </parameters>
      </virtual_method>
      <virtual_method name="DeleteText" cname="delete_text">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkEditableText*" name="text" />
          <parameter type="gint" name="start_pos" />
          <parameter type="gint" name="end_pos" />
        </parameters>
      </virtual_method>
      <virtual_method name="PasteText" cname="paste_text">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkEditableText*" name="text" />
          <parameter type="gint" name="position" />
        </parameters>
      </virtual_method>
      <method name="CopyText" cname="atk_editable_text_copy_text">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="start_pos" />
          <parameter type="gint" name="end_pos" />
        </parameters>
      </method>
      <method name="CutText" cname="atk_editable_text_cut_text">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="start_pos" />
          <parameter type="gint" name="end_pos" />
        </parameters>
      </method>
      <method name="DeleteText" cname="atk_editable_text_delete_text">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="start_pos" />
          <parameter type="gint" name="end_pos" />
        </parameters>
      </method>
      <method name="GetType" cname="atk_editable_text_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="InsertText" cname="atk_editable_text_insert_text">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="string" />
          <parameter type="gint" name="length" />
          <parameter type="gint*" name="position" />
        </parameters>
      </method>
      <method name="PasteText" cname="atk_editable_text_paste_text">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="SetRunAttributes" cname="atk_editable_text_set_run_attributes">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkAttributeSet*" name="attrib_set" />
          <parameter type="gint" name="start_offset" />
          <parameter type="gint" name="end_offset" />
        </parameters>
      </method>
      <method name="SetTextContents" cname="atk_editable_text_set_text_contents">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="string" />
        </parameters>
      </method>
    </interface>
    <interface name="HyperlinkImpl" cname="AtkHyperlinkImpl">
      <virtual_method name="GetHyperlink" cname="get_hyperlink">
        <return-type type="AtkHyperlink*" />
        <parameters>
          <parameter type="AtkHyperlinkImpl*" name="impl" />
        </parameters>
      </virtual_method>
      <method name="GetHyperlink" cname="atk_hyperlink_impl_get_hyperlink">
        <return-type type="AtkHyperlink*" />
      </method>
      <method name="GetType" cname="atk_hyperlink_impl_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </interface>
    <interface name="Hypertext" cname="AtkHypertext">
      <virtual_method name="GetLink" cname="get_link">
        <return-type type="AtkHyperlink*" />
        <parameters>
          <parameter type="AtkHypertext*" name="hypertext" />
          <parameter type="gint" name="link_index" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetNLinks" cname="get_n_links">
        <return-type type="gint" />
        <parameters>
          <parameter type="AtkHypertext*" name="hypertext" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetLinkIndex" cname="get_link_index">
        <return-type type="gint" />
        <parameters>
          <parameter type="AtkHypertext*" name="hypertext" />
          <parameter type="gint" name="char_index" />
        </parameters>
      </virtual_method>
      <virtual_method name="LinkSelected" cname="link_selected">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkHypertext*" name="hypertext" />
          <parameter type="gint" name="link_index" />
        </parameters>
      </virtual_method>
      <method name="GetLink" cname="atk_hypertext_get_link">
        <return-type type="AtkHyperlink*" />
        <parameters>
          <parameter type="gint" name="link_index" />
        </parameters>
      </method>
      <method name="GetLinkIndex" cname="atk_hypertext_get_link_index">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="char_index" />
        </parameters>
      </method>
      <method name="GetNLinks" cname="atk_hypertext_get_n_links">
        <return-type type="gint" />
      </method>
      <method name="GetType" cname="atk_hypertext_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </interface>
    <interface name="Image" cname="AtkImage">
      <virtual_method name="GetImagePosition" cname="get_image_position">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkImage*" name="image" />
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
          <parameter type="AtkCoordType" name="coord_type" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetImageDescription" cname="get_image_description">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="AtkImage*" name="image" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetImageSize" cname="get_image_size">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkImage*" name="image" />
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="height" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetImageDescription" cname="set_image_description">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkImage*" name="image" />
          <parameter type="const-gchar*" name="description" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetImageLocale" cname="get_image_locale">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="AtkImage*" name="image" />
        </parameters>
      </virtual_method>
      <method name="GetImageDescription" cname="atk_image_get_image_description">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetImageLocale" cname="atk_image_get_image_locale">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetImagePosition" cname="atk_image_get_image_position">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
          <parameter type="AtkCoordType" name="coord_type" />
        </parameters>
      </method>
      <method name="GetImageSize" cname="atk_image_get_image_size">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="height" />
        </parameters>
      </method>
      <method name="GetType" cname="atk_image_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="SetImageDescription" cname="atk_image_set_image_description">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="description" />
        </parameters>
      </method>
    </interface>
    <interface name="Implementor" cname="AtkImplementor">
      <virtual_method name="RefAccessible" cname="ref_accessible">
        <return-type type="AtkObject*" />
        <parameters>
          <parameter type="AtkImplementor*" name="implementor" />
        </parameters>
      </virtual_method>
      <method name="GetType" cname="atk_implementor_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="RefAccessible" cname="atk_implementor_ref_accessible">
        <return-type type="AtkObject*" />
      </method>
    </interface>
    <interface name="Selection" cname="AtkSelection">
      <virtual_method name="AddSelection" cname="add_selection">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkSelection*" name="selection" />
          <parameter type="gint" name="i" />
        </parameters>
      </virtual_method>
      <virtual_method name="ClearSelection" cname="clear_selection">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkSelection*" name="selection" />
        </parameters>
      </virtual_method>
      <virtual_method name="RefSelection" cname="ref_selection">
        <return-type type="AtkObject*" />
        <parameters>
          <parameter type="AtkSelection*" name="selection" />
          <parameter type="gint" name="i" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetSelectionCount" cname="get_selection_count">
        <return-type type="gint" />
        <parameters>
          <parameter type="AtkSelection*" name="selection" />
        </parameters>
      </virtual_method>
      <virtual_method name="IsChildSelected" cname="is_child_selected">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkSelection*" name="selection" />
          <parameter type="gint" name="i" />
        </parameters>
      </virtual_method>
      <virtual_method name="RemoveSelection" cname="remove_selection">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkSelection*" name="selection" />
          <parameter type="gint" name="i" />
        </parameters>
      </virtual_method>
      <virtual_method name="SelectAllSelection" cname="select_all_selection">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkSelection*" name="selection" />
        </parameters>
      </virtual_method>
      <virtual_method name="SelectionChanged" cname="selection_changed">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkSelection*" name="selection" />
        </parameters>
      </virtual_method>
      <method name="AddSelection" cname="atk_selection_add_selection">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="i" />
        </parameters>
      </method>
      <method name="ClearSelection" cname="atk_selection_clear_selection">
        <return-type type="gboolean" />
      </method>
      <method name="GetSelectionCount" cname="atk_selection_get_selection_count">
        <return-type type="gint" />
      </method>
      <method name="GetType" cname="atk_selection_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="IsChildSelected" cname="atk_selection_is_child_selected">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="i" />
        </parameters>
      </method>
      <method name="RefSelection" cname="atk_selection_ref_selection">
        <return-type type="AtkObject*" />
        <parameters>
          <parameter type="gint" name="i" />
        </parameters>
      </method>
      <method name="RemoveSelection" cname="atk_selection_remove_selection">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="i" />
        </parameters>
      </method>
      <method name="SelectAllSelection" cname="atk_selection_select_all_selection">
        <return-type type="gboolean" />
      </method>
    </interface>
    <interface name="StreamableContent" cname="AtkStreamableContent">
      <virtual_method name="GetNMimeTypes" cname="get_n_mime_types">
        <return-type type="gint" />
        <parameters>
          <parameter type="AtkStreamableContent*" name="streamable" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetMimeType" cname="get_mime_type">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="AtkStreamableContent*" name="streamable" />
          <parameter type="gint" name="i" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetStream" cname="get_stream">
        <return-type type="GIOChannel*" />
        <parameters>
          <parameter type="AtkStreamableContent*" name="streamable" />
          <parameter type="const-gchar*" name="mime_type" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetUri" cname="get_uri">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="AtkStreamableContent*" name="streamable" />
          <parameter type="const-gchar*" name="mime_type" />
        </parameters>
      </virtual_method>
      <method name="GetMimeType" cname="atk_streamable_content_get_mime_type">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="gint" name="i" />
        </parameters>
      </method>
      <method name="GetNMimeTypes" cname="atk_streamable_content_get_n_mime_types">
        <return-type type="gint" />
      </method>
      <method name="GetStream" cname="atk_streamable_content_get_stream">
        <return-type type="GIOChannel*" />
        <parameters>
          <parameter type="const-gchar*" name="mime_type" />
        </parameters>
      </method>
      <method name="GetType" cname="atk_streamable_content_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUri" cname="atk_streamable_content_get_uri">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-gchar*" name="mime_type" />
        </parameters>
      </method>
    </interface>
    <interface name="Table" cname="AtkTable">
      <virtual_method name="RefAt" cname="ref_at">
        <return-type type="AtkObject*" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
          <parameter type="gint" name="row" />
          <parameter type="gint" name="column" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetIndexAt" cname="get_index_at">
        <return-type type="gint" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
          <parameter type="gint" name="row" />
          <parameter type="gint" name="column" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetColumnAtIndex" cname="get_column_at_index">
        <return-type type="gint" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
          <parameter type="gint" name="index_" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetRowAtIndex" cname="get_row_at_index">
        <return-type type="gint" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
          <parameter type="gint" name="index_" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetNColumns" cname="get_n_columns">
        <return-type type="gint" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetNRows" cname="get_n_rows">
        <return-type type="gint" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetColumnExtentAt" cname="get_column_extent_at">
        <return-type type="gint" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
          <parameter type="gint" name="row" />
          <parameter type="gint" name="column" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetRowExtentAt" cname="get_row_extent_at">
        <return-type type="gint" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
          <parameter type="gint" name="row" />
          <parameter type="gint" name="column" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetCaption" cname="get_caption">
        <return-type type="AtkObject*" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetColumnDescription" cname="get_column_description">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
          <parameter type="gint" name="column" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetColumnHeader" cname="get_column_header">
        <return-type type="AtkObject*" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
          <parameter type="gint" name="column" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetRowDescription" cname="get_row_description">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
          <parameter type="gint" name="row" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetRowHeader" cname="get_row_header">
        <return-type type="AtkObject*" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
          <parameter type="gint" name="row" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetSummary" cname="get_summary">
        <return-type type="AtkObject*" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetCaption" cname="set_caption">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
          <parameter type="AtkObject*" name="caption" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetColumnDescription" cname="set_column_description">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
          <parameter type="gint" name="column" />
          <parameter type="const-gchar*" name="description" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetColumnHeader" cname="set_column_header">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
          <parameter type="gint" name="column" />
          <parameter type="AtkObject*" name="header" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetRowDescription" cname="set_row_description">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
          <parameter type="gint" name="row" />
          <parameter type="const-gchar*" name="description" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetRowHeader" cname="set_row_header">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
          <parameter type="gint" name="row" />
          <parameter type="AtkObject*" name="header" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetSummary" cname="set_summary">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
          <parameter type="AtkObject*" name="accessible" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetSelectedColumns" cname="get_selected_columns">
        <return-type type="gint" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
          <parameter type="gint**" name="selected" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetSelectedRows" cname="get_selected_rows">
        <return-type type="gint" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
          <parameter type="gint**" name="selected" />
        </parameters>
      </virtual_method>
      <virtual_method name="IsColumnSelected" cname="is_column_selected">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
          <parameter type="gint" name="column" />
        </parameters>
      </virtual_method>
      <virtual_method name="IsRowSelected" cname="is_row_selected">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
          <parameter type="gint" name="row" />
        </parameters>
      </virtual_method>
      <virtual_method name="IsSelected" cname="is_selected">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
          <parameter type="gint" name="row" />
          <parameter type="gint" name="column" />
        </parameters>
      </virtual_method>
      <virtual_method name="AddRowSelection" cname="add_row_selection">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
          <parameter type="gint" name="row" />
        </parameters>
      </virtual_method>
      <virtual_method name="RemoveRowSelection" cname="remove_row_selection">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
          <parameter type="gint" name="row" />
        </parameters>
      </virtual_method>
      <virtual_method name="AddColumnSelection" cname="add_column_selection">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
          <parameter type="gint" name="column" />
        </parameters>
      </virtual_method>
      <virtual_method name="RemoveColumnSelection" cname="remove_column_selection">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
          <parameter type="gint" name="column" />
        </parameters>
      </virtual_method>
      <virtual_method name="RowInserted" cname="row_inserted">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
          <parameter type="gint" name="row" />
          <parameter type="gint" name="num_inserted" />
        </parameters>
      </virtual_method>
      <virtual_method name="ColumnInserted" cname="column_inserted">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
          <parameter type="gint" name="column" />
          <parameter type="gint" name="num_inserted" />
        </parameters>
      </virtual_method>
      <virtual_method name="RowDeleted" cname="row_deleted">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
          <parameter type="gint" name="row" />
          <parameter type="gint" name="num_deleted" />
        </parameters>
      </virtual_method>
      <virtual_method name="ColumnDeleted" cname="column_deleted">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
          <parameter type="gint" name="column" />
          <parameter type="gint" name="num_deleted" />
        </parameters>
      </virtual_method>
      <virtual_method name="RowReordered" cname="row_reordered">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
        </parameters>
      </virtual_method>
      <virtual_method name="ColumnReordered" cname="column_reordered">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
        </parameters>
      </virtual_method>
      <virtual_method name="ModelChanged" cname="model_changed">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkTable*" name="table" />
        </parameters>
      </virtual_method>
      <method name="AddColumnSelection" cname="atk_table_add_column_selection">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="column" />
        </parameters>
      </method>
      <method name="AddRowSelection" cname="atk_table_add_row_selection">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="row" />
        </parameters>
      </method>
      <method name="GetCaption" cname="atk_table_get_caption">
        <return-type type="AtkObject*" />
      </method>
      <method name="GetColumnAtIndex" cname="atk_table_get_column_at_index">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="index_" />
        </parameters>
      </method>
      <method name="GetColumnDescription" cname="atk_table_get_column_description">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="gint" name="column" />
        </parameters>
      </method>
      <method name="GetColumnExtentAt" cname="atk_table_get_column_extent_at">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="row" />
          <parameter type="gint" name="column" />
        </parameters>
      </method>
      <method name="GetColumnHeader" cname="atk_table_get_column_header">
        <return-type type="AtkObject*" />
        <parameters>
          <parameter type="gint" name="column" />
        </parameters>
      </method>
      <method name="GetIndexAt" cname="atk_table_get_index_at">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="row" />
          <parameter type="gint" name="column" />
        </parameters>
      </method>
      <method name="GetNColumns" cname="atk_table_get_n_columns">
        <return-type type="gint" />
      </method>
      <method name="GetNRows" cname="atk_table_get_n_rows">
        <return-type type="gint" />
      </method>
      <method name="GetRowAtIndex" cname="atk_table_get_row_at_index">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="index_" />
        </parameters>
      </method>
      <method name="GetRowDescription" cname="atk_table_get_row_description">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="gint" name="row" />
        </parameters>
      </method>
      <method name="GetRowExtentAt" cname="atk_table_get_row_extent_at">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="row" />
          <parameter type="gint" name="column" />
        </parameters>
      </method>
      <method name="GetRowHeader" cname="atk_table_get_row_header">
        <return-type type="AtkObject*" />
        <parameters>
          <parameter type="gint" name="row" />
        </parameters>
      </method>
      <method name="GetSelectedColumns" cname="atk_table_get_selected_columns">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint**" name="selected" />
        </parameters>
      </method>
      <method name="GetSelectedRows" cname="atk_table_get_selected_rows">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint**" name="selected" />
        </parameters>
      </method>
      <method name="GetSummary" cname="atk_table_get_summary">
        <return-type type="AtkObject*" />
      </method>
      <method name="GetType" cname="atk_table_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="IsColumnSelected" cname="atk_table_is_column_selected">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="column" />
        </parameters>
      </method>
      <method name="IsRowSelected" cname="atk_table_is_row_selected">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="row" />
        </parameters>
      </method>
      <method name="IsSelected" cname="atk_table_is_selected">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="row" />
          <parameter type="gint" name="column" />
        </parameters>
      </method>
      <method name="RefAt" cname="atk_table_ref_at">
        <return-type type="AtkObject*" />
        <parameters>
          <parameter type="gint" name="row" />
          <parameter type="gint" name="column" />
        </parameters>
      </method>
      <method name="RemoveColumnSelection" cname="atk_table_remove_column_selection">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="column" />
        </parameters>
      </method>
      <method name="RemoveRowSelection" cname="atk_table_remove_row_selection">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="row" />
        </parameters>
      </method>
      <method name="SetCaption" cname="atk_table_set_caption">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkObject*" name="caption" />
        </parameters>
      </method>
      <method name="SetColumnDescription" cname="atk_table_set_column_description">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="column" />
          <parameter type="const-gchar*" name="description" />
        </parameters>
      </method>
      <method name="SetColumnHeader" cname="atk_table_set_column_header">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="column" />
          <parameter type="AtkObject*" name="header" />
        </parameters>
      </method>
      <method name="SetRowDescription" cname="atk_table_set_row_description">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="row" />
          <parameter type="const-gchar*" name="description" />
        </parameters>
      </method>
      <method name="SetRowHeader" cname="atk_table_set_row_header">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="row" />
          <parameter type="AtkObject*" name="header" />
        </parameters>
      </method>
      <method name="SetSummary" cname="atk_table_set_summary">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkObject*" name="accessible" />
        </parameters>
      </method>
    </interface>
    <interface name="Text" cname="AtkText">
      <virtual_method name="GetText" cname="get_text">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="AtkText*" name="text" />
          <parameter type="gint" name="start_offset" />
          <parameter type="gint" name="end_offset" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetTextAfterOffset" cname="get_text_after_offset">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="AtkText*" name="text" />
          <parameter type="gint" name="offset" />
          <parameter type="AtkTextBoundary" name="boundary_type" />
          <parameter type="gint*" name="start_offset" />
          <parameter type="gint*" name="end_offset" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetTextAtOffset" cname="get_text_at_offset">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="AtkText*" name="text" />
          <parameter type="gint" name="offset" />
          <parameter type="AtkTextBoundary" name="boundary_type" />
          <parameter type="gint*" name="start_offset" />
          <parameter type="gint*" name="end_offset" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetCharacterAtOffset" cname="get_character_at_offset">
        <return-type type="gunichar" />
        <parameters>
          <parameter type="AtkText*" name="text" />
          <parameter type="gint" name="offset" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetTextBeforeOffset" cname="get_text_before_offset">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="AtkText*" name="text" />
          <parameter type="gint" name="offset" />
          <parameter type="AtkTextBoundary" name="boundary_type" />
          <parameter type="gint*" name="start_offset" />
          <parameter type="gint*" name="end_offset" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetCaretOffset" cname="get_caret_offset">
        <return-type type="gint" />
        <parameters>
          <parameter type="AtkText*" name="text" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetRunAttributes" cname="get_run_attributes">
        <return-type type="AtkAttributeSet*" />
        <parameters>
          <parameter type="AtkText*" name="text" />
          <parameter type="gint" name="offset" />
          <parameter type="gint*" name="start_offset" />
          <parameter type="gint*" name="end_offset" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetDefaultAttributes" cname="get_default_attributes">
        <return-type type="AtkAttributeSet*" />
        <parameters>
          <parameter type="AtkText*" name="text" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetCharacterExtents" cname="get_character_extents">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkText*" name="text" />
          <parameter type="gint" name="offset" />
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="height" />
          <parameter type="AtkCoordType" name="coords" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetCharacterCount" cname="get_character_count">
        <return-type type="gint" />
        <parameters>
          <parameter type="AtkText*" name="text" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetOffsetAtPoint" cname="get_offset_at_point">
        <return-type type="gint" />
        <parameters>
          <parameter type="AtkText*" name="text" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="AtkCoordType" name="coords" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetNSelections" cname="get_n_selections">
        <return-type type="gint" />
        <parameters>
          <parameter type="AtkText*" name="text" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetSelection" cname="get_selection">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="AtkText*" name="text" />
          <parameter type="gint" name="selection_num" />
          <parameter type="gint*" name="start_offset" />
          <parameter type="gint*" name="end_offset" />
        </parameters>
      </virtual_method>
      <virtual_method name="AddSelection" cname="add_selection">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkText*" name="text" />
          <parameter type="gint" name="start_offset" />
          <parameter type="gint" name="end_offset" />
        </parameters>
      </virtual_method>
      <virtual_method name="RemoveSelection" cname="remove_selection">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkText*" name="text" />
          <parameter type="gint" name="selection_num" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetSelection" cname="set_selection">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkText*" name="text" />
          <parameter type="gint" name="selection_num" />
          <parameter type="gint" name="start_offset" />
          <parameter type="gint" name="end_offset" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetCaretOffset" cname="set_caret_offset">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkText*" name="text" />
          <parameter type="gint" name="offset" />
        </parameters>
      </virtual_method>
      <virtual_method name="TextChanged" cname="text_changed">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkText*" name="text" />
          <parameter type="gint" name="position" />
          <parameter type="gint" name="length" />
        </parameters>
      </virtual_method>
      <virtual_method name="TextCaretMoved" cname="text_caret_moved">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkText*" name="text" />
          <parameter type="gint" name="location" />
        </parameters>
      </virtual_method>
      <virtual_method name="TextSelectionChanged" cname="text_selection_changed">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkText*" name="text" />
        </parameters>
      </virtual_method>
      <virtual_method name="TextAttributesChanged" cname="text_attributes_changed">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkText*" name="text" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetRangeExtents" cname="get_range_extents">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkText*" name="text" />
          <parameter type="gint" name="start_offset" />
          <parameter type="gint" name="end_offset" />
          <parameter type="AtkCoordType" name="coord_type" />
          <parameter type="AtkTextRectangle*" name="rect" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetBoundedRanges" cname="get_bounded_ranges">
        <return-type type="AtkTextRange**" />
        <parameters>
          <parameter type="AtkText*" name="text" />
          <parameter type="AtkTextRectangle*" name="rect" />
          <parameter type="AtkCoordType" name="coord_type" />
          <parameter type="AtkTextClipType" name="x_clip_type" />
          <parameter type="AtkTextClipType" name="y_clip_type" />
        </parameters>
      </virtual_method>
      <method name="AddSelection" cname="atk_text_add_selection">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="start_offset" />
          <parameter type="gint" name="end_offset" />
        </parameters>
      </method>
      <method name="AttributeForName" cname="atk_text_attribute_for_name" shared="true">
        <return-type type="AtkTextAttribute" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="AttributeGetName" cname="atk_text_attribute_get_name" shared="true">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="AtkTextAttribute" name="attr" />
        </parameters>
      </method>
      <method name="AttributeGetValue" cname="atk_text_attribute_get_value" shared="true">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="AtkTextAttribute" name="attr" />
          <parameter type="gint" name="index_" />
        </parameters>
      </method>
      <method name="AttributeRegister" cname="atk_text_attribute_register" shared="true">
        <return-type type="AtkTextAttribute" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="FreeRanges" cname="atk_text_free_ranges" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkTextRange**" name="ranges" />
        </parameters>
      </method>
      <method name="GetBoundedRanges" cname="atk_text_get_bounded_ranges">
        <return-type type="AtkTextRange**" />
        <parameters>
          <parameter type="AtkTextRectangle*" name="rect" />
          <parameter type="AtkCoordType" name="coord_type" />
          <parameter type="AtkTextClipType" name="x_clip_type" />
          <parameter type="AtkTextClipType" name="y_clip_type" />
        </parameters>
      </method>
      <method name="GetCaretOffset" cname="atk_text_get_caret_offset">
        <return-type type="gint" />
      </method>
      <method name="GetCharacterAtOffset" cname="atk_text_get_character_at_offset">
        <return-type type="gunichar" />
        <parameters>
          <parameter type="gint" name="offset" />
        </parameters>
      </method>
      <method name="GetCharacterCount" cname="atk_text_get_character_count">
        <return-type type="gint" />
      </method>
      <method name="GetCharacterExtents" cname="atk_text_get_character_extents">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="offset" />
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="height" />
          <parameter type="AtkCoordType" name="coords" />
        </parameters>
      </method>
      <method name="GetDefaultAttributes" cname="atk_text_get_default_attributes">
        <return-type type="AtkAttributeSet*" />
      </method>
      <method name="GetNSelections" cname="atk_text_get_n_selections">
        <return-type type="gint" />
      </method>
      <method name="GetOffsetAtPoint" cname="atk_text_get_offset_at_point">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="AtkCoordType" name="coords" />
        </parameters>
      </method>
      <method name="GetRangeExtents" cname="atk_text_get_range_extents">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="start_offset" />
          <parameter type="gint" name="end_offset" />
          <parameter type="AtkCoordType" name="coord_type" />
          <parameter type="AtkTextRectangle*" name="rect" />
        </parameters>
      </method>
      <method name="GetRunAttributes" cname="atk_text_get_run_attributes">
        <return-type type="AtkAttributeSet*" />
        <parameters>
          <parameter type="gint" name="offset" />
          <parameter type="gint*" name="start_offset" />
          <parameter type="gint*" name="end_offset" />
        </parameters>
      </method>
      <method name="GetSelection" cname="atk_text_get_selection">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="gint" name="selection_num" />
          <parameter type="gint*" name="start_offset" />
          <parameter type="gint*" name="end_offset" />
        </parameters>
      </method>
      <method name="GetText" cname="atk_text_get_text">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="gint" name="start_offset" />
          <parameter type="gint" name="end_offset" />
        </parameters>
      </method>
      <method name="GetTextAfterOffset" cname="atk_text_get_text_after_offset">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="gint" name="offset" />
          <parameter type="AtkTextBoundary" name="boundary_type" />
          <parameter type="gint*" name="start_offset" />
          <parameter type="gint*" name="end_offset" />
        </parameters>
      </method>
      <method name="GetTextAtOffset" cname="atk_text_get_text_at_offset">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="gint" name="offset" />
          <parameter type="AtkTextBoundary" name="boundary_type" />
          <parameter type="gint*" name="start_offset" />
          <parameter type="gint*" name="end_offset" />
        </parameters>
      </method>
      <method name="GetTextBeforeOffset" cname="atk_text_get_text_before_offset">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="gint" name="offset" />
          <parameter type="AtkTextBoundary" name="boundary_type" />
          <parameter type="gint*" name="start_offset" />
          <parameter type="gint*" name="end_offset" />
        </parameters>
      </method>
      <method name="GetType" cname="atk_text_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="RemoveSelection" cname="atk_text_remove_selection">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="selection_num" />
        </parameters>
      </method>
      <method name="SetCaretOffset" cname="atk_text_set_caret_offset">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="offset" />
        </parameters>
      </method>
      <method name="SetSelection" cname="atk_text_set_selection">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="selection_num" />
          <parameter type="gint" name="start_offset" />
          <parameter type="gint" name="end_offset" />
        </parameters>
      </method>
    </interface>
    <interface name="Value" cname="AtkValue">
      <virtual_method name="GetCurrentValue" cname="get_current_value">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkValue*" name="obj" />
          <parameter type="GValue*" name="value" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetMaximumValue" cname="get_maximum_value">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkValue*" name="obj" />
          <parameter type="GValue*" name="value" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetMinimumValue" cname="get_minimum_value">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkValue*" name="obj" />
          <parameter type="GValue*" name="value" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetCurrentValue" cname="set_current_value">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkValue*" name="obj" />
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetMinimumIncrement" cname="get_minimum_increment">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkValue*" name="obj" />
          <parameter type="GValue*" name="value" />
        </parameters>
      </virtual_method>
      <method name="GetCurrentValue" cname="atk_value_get_current_value">
        <return-type type="void" />
        <parameters>
          <parameter type="GValue*" name="value" />
        </parameters>
      </method>
      <method name="GetMaximumValue" cname="atk_value_get_maximum_value">
        <return-type type="void" />
        <parameters>
          <parameter type="GValue*" name="value" />
        </parameters>
      </method>
      <method name="GetMinimumIncrement" cname="atk_value_get_minimum_increment">
        <return-type type="void" />
        <parameters>
          <parameter type="GValue*" name="value" />
        </parameters>
      </method>
      <method name="GetMinimumValue" cname="atk_value_get_minimum_value">
        <return-type type="void" />
        <parameters>
          <parameter type="GValue*" name="value" />
        </parameters>
      </method>
      <method name="GetType" cname="atk_value_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="SetCurrentValue" cname="atk_value_set_current_value">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </method>
    </interface>
    <object name="GObjectAccessible" cname="AtkGObjectAccessible" parent="AtkObject">
      <method name="ForObject" cname="atk_gobject_accessible_for_object" shared="true">
        <return-type type="AtkObject*" />
        <parameters>
          <parameter type="GObject*" name="obj" />
        </parameters>
      </method>
      <method name="GetObject" cname="atk_gobject_accessible_get_object">
        <return-type type="GObject*" />
      </method>
      <method name="GetType" cname="atk_gobject_accessible_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <object name="Hyperlink" cname="AtkHyperlink" parent="GObject">
      <method name="GetEndIndex" cname="atk_hyperlink_get_end_index">
        <return-type type="gint" />
      </method>
      <method name="GetNAnchors" cname="atk_hyperlink_get_n_anchors">
        <return-type type="gint" />
      </method>
      <method name="GetObject" cname="atk_hyperlink_get_object">
        <return-type type="AtkObject*" />
        <parameters>
          <parameter type="gint" name="i" />
        </parameters>
      </method>
      <method name="GetStartIndex" cname="atk_hyperlink_get_start_index">
        <return-type type="gint" />
      </method>
      <method name="GetType" cname="atk_hyperlink_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUri" cname="atk_hyperlink_get_uri">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="gint" name="i" />
        </parameters>
      </method>
      <method name="IsInline" cname="atk_hyperlink_is_inline">
        <return-type type="gboolean" />
      </method>
      <method name="IsSelectedLink" cname="atk_hyperlink_is_selected_link">
        <return-type type="gboolean" />
      </method>
      <method name="IsValid" cname="atk_hyperlink_is_valid">
        <return-type type="gboolean" />
      </method>
    </object>
    <object name="Misc" cname="AtkMisc" parent="GObject">
      <method name="GetInstance" cname="atk_misc_get_instance" shared="true">
        <return-type type="const-AtkMisc*" />
      </method>
      <method name="GetType" cname="atk_misc_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ThreadsEnter" cname="atk_misc_threads_enter">
        <return-type type="void" />
      </method>
      <method name="ThreadsLeave" cname="atk_misc_threads_leave">
        <return-type type="void" />
      </method>
    </object>
    <object name="NoOpObject" cname="AtkNoOpObject" parent="AtkObject">
      <method name="GetType" cname="atk_no_op_object_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="atk_no_op_object_new">
        <parameters>
          <parameter type="GObject*" name="obj" />
        </parameters>
      </constructor>
    </object>
    <object name="NoOpObjectFactory" cname="AtkNoOpObjectFactory" parent="AtkObjectFactory">
      <method name="GetType" cname="atk_no_op_object_factory_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="atk_no_op_object_factory_new" />
    </object>
    <object name="Object" cname="AtkObject" parent="GObject">
      <field name="Description" cname="description" type="gchar*" />
      <field name="Name" cname="name" type="gchar*" />
      <field name="AccessibleParent" cname="accessible_parent" type="AtkObject*" />
      <field name="Role" cname="role" type="AtkRole" />
      <field name="RelationSet" cname="relation_set" type="AtkRelationSet*" />
      <field name="Layer" cname="layer" type="AtkLayer" />
      <method name="AddRelationship" cname="atk_object_add_relationship">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkRelationType" name="relationship" />
          <parameter type="AtkObject*" name="target" />
        </parameters>
      </method>
      <method name="ConnectPropertyChangeHandler" cname="atk_object_connect_property_change_handler">
        <return-type type="guint" />
        <parameters>
          <parameter type="AtkPropertyChangeHandler*" name="handler" />
        </parameters>
      </method>
      <method name="GetAttributes" cname="atk_object_get_attributes">
        <return-type type="AtkAttributeSet*" />
      </method>
      <method name="GetDescription" cname="atk_object_get_description">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetIndexInParent" cname="atk_object_get_index_in_parent">
        <return-type type="gint" />
      </method>
      <method name="GetLayer" cname="atk_object_get_layer">
        <return-type type="AtkLayer" />
      </method>
      <method name="GetMdiZorder" cname="atk_object_get_mdi_zorder">
        <return-type type="gint" />
      </method>
      <method name="GetNAccessibleChildren" cname="atk_object_get_n_accessible_children">
        <return-type type="gint" />
      </method>
      <method name="GetName" cname="atk_object_get_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetParent" cname="atk_object_get_parent">
        <return-type type="AtkObject*" />
      </method>
      <method name="GetRole" cname="atk_object_get_role">
        <return-type type="AtkRole" />
      </method>
      <method name="GetType" cname="atk_object_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Initialize" cname="atk_object_initialize">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="NotifyStateChange" cname="atk_object_notify_state_change">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkState" name="state" />
          <parameter type="gboolean" name="value" />
        </parameters>
      </method>
      <method name="RefAccessibleChild" cname="atk_object_ref_accessible_child">
        <return-type type="AtkObject*" />
        <parameters>
          <parameter type="gint" name="i" />
        </parameters>
      </method>
      <method name="RefRelationSet" cname="atk_object_ref_relation_set">
        <return-type type="AtkRelationSet*" />
      </method>
      <method name="RefStateSet" cname="atk_object_ref_state_set">
        <return-type type="AtkStateSet*" />
      </method>
      <method name="RemovePropertyChangeHandler" cname="atk_object_remove_property_change_handler">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="handler_id" />
        </parameters>
      </method>
      <method name="RemoveRelationship" cname="atk_object_remove_relationship">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkRelationType" name="relationship" />
          <parameter type="AtkObject*" name="target" />
        </parameters>
      </method>
      <method name="SetDescription" cname="atk_object_set_description">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="description" />
        </parameters>
      </method>
      <method name="SetName" cname="atk_object_set_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="SetParent" cname="atk_object_set_parent">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkObject*" name="parent" />
        </parameters>
      </method>
      <method name="SetRole" cname="atk_object_set_role">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkRole" name="role" />
        </parameters>
      </method>
    </object>
    <object name="ObjectFactory" cname="AtkObjectFactory" parent="GObject">
      <method name="CreateAccessible" cname="atk_object_factory_create_accessible">
        <return-type type="AtkObject*" />
        <parameters>
          <parameter type="GObject*" name="obj" />
        </parameters>
      </method>
      <method name="GetAccessibleType" cname="atk_object_factory_get_accessible_type">
        <return-type type="GType" />
      </method>
      <method name="GetType" cname="atk_object_factory_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Invalidate" cname="atk_object_factory_invalidate">
        <return-type type="void" />
      </method>
    </object>
    <object name="Registry" cname="AtkRegistry" parent="GObject">
      <field name="FactoryTypeRegistry" cname="factory_type_registry" type="GHashTable*" />
      <field name="FactorySingletonCache" cname="factory_singleton_cache" type="GHashTable*" />
      <method name="GetFactory" cname="atk_registry_get_factory">
        <return-type type="AtkObjectFactory*" />
        <parameters>
          <parameter type="GType" name="type" />
        </parameters>
      </method>
      <method name="GetFactoryType" cname="atk_registry_get_factory_type">
        <return-type type="GType" />
        <parameters>
          <parameter type="GType" name="type" />
        </parameters>
      </method>
      <method name="GetType" cname="atk_registry_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="SetFactoryType" cname="atk_registry_set_factory_type">
        <return-type type="void" />
        <parameters>
          <parameter type="GType" name="type" />
          <parameter type="GType" name="factory_type" />
        </parameters>
      </method>
    </object>
    <object name="Relation" cname="AtkRelation" parent="GObject">
      <field name="Target" cname="target" type="GPtrArray*" />
      <field name="Relationship" cname="relationship" type="AtkRelationType" />
      <method name="AddTarget" cname="atk_relation_add_target">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkObject*" name="target" />
        </parameters>
      </method>
      <method name="GetRelationType" cname="atk_relation_get_relation_type">
        <return-type type="AtkRelationType" />
      </method>
      <method name="GetTarget" cname="atk_relation_get_target">
        <return-type type="GPtrArray*" />
      </method>
      <method name="GetType" cname="atk_relation_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="atk_relation_new">
        <parameters>
          <parameter type="AtkObject**" name="targets" />
          <parameter type="gint" name="n_targets" />
          <parameter type="AtkRelationType" name="relationship" />
        </parameters>
      </constructor>
      <method name="TypeForName" cname="atk_relation_type_for_name" shared="true">
        <return-type type="AtkRelationType" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="TypeGetName" cname="atk_relation_type_get_name" shared="true">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="AtkRelationType" name="type" />
        </parameters>
      </method>
      <method name="TypeRegister" cname="atk_relation_type_register" shared="true">
        <return-type type="AtkRelationType" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
    </object>
    <object name="RelationSet" cname="AtkRelationSet" parent="GObject">
      <field name="Relations" cname="relations" type="GPtrArray*" />
      <method name="Add" cname="atk_relation_set_add">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkRelation*" name="relation" />
        </parameters>
      </method>
      <method name="AddRelationByType" cname="atk_relation_set_add_relation_by_type">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkRelationType" name="relationship" />
          <parameter type="AtkObject*" name="target" />
        </parameters>
      </method>
      <method name="Contains" cname="atk_relation_set_contains">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkRelationType" name="relationship" />
        </parameters>
      </method>
      <method name="GetNRelations" cname="atk_relation_set_get_n_relations">
        <return-type type="gint" />
      </method>
      <method name="GetRelation" cname="atk_relation_set_get_relation">
        <return-type type="AtkRelation*" />
        <parameters>
          <parameter type="gint" name="i" />
        </parameters>
      </method>
      <method name="GetRelationByType" cname="atk_relation_set_get_relation_by_type">
        <return-type type="AtkRelation*" />
        <parameters>
          <parameter type="AtkRelationType" name="relationship" />
        </parameters>
      </method>
      <method name="GetType" cname="atk_relation_set_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="atk_relation_set_new" />
      <method name="Remove" cname="atk_relation_set_remove">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkRelation*" name="relation" />
        </parameters>
      </method>
    </object>
    <object name="StateSet" cname="AtkStateSet" parent="GObject">
      <method name="AddState" cname="atk_state_set_add_state">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkStateType" name="type" />
        </parameters>
      </method>
      <method name="AddStates" cname="atk_state_set_add_states">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkStateType*" name="types" />
          <parameter type="gint" name="n_types" />
        </parameters>
      </method>
      <method name="AndSets" cname="atk_state_set_and_sets">
        <return-type type="AtkStateSet*" />
        <parameters>
          <parameter type="AtkStateSet*" name="compare_set" />
        </parameters>
      </method>
      <method name="ClearStates" cname="atk_state_set_clear_states">
        <return-type type="void" />
      </method>
      <method name="ContainsState" cname="atk_state_set_contains_state">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkStateType" name="type" />
        </parameters>
      </method>
      <method name="ContainsStates" cname="atk_state_set_contains_states">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkStateType*" name="types" />
          <parameter type="gint" name="n_types" />
        </parameters>
      </method>
      <method name="GetType" cname="atk_state_set_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="IsEmpty" cname="atk_state_set_is_empty">
        <return-type type="gboolean" />
      </method>
      <constructor cname="atk_state_set_new" />
      <method name="OrSets" cname="atk_state_set_or_sets">
        <return-type type="AtkStateSet*" />
        <parameters>
          <parameter type="AtkStateSet*" name="compare_set" />
        </parameters>
      </method>
      <method name="RemoveState" cname="atk_state_set_remove_state">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="AtkStateType" name="type" />
        </parameters>
      </method>
      <method name="XorSets" cname="atk_state_set_xor_sets">
        <return-type type="AtkStateSet*" />
        <parameters>
          <parameter type="AtkStateSet*" name="compare_set" />
        </parameters>
      </method>
    </object>
    <object name="Util" cname="AtkUtil" parent="GObject">
      <method name="GetType" cname="atk_util_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <struct name="Attribute" cname="AtkAttribute">
      <field name="Name" cname="name" type="gchar*" />
      <field name="Value" cname="value" type="gchar*" />
      <method name="SetFree" cname="atk_attribute_set_free" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkAttributeSet*" name="attrib_set" />
        </parameters>
      </method>
    </struct>
    <alias name="AttributeSet" cname="AtkAttributeSet" type="GSList" />
    <struct name="KeyEventStruct" cname="AtkKeyEventStruct">
      <field name="Type" cname="type" type="gint" />
      <field name="State" cname="state" type="guint" />
      <field name="Keyval" cname="keyval" type="guint" />
      <field name="Length" cname="length" type="gint" />
      <field name="String" cname="string" type="gchar*" />
      <field name="Keycode" cname="keycode" type="guint16" />
      <field name="Timestamp" cname="timestamp" type="guint32" />
    </struct>
    <struct name="PropertyValues" cname="AtkPropertyValues">
      <field name="PropertyName" cname="property_name" type="const-gchar*" />
      <field name="OldValue" cname="old_value" type="GValue" />
      <field name="NewValue" cname="new_value" type="GValue" />
    </struct>
    <struct name="Rectangle" cname="AtkRectangle">
      <field name="X" cname="x" type="gint" />
      <field name="Y" cname="y" type="gint" />
      <field name="Width" cname="width" type="gint" />
      <field name="Height" cname="height" type="gint" />
      <method name="GetType" cname="atk_rectangle_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </struct>
    <alias name="State" cname="AtkState" type="guint64" />
    <struct name="TextRange" cname="AtkTextRange">
      <field name="Bounds" cname="bounds" type="AtkTextRectangle" />
      <field name="StartOffset" cname="start_offset" type="gint" />
      <field name="EndOffset" cname="end_offset" type="gint" />
      <field name="Content" cname="content" type="gchar*" />
    </struct>
    <struct name="TextRectangle" cname="AtkTextRectangle">
      <field name="X" cname="x" type="gint" />
      <field name="Y" cname="y" type="gint" />
      <field name="Width" cname="width" type="gint" />
      <field name="Height" cname="height" type="gint" />
    </struct>
    <class name="Global" cname="AtkGlobal">
      <method name="AddFocusTracker" cname="atk_add_focus_tracker" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="AtkEventListener" name="focus_tracker" />
        </parameters>
      </method>
      <method name="AddGlobalEventListener" cname="atk_add_global_event_listener" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="GSignalEmissionHook" name="listener" />
          <parameter type="const-gchar*" name="event_type" />
        </parameters>
      </method>
      <method name="AddKeyEventListener" cname="atk_add_key_event_listener" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="AtkKeySnoopFunc" name="listener" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="GetDefaultRegistry" cname="atk_get_default_registry" shared="true">
        <return-type type="AtkRegistry*" />
      </method>
      <method name="GetFocusObject" cname="atk_get_focus_object" shared="true">
        <return-type type="AtkObject*" />
      </method>
      <method name="GetRoot" cname="atk_get_root" shared="true">
        <return-type type="AtkObject*" />
      </method>
      <method name="GetToolkitName" cname="atk_get_toolkit_name" shared="true">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetToolkitVersion" cname="atk_get_toolkit_version" shared="true">
        <return-type type="const-gchar*" />
      </method>
      <method name="RemoveFocusTracker" cname="atk_remove_focus_tracker" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="tracker_id" />
        </parameters>
      </method>
      <method name="RemoveGlobalEventListener" cname="atk_remove_global_event_listener" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="listener_id" />
        </parameters>
      </method>
      <method name="RemoveKeyEventListener" cname="atk_remove_key_event_listener" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="listener_id" />
        </parameters>
      </method>
      <method name="RoleForName" cname="atk_role_for_name" shared="true">
        <return-type type="AtkRole" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="RoleGetLocalizedName" cname="atk_role_get_localized_name" shared="true">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="AtkRole" name="role" />
        </parameters>
      </method>
      <method name="RoleGetName" cname="atk_role_get_name" shared="true">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="AtkRole" name="role" />
        </parameters>
      </method>
      <method name="RoleRegister" cname="atk_role_register" shared="true">
        <return-type type="AtkRole" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
    </class>
    <class name="Focus" cname="AtkFocus_">
      <method name="TrackerInit" cname="atk_focus_tracker_init" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkEventListenerInit" name="init" />
        </parameters>
      </method>
      <method name="TrackerNotify" cname="atk_focus_tracker_notify" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="AtkObject*" name="object" />
        </parameters>
      </method>
    </class>
    <class name="State" cname="AtkState_">
      <method name="TypeForName" cname="atk_state_type_for_name" shared="true">
        <return-type type="AtkStateType" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="TypeGetName" cname="atk_state_type_get_name" shared="true">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="AtkStateType" name="type" />
        </parameters>
      </method>
      <method name="TypeRegister" cname="atk_state_type_register" shared="true">
        <return-type type="AtkStateType" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
    </class>
  </namespace>
</api>