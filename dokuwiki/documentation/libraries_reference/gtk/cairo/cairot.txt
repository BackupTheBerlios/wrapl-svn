====== CairoT ======
==== T ====


==== :Status ====
'':Status(self @ [[#T|T]]) : [[..:..:Gtk:Cairo:CairoStatusT#T|Gtk.Cairo.CairoStatusT.T]]''


==== :SetOperator ====
'':SetOperator(self @ [[#T|T]], op @ [[..:..:Gtk:Cairo:CairoOperatorT#T|Gtk.Cairo.CairoOperatorT.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetSource ====
'':SetSource(self @ [[#T|T]], source @ [[..:..:Gtk:Cairo:CairoPatternT#T|Gtk.Cairo.CairoPatternT.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetSourceRgb ====
'':SetSourceRgb(self @ [[#T|T]], red @ [[..:..:Std:Real#T|Std.Real.T]], green @ [[..:..:Std:Real#T|Std.Real.T]], blue @ [[..:..:Std:Real#T|Std.Real.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetSourceRgba ====
'':SetSourceRgba(self @ [[#T|T]], red @ [[..:..:Std:Real#T|Std.Real.T]], green @ [[..:..:Std:Real#T|Std.Real.T]], blue @ [[..:..:Std:Real#T|Std.Real.T]], alpha @ [[..:..:Std:Real#T|Std.Real.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetSourceSurface ====
'':SetSourceSurface(self @ [[#T|T]], surface @ [[..:..:Gtk:Cairo:CairoSurfaceT#T|Gtk.Cairo.CairoSurfaceT.T]], x @ [[..:..:Std:Real#T|Std.Real.T]], y @ [[..:..:Std:Real#T|Std.Real.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetTolerance ====
'':SetTolerance(self @ [[#T|T]], tolerance @ [[..:..:Std:Real#T|Std.Real.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetAntialias ====
'':SetAntialias(self @ [[#T|T]], antialias @ [[..:..:Gtk:Cairo:CairoAntialiasT#T|Gtk.Cairo.CairoAntialiasT.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetFillRule ====
'':SetFillRule(self @ [[#T|T]], fill_rule @ [[..:..:Gtk:Cairo:CairoFillRuleT#T|Gtk.Cairo.CairoFillRuleT.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetLineWidth ====
'':SetLineWidth(self @ [[#T|T]], width @ [[..:..:Std:Real#T|Std.Real.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetLineCap ====
'':SetLineCap(self @ [[#T|T]], line_cap @ [[..:..:Gtk:Cairo:CairoLineCapT#T|Gtk.Cairo.CairoLineCapT.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetLineJoin ====
'':SetLineJoin(self @ [[#T|T]], line_join @ [[..:..:Gtk:Cairo:CairoLineJoinT#T|Gtk.Cairo.CairoLineJoinT.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetDash ====
'':SetDash(self @ [[#T|T]], dashes @ [[..:..:Std:Object#T|Std.Object.T]], num_dashes @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]], offset @ [[..:..:Std:Real#T|Std.Real.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetMiterLimit ====
'':SetMiterLimit(self @ [[#T|T]], limit @ [[..:..:Std:Real#T|Std.Real.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :Translate ====
'':Translate(self @ [[#T|T]], tx @ [[..:..:Std:Real#T|Std.Real.T]], ty @ [[..:..:Std:Real#T|Std.Real.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :Scale ====
'':Scale(self @ [[#T|T]], sx @ [[..:..:Std:Real#T|Std.Real.T]], sy @ [[..:..:Std:Real#T|Std.Real.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :Rotate ====
'':Rotate(self @ [[#T|T]], angle @ [[..:..:Std:Real#T|Std.Real.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :Transform ====
'':Transform(self @ [[#T|T]], matrix @ [[..:..:Std:Object#T|Std.Object.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetMatrix ====
'':SetMatrix(self @ [[#T|T]], matrix @ [[..:..:Std:Object#T|Std.Object.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :IdentityMatrix ====
'':IdentityMatrix(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :UserToDevice ====
'':UserToDevice(self @ [[#T|T]], x @ [[..:..:Std:Object#T|Std.Object.T]], y @ [[..:..:Std:Object#T|Std.Object.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :UserToDeviceDistance ====
'':UserToDeviceDistance(self @ [[#T|T]], dx @ [[..:..:Std:Object#T|Std.Object.T]], dy @ [[..:..:Std:Object#T|Std.Object.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :DeviceToUser ====
'':DeviceToUser(self @ [[#T|T]], x @ [[..:..:Std:Object#T|Std.Object.T]], y @ [[..:..:Std:Object#T|Std.Object.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :DeviceToUserDistance ====
'':DeviceToUserDistance(self @ [[#T|T]], dx @ [[..:..:Std:Object#T|Std.Object.T]], dy @ [[..:..:Std:Object#T|Std.Object.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :NewPath ====
'':NewPath(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :MoveTo ====
'':MoveTo(self @ [[#T|T]], x @ [[..:..:Std:Real#T|Std.Real.T]], y @ [[..:..:Std:Real#T|Std.Real.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :NewSubPath ====
'':NewSubPath(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :LineTo ====
'':LineTo(self @ [[#T|T]], x @ [[..:..:Std:Real#T|Std.Real.T]], y @ [[..:..:Std:Real#T|Std.Real.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :CurveTo ====
'':CurveTo(self @ [[#T|T]], x1 @ [[..:..:Std:Real#T|Std.Real.T]], y1 @ [[..:..:Std:Real#T|Std.Real.T]], x2 @ [[..:..:Std:Real#T|Std.Real.T]], y2 @ [[..:..:Std:Real#T|Std.Real.T]], x3 @ [[..:..:Std:Real#T|Std.Real.T]], y3 @ [[..:..:Std:Real#T|Std.Real.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :Arc ====
'':Arc(self @ [[#T|T]], xc @ [[..:..:Std:Real#T|Std.Real.T]], yc @ [[..:..:Std:Real#T|Std.Real.T]], radius @ [[..:..:Std:Real#T|Std.Real.T]], angle1 @ [[..:..:Std:Real#T|Std.Real.T]], angle2 @ [[..:..:Std:Real#T|Std.Real.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :ArcNegative ====
'':ArcNegative(self @ [[#T|T]], xc @ [[..:..:Std:Real#T|Std.Real.T]], yc @ [[..:..:Std:Real#T|Std.Real.T]], radius @ [[..:..:Std:Real#T|Std.Real.T]], angle1 @ [[..:..:Std:Real#T|Std.Real.T]], angle2 @ [[..:..:Std:Real#T|Std.Real.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :RelMoveTo ====
'':RelMoveTo(self @ [[#T|T]], x @ [[..:..:Std:Real#T|Std.Real.T]], y @ [[..:..:Std:Real#T|Std.Real.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :RelLineTo ====
'':RelLineTo(self @ [[#T|T]], x @ [[..:..:Std:Real#T|Std.Real.T]], y @ [[..:..:Std:Real#T|Std.Real.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :RelCurveTo ====
'':RelCurveTo(self @ [[#T|T]], x1 @ [[..:..:Std:Real#T|Std.Real.T]], y1 @ [[..:..:Std:Real#T|Std.Real.T]], x2 @ [[..:..:Std:Real#T|Std.Real.T]], y2 @ [[..:..:Std:Real#T|Std.Real.T]], x3 @ [[..:..:Std:Real#T|Std.Real.T]], y3 @ [[..:..:Std:Real#T|Std.Real.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :Rectangle ====
'':Rectangle(self @ [[#T|T]], x @ [[..:..:Std:Real#T|Std.Real.T]], y @ [[..:..:Std:Real#T|Std.Real.T]], width @ [[..:..:Std:Real#T|Std.Real.T]], height @ [[..:..:Std:Real#T|Std.Real.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :ClosePath ====
'':ClosePath(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :Paint ====
'':Paint(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :PaintWithAlpha ====
'':PaintWithAlpha(self @ [[#T|T]], alpha @ [[..:..:Std:Real#T|Std.Real.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :Mask ====
'':Mask(self @ [[#T|T]], pattern @ [[..:..:Gtk:Cairo:CairoPatternT#T|Gtk.Cairo.CairoPatternT.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :MaskSurface ====
'':MaskSurface(self @ [[#T|T]], surface @ [[..:..:Gtk:Cairo:CairoSurfaceT#T|Gtk.Cairo.CairoSurfaceT.T]], surface_x @ [[..:..:Std:Real#T|Std.Real.T]], surface_y @ [[..:..:Std:Real#T|Std.Real.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :Stroke ====
'':Stroke(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :StrokePreserve ====
'':StrokePreserve(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :Fill ====
'':Fill(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :FillPreserve ====
'':FillPreserve(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :CopyPage ====
'':CopyPage(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :ShowPage ====
'':ShowPage(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :InStroke ====
'':InStroke(self @ [[#T|T]], x @ [[..:..:Std:Real#T|Std.Real.T]], y @ [[..:..:Std:Real#T|Std.Real.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :InFill ====
'':InFill(self @ [[#T|T]], x @ [[..:..:Std:Real#T|Std.Real.T]], y @ [[..:..:Std:Real#T|Std.Real.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :StrokeExtents ====
'':StrokeExtents(self @ [[#T|T]], x1 @ [[..:..:Std:Object#T|Std.Object.T]], y1 @ [[..:..:Std:Object#T|Std.Object.T]], x2 @ [[..:..:Std:Object#T|Std.Object.T]], y2 @ [[..:..:Std:Object#T|Std.Object.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :FillExtents ====
'':FillExtents(self @ [[#T|T]], x1 @ [[..:..:Std:Object#T|Std.Object.T]], y1 @ [[..:..:Std:Object#T|Std.Object.T]], x2 @ [[..:..:Std:Object#T|Std.Object.T]], y2 @ [[..:..:Std:Object#T|Std.Object.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :ResetClip ====
'':ResetClip(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :Clip ====
'':Clip(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :ClipExtents ====
'':ClipExtents(self @ [[#T|T]], x1 @ [[..:..:Std:Object#T|Std.Object.T]], y1 @ [[..:..:Std:Object#T|Std.Object.T]], x2 @ [[..:..:Std:Object#T|Std.Object.T]], y2 @ [[..:..:Std:Object#T|Std.Object.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :CopyClipRectangleList ====
'':CopyClipRectangleList(self @ [[#T|T]]) : [[..:..:Gtk:Cairo:CairoRectangleListT#T|Gtk.Cairo.CairoRectangleListT.T]]''


==== :SelectFontFace ====
'':SelectFontFace(self @ [[#T|T]], family @ [[..:..:Std:Object#T|Std.Object.T]], slant @ [[..:..:Gtk:Cairo:CairoFontSlantT#T|Gtk.Cairo.CairoFontSlantT.T]], weight @ [[..:..:Gtk:Cairo:CairoFontWeightT#T|Gtk.Cairo.CairoFontWeightT.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetFontSize ====
'':SetFontSize(self @ [[#T|T]], size @ [[..:..:Std:Real#T|Std.Real.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetFontMatrix ====
'':SetFontMatrix(self @ [[#T|T]], matrix @ [[..:..:Gtk:Cairo:CairoMatrixT#T|Gtk.Cairo.CairoMatrixT.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :GetFontMatrix ====
'':GetFontMatrix(self @ [[#T|T]], matrix @ [[..:..:Gtk:Cairo:CairoMatrixT#T|Gtk.Cairo.CairoMatrixT.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetFontOptions ====
'':SetFontOptions(self @ [[#T|T]], options @ [[..:..:Gtk:Cairo:CairoFontOptionsT#T|Gtk.Cairo.CairoFontOptionsT.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :GetFontOptions ====
'':GetFontOptions(self @ [[#T|T]], options @ [[..:..:Gtk:Cairo:CairoFontOptionsT#T|Gtk.Cairo.CairoFontOptionsT.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetFontFace ====
'':SetFontFace(self @ [[#T|T]], font_face @ [[..:..:Gtk:Cairo:CairoFontFaceT#T|Gtk.Cairo.CairoFontFaceT.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :GetFontFace ====
'':GetFontFace(self @ [[#T|T]]) : [[..:..:Gtk:Cairo:CairoFontFaceT#T|Gtk.Cairo.CairoFontFaceT.T]]''


==== :SetScaledFont ====
'':SetScaledFont(self @ [[#T|T]], font_face @ [[..:..:Gtk:Cairo:CairoScaledFontT#T|Gtk.Cairo.CairoScaledFontT.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :GetScaledFont ====
'':GetScaledFont(self @ [[#T|T]]) : [[..:..:Gtk:Cairo:CairoScaledFontT#T|Gtk.Cairo.CairoScaledFontT.T]]''


==== :ShowText ====
'':ShowText(self @ [[#T|T]], utf8 @ [[..:..:Std:Object#T|Std.Object.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :ShowGlyphs ====
'':ShowGlyphs(self @ [[#T|T]], glyphs @ [[..:..:Gtk:Cairo:CairoGlyphT#T|Gtk.Cairo.CairoGlyphT.T]], num_glyphs @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :TextPath ====
'':TextPath(self @ [[#T|T]], utf8 @ [[..:..:Std:Object#T|Std.Object.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :GlyphPath ====
'':GlyphPath(self @ [[#T|T]], glyphs @ [[..:..:Gtk:Cairo:CairoGlyphT#T|Gtk.Cairo.CairoGlyphT.T]], num_glyphs @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :TextExtents ====
'':TextExtents(self @ [[#T|T]], utf8 @ [[..:..:Std:Object#T|Std.Object.T]], extents @ [[..:..:Gtk:Cairo:CairoTextExtentsT#T|Gtk.Cairo.CairoTextExtentsT.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :GlyphExtents ====
'':GlyphExtents(self @ [[#T|T]], glyphs @ [[..:..:Gtk:Cairo:CairoGlyphT#T|Gtk.Cairo.CairoGlyphT.T]], num_glyphs @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]], extents @ [[..:..:Gtk:Cairo:CairoTextExtentsT#T|Gtk.Cairo.CairoTextExtentsT.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :FontExtents ====
'':FontExtents(self @ [[#T|T]], extents @ [[..:..:Gtk:Cairo:CairoFontExtentsT#T|Gtk.Cairo.CairoFontExtentsT.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :GetOperator ====
'':GetOperator(self @ [[#T|T]]) : [[..:..:Gtk:Cairo:CairoOperatorT#T|Gtk.Cairo.CairoOperatorT.T]]''


==== :GetSource ====
'':GetSource(self @ [[#T|T]]) : [[..:..:Gtk:Cairo:CairoPatternT#T|Gtk.Cairo.CairoPatternT.T]]''


==== :GetTolerance ====
'':GetTolerance(self @ [[#T|T]]) : [[..:..:Std:Real#T|Std.Real.T]]''


==== :GetAntialias ====
'':GetAntialias(self @ [[#T|T]]) : [[..:..:Gtk:Cairo:CairoAntialiasT#T|Gtk.Cairo.CairoAntialiasT.T]]''


==== :GetCurrentPoint ====
'':GetCurrentPoint(self @ [[#T|T]], x @ [[..:..:Std:Object#T|Std.Object.T]], y @ [[..:..:Std:Object#T|Std.Object.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :GetFillRule ====
'':GetFillRule(self @ [[#T|T]]) : [[..:..:Gtk:Cairo:CairoFillRuleT#T|Gtk.Cairo.CairoFillRuleT.T]]''


==== :GetLineWidth ====
'':GetLineWidth(self @ [[#T|T]]) : [[..:..:Std:Real#T|Std.Real.T]]''


==== :GetLineCap ====
'':GetLineCap(self @ [[#T|T]]) : [[..:..:Gtk:Cairo:CairoLineCapT#T|Gtk.Cairo.CairoLineCapT.T]]''


==== :GetMiterLimit ====
'':GetMiterLimit(self @ [[#T|T]]) : [[..:..:Std:Real#T|Std.Real.T]]''


==== :GetLineJoin ====
'':GetLineJoin(self @ [[#T|T]]) : [[..:..:Gtk:Cairo:CairoLineJoinT#T|Gtk.Cairo.CairoLineJoinT.T]]''


==== :GetDashCount ====
'':GetDashCount(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :GetDash ====
'':GetDash(self @ [[#T|T]], dashes @ [[..:..:Std:Object#T|Std.Object.T]], offset @ [[..:..:Std:Object#T|Std.Object.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :GetMatrix ====
'':GetMatrix(self @ [[#T|T]], matrix @ [[..:..:Gtk:Cairo:CairoMatrixT#T|Gtk.Cairo.CairoMatrixT.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :GetTarget ====
'':GetTarget(self @ [[#T|T]]) : [[..:..:Gtk:Cairo:CairoSurfaceT#T|Gtk.Cairo.CairoSurfaceT.T]]''


==== :GetGroupTarget ====
'':GetGroupTarget(self @ [[#T|T]]) : [[..:..:Gtk:Cairo:CairoSurfaceT#T|Gtk.Cairo.CairoSurfaceT.T]]''


==== :CopyPath ====
'':CopyPath(self @ [[#T|T]]) : [[..:..:Gtk:Cairo:CairoPathT#T|Gtk.Cairo.CairoPathT.T]]''


==== :CopyPathFlat ====
'':CopyPathFlat(self @ [[#T|T]]) : [[..:..:Gtk:Cairo:CairoPathT#T|Gtk.Cairo.CairoPathT.T]]''


==== :AppendPath ====
'':AppendPath(self @ [[#T|T]], path @ [[..:..:Gtk:Cairo:CairoPathT#T|Gtk.Cairo.CairoPathT.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== Create ====
''Create(target) : [[..:..:Gtk:Cairo:CairoT#T|Gtk.Cairo.CairoT.T]]''


