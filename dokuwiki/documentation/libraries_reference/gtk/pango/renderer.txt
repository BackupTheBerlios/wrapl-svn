====== Renderer ======
==== T ====
=== inherits from ===
  * [[..:..:Gtk:GObject:Object#T|Gtk.GObject.Object.T]]


==== :SetMatrix ====
'':SetMatrix(self @ [[#T|T]], matrix @[[..:..:Gtk:Pango:Matrix#T|Gtk.Pango.Matrix.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :Underline ====
'':Underline(self @ [[#T|T]]) : [[..:..:Gtk:Pango:Underline#T|Gtk.Pango.Underline.T]]''


==== :Strikethrough ====
'':Strikethrough(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :ActiveCount ====
'':ActiveCount(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :Matrix ====
'':Matrix(self @ [[#T|T]]) : [[..:..:Gtk:Pango:Matrix#T|Gtk.Pango.Matrix.T]]''


==== :Priv ====
'':Priv(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :Activate ====
'':Activate(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :Deactivate ====
'':Deactivate(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :DrawErrorUnderline ====
'':DrawErrorUnderline(self @ [[#T|T]], x @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]], y @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]], width @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]], height @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :DrawGlyph ====
'':DrawGlyph(self @ [[#T|T]], font @[[..:..:Gtk:Pango:Font#T|Gtk.Pango.Font.T]], glyph @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]], x @[[..:..:Std:Real#T|Std.Real.T]], y @[[..:..:Std:Real#T|Std.Real.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :DrawGlyphs ====
'':DrawGlyphs(self @ [[#T|T]], font @[[..:..:Gtk:Pango:Font#T|Gtk.Pango.Font.T]], glyphs @[[..:..:Gtk:Pango:GlyphString#T|Gtk.Pango.GlyphString.T]], x @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]], y @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :DrawLayout ====
'':DrawLayout(self @ [[#T|T]], layout @[[..:..:Gtk:Pango:Layout#T|Gtk.Pango.Layout.T]], x @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]], y @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :DrawLayoutLine ====
'':DrawLayoutLine(self @ [[#T|T]], line @[[..:..:Gtk:Pango:LayoutLine#T|Gtk.Pango.LayoutLine.T]], x @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]], y @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :DrawRectangle ====
'':DrawRectangle(self @ [[#T|T]], part @[[..:..:Gtk:Pango:RenderPart#T|Gtk.Pango.RenderPart.T]], x @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]], y @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]], width @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]], height @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :DrawTrapezoid ====
'':DrawTrapezoid(self @ [[#T|T]], part @[[..:..:Gtk:Pango:RenderPart#T|Gtk.Pango.RenderPart.T]], y1_ @[[..:..:Std:Real#T|Std.Real.T]], x11 @[[..:..:Std:Real#T|Std.Real.T]], x21 @[[..:..:Std:Real#T|Std.Real.T]], y2 @[[..:..:Std:Real#T|Std.Real.T]], x12 @[[..:..:Std:Real#T|Std.Real.T]], x22 @[[..:..:Std:Real#T|Std.Real.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :GetColor ====
'':GetColor(self @ [[#T|T]], part @[[..:..:Gtk:Pango:RenderPart#T|Gtk.Pango.RenderPart.T]]) : [[..:..:Gtk:Pango:Color#T|Gtk.Pango.Color.T]]''


==== :GetMatrix ====
'':GetMatrix(self @ [[#T|T]]) : [[..:..:Gtk:Pango:Matrix#T|Gtk.Pango.Matrix.T]]''


==== :PartChanged ====
'':PartChanged(self @ [[#T|T]], part @[[..:..:Gtk:Pango:RenderPart#T|Gtk.Pango.RenderPart.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetColor ====
'':SetColor(self @ [[#T|T]], part @[[..:..:Gtk:Pango:RenderPart#T|Gtk.Pango.RenderPart.T]], color @[[..:..:Gtk:Pango:Color#T|Gtk.Pango.Color.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== GetType ====
''GetType() : [[..:..:Gtk:GObject:Type#T|Gtk.GObject.Type.T]]''


