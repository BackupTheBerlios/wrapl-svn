====== Screen ======
==== T ====
=== inherits from ===
  * [[..:..:Gtk:GObject:Object#T|Gtk.GObject.Object.T]]

  GdkScreen objects are the GDK representation of a physical screen. It is used
  throughout GDK and GTK+ to specify which screen the top level windows are to be
  displayed on. It is also used to query the screen specification and default
  settings such as the default colormap (gdk_screen_get_default_colormap()), the
  screen width (gdk_screen_get_width()), etc.
  Note that a screen may consist of multiple monitors which are merged to form a
  large screen area.
  

==== :SetResolution ====
'':SetResolution(self @ [[#T|T]], dpi @ [[..:..:Std:Real#T|Std.Real.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Sets the resolution for font handling on the screen. This is a scale factor
  between points specified in a PangoFontDescription and cairo units. The default
  value is 96, meaning that a 10 point font will be 13 units high. (10 * 96. /
  72. = 13.3).
  screen : a GdkScreen
  dpi :    the resolution in "dots per inch". (Physical inches aren't actually
           involved; the terminology is conventional.)
  Since 2.10

==== :SetFontOptions ====
'':SetFontOptions(self @ [[#T|T]], options @ [[..:..:Gtk:Cairo:CairoFontOptionsT#T|Gtk.Cairo.CairoFontOptionsT.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Sets the default font options for the screen. These options will be set on any
  PangoContext's newly created with gdk_pango_context_get_for_screen(). Changing
  the default set of font options does not affect contexts that have already been
  created.
  screen :  a GdkScreen
  options : a cairo_font_options_t, or NULL to unset any previously set default
            font options.
  Since 2.10

==== :SetDefaultColormap ====
'':SetDefaultColormap(self @ [[#T|T]], colormap @ [[..:..:Gtk:Gdk:Colormap#T|Gtk.Gdk.Colormap.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Sets the default colormap for screen.
  screen :   a GdkScreen
  colormap : a GdkColormap
  Since 2.2

==== :MakeDisplayName ====
'':MakeDisplayName(self @ [[#T|T]]) : [[..:..:Std:String#T|Std.String.T]]''

  Determines the name to pass to gdk_display_open() to get a GdkDisplay with this
  screen as the default screen.
  screen :  a GdkScreen
  Returns : a newly allocated string, free with g_free()
  Since 2.2

==== :ListVisuals ====
'':ListVisuals(self @ [[#T|T]]) : [[..:..:Std:List#T|Std.List.T]]''

  Lists the available visuals for the specified screen. A visual describes a
  hardware image data format. For example, a visual might support 24-bit color,
  or 8-bit color, and might expect pixels to be in a certain format.
  Call g_list_free() on the return value when you're finished with it.
  screen :  the relevant GdkScreen.
  Returns : a list of visuals; the list must be freed, but not its contents
  Since 2.2

==== :IsComposited ====
'':IsComposited(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''

  Returns whether windows with an RGBA visual can reasonably be expected to have
  their alpha channel drawn correctly on the screen.
  On X11 this function returns whether a compositing manager is compositing
  screen.
  screen :  a GdkScreen
  Returns : Whether windows with RGBA visuals can reasonably be expected to have
            their alpha channels drawn correctly on the screen.
  Since 2.10

==== :Closed ====
'':Closed(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :FontOptions ====
'':FontOptions(self @ [[#T|T]]) : [[..:..:Gtk:Cairo:CairoFontOptionsT#T|Gtk.Cairo.CairoFontOptionsT.T]]''

  Gets any options previously set with gdk_screen_set_font_options().
  screen :  a GdkScreen
  Returns : the current font options, or NULL if no default font options have
            been set.
  Since 2.10
  Sets the default font options for the screen. These options will be set on any
  PangoContext's newly created with gdk_pango_context_get_for_screen(). Changing
  the default set of font options does not affect contexts that have already been
  created.
  screen :  a GdkScreen
  options : a cairo_font_options_t, or NULL to unset any previously set default
            font options.
  Since 2.10

==== :Resolution ====
'':Resolution(self @ [[#T|T]]) : [[..:..:Std:Real#T|Std.Real.T]]''

  Gets the resolution for font handling on the screen; see
  gdk_screen_set_resolution() for full details.
  screen :  a GdkScreen
  Returns : the current resolution, or -1 if no resolution has been set.
  Since 2.10
  Sets the resolution for font handling on the screen. This is a scale factor
  between points specified in a PangoFontDescription and cairo units. The default
  value is 96, meaning that a 10 point font will be 13 units high. (10 * 96. /
  72. = 13.3).
  screen : a GdkScreen
  dpi :    the resolution in "dots per inch". (Physical inches aren't actually
           involved; the terminology is conventional.)
  Since 2.10

==== :NormalGcs ====
'':NormalGcs(self @ [[#T|T]], @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Gtk:Gdk:GC#T|Gtk.Gdk.GC.T]]''


==== :ExposureGcs ====
'':ExposureGcs(self @ [[#T|T]], @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Gtk:Gdk:GC#T|Gtk.Gdk.GC.T]]''


==== :BroadcastClientMessage ====
'':BroadcastClientMessage(self @ [[#T|T]], event @ [[..:..:Std:Object#T|Std.Object.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  On X11, sends an X ClientMessage event to all toplevel windows on screen.
  Toplevel windows are determined by checking for the WM_STATE property, as
  described in the Inter-Client Communication Conventions Manual (ICCCM). If no
  windows are found with the WM_STATE property set, the message is sent to all
  children of the root window.
  On Windows, broadcasts a message registered with the name
  GDK_WIN32_CLIENT_MESSAGE to all top-level windows. The amount of data is
  limited to one long, i.e. four bytes.
  screen : the GdkScreen where the event will be broadcasted.
  event :  the GdkEvent.
  Since 2.2

==== :GetActiveWindow ====
'':GetActiveWindow(self @ [[#T|T]]) : [[..:..:Gtk:Gdk:Window#T|Gtk.Gdk.Window.T]]''

  Returns the screen's currently active window.
  On X11, this is done by inspecting the _NET_ACTIVE_WINDOW property on the root
  window, as described in the Extended_Window_Manager_Hints. If there is no
  currently currently active window, or the window manager does not support the
  _NET_ACTIVE_WINDOW hint, this function returns NULL.
  On other platforms, this function may return NULL, depending on whether it is
  implementable on that platform.
  The returned window should be unrefed using g_object_unref() when no longer
  needed.
  screen :  a GdkScreen
  Returns : the currently active window, or NULL.
  Since 2.10

==== :GetDefaultColormap ====
'':GetDefaultColormap(self @ [[#T|T]]) : [[..:..:Gtk:Gdk:Colormap#T|Gtk.Gdk.Colormap.T]]''

  Gets the default colormap for screen.
  screen :  a GdkScreen
  Returns : the default GdkColormap.
  Since 2.2

==== :GetDisplay ====
'':GetDisplay(self @ [[#T|T]]) : [[..:..:Gtk:Gdk:Display#T|Gtk.Gdk.Display.T]]''

  Gets the display to which the screen belongs.
  screen :  a GdkScreen
  Returns : the display to which screen belongs
  Since 2.2

==== :GetFontOptions ====
'':GetFontOptions(self @ [[#T|T]]) : [[..:..:Gtk:Cairo:CairoFontOptionsT#T|Gtk.Cairo.CairoFontOptionsT.T]]''

  Gets any options previously set with gdk_screen_set_font_options().
  screen :  a GdkScreen
  Returns : the current font options, or NULL if no default font options have
            been set.
  Since 2.10

==== :GetHeight ====
'':GetHeight(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''

  Gets the height of screen in pixels
  screen :  a GdkScreen
  Returns : the height of screen in pixels.
  Since 2.2

==== :GetHeightMm ====
'':GetHeightMm(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''

  Returns the height of screen in millimeters. Note that on some X servers this
  value will not be correct.
  screen :  a GdkScreen
  Returns : the heigth of screen in millimeters.
  Since 2.2

==== :GetMonitorAtPoint ====
'':GetMonitorAtPoint(self @ [[#T|T]], x @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]], y @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''

  Returns the monitor number in which the point (x,y) is located.
  screen :  a GdkScreen.
  x :       the x coordinate in the virtual screen.
  y :       the y coordinate in the virtual screen.
  Returns : the monitor number in which the point (x,y) lies, or a monitor close
            to (x,y) if the point is not in any monitor.
  Since 2.2

==== :GetMonitorAtWindow ====
'':GetMonitorAtWindow(self @ [[#T|T]], window @ [[..:..:Gtk:Gdk:Window#T|Gtk.Gdk.Window.T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''

  Returns the number of the monitor in which the largest area of the bounding
  rectangle of window resides.
  screen :  a GdkScreen.
  window :  a GdkWindow
  Returns : the monitor number in which most of window is located, or if window
            does not intersect any monitors, a monitor, close to window.
  Since 2.2

==== :GetMonitorGeometry ====
'':GetMonitorGeometry(self @ [[#T|T]], monitor_num @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]], dest @ [[..:..:Gtk:Gdk:Rectangle#T|Gtk.Gdk.Rectangle.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Retrieves the GdkRectangle representing the size and position of the individual
  monitor within the entire screen area.
  Note that the size of the entire screen area can be retrieved via
  gdk_screen_get_width() and gdk_screen_get_height().
  screen :      a GdkScreen.
  monitor_num : the monitor number.
  dest :        a GdkRectangle to be filled with the monitor geometry
  Since 2.2

==== :GetNMonitors ====
'':GetNMonitors(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''

  Returns the number of monitors which screen consists of.
  screen :  a GdkScreen.
  Returns : number of monitors which screen consists of.
  Since 2.2

==== :GetNumber ====
'':GetNumber(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''

  Gets the index of screen among the screens in the display to which it belongs.
  (See gdk_screen_get_display())
  screen :  a GdkScreen
  Returns : the index
  Since 2.2

==== :GetResolution ====
'':GetResolution(self @ [[#T|T]]) : [[..:..:Std:Real#T|Std.Real.T]]''

  Gets the resolution for font handling on the screen; see
  gdk_screen_set_resolution() for full details.
  screen :  a GdkScreen
  Returns : the current resolution, or -1 if no resolution has been set.
  Since 2.10

==== :GetRgbColormap ====
'':GetRgbColormap(self @ [[#T|T]]) : [[..:..:Gtk:Gdk:Colormap#T|Gtk.Gdk.Colormap.T]]''

  Gets the preferred colormap for rendering image data on screen. Not a very
  useful function; historically, GDK could only render RGB image data to one
  colormap and visual, but in the current version it can render to any colormap
  and visual. So there's no need to call this function.
  screen :  a GdkScreen.
  Returns : the preferred colormap
  Since 2.2

==== :GetRgbVisual ====
'':GetRgbVisual(self @ [[#T|T]]) : [[..:..:Gtk:Gdk:Visual#T|Gtk.Gdk.Visual.T]]''

  Gets a "preferred visual" chosen by GdkRGB for rendering image data on screen.
  In previous versions of GDK, this was the only visual GdkRGB could use for
  rendering. In current versions, it's simply the visual GdkRGB would have chosen
  as the optimal one in those previous versions. GdkRGB can now render to
  drawables with any visual.
  screen :  a GdkScreen
  Returns : The GdkVisual chosen by GdkRGB.
  Since 2.2

==== :GetRgbaColormap ====
'':GetRgbaColormap(self @ [[#T|T]]) : [[..:..:Gtk:Gdk:Colormap#T|Gtk.Gdk.Colormap.T]]''

  Gets a colormap to use for creating windows or pixmaps with an alpha channel.
  The windowing system on which GTK+ is running may not support this capability,
  in which case NULL will be returned. Even if a non-NULL value is returned, its
  possible that the window's alpha channel won't be honored when displaying the
  window on the screen: in particular, for X an appropriate windowing manager and
  compositing manager must be running to provide appropriate display.
  This functionality is not implemented in the Windows backend.
  For setting an overall opacity for a top-level window, see
  gdk_window_set_opacity().
  screen :  a GdkScreen.
  Returns : a colormap to use for windows with an alpha channel or NULL if the
            capability is not available.
  Since 2.8

==== :GetRgbaVisual ====
'':GetRgbaVisual(self @ [[#T|T]]) : [[..:..:Gtk:Gdk:Visual#T|Gtk.Gdk.Visual.T]]''

  Gets a visual to use for creating windows or pixmaps with an alpha channel. See
  the docs for gdk_screen_get_rgba_colormap() for caveats.
  screen :  a GdkScreen
  Returns : a visual to use for windows with an alpha channel or NULL if the
            capability is not available.
  Since 2.8

==== :GetRootWindow ====
'':GetRootWindow(self @ [[#T|T]]) : [[..:..:Gtk:Gdk:Window#T|Gtk.Gdk.Window.T]]''

  Gets the root window of screen.
  screen :  a GdkScreen
  Returns : the root window
  Since 2.2

==== :GetSetting ====
'':GetSetting(self @ [[#T|T]], name @ [[..:..:Std:String#T|Std.String.T]], value @ [[..:..:Gtk:GObject:Value#T|Gtk.GObject.Value.T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''

  Retrieves a desktop-wide setting such as double-click time for the GdkScreen
  screen.
  FIXME needs a list of valid settings here, or a link to more information.
  screen :  the GdkScreen where the setting is located
  name :    the name of the setting
  value :   location to store the value of the setting
  Returns : TRUE if the setting existed and a value was stored in value, FALSE
            otherwise.
  Since 2.2

==== :GetSystemColormap ====
'':GetSystemColormap(self @ [[#T|T]]) : [[..:..:Gtk:Gdk:Colormap#T|Gtk.Gdk.Colormap.T]]''

  Gets the system's default colormap for screen
  screen :  a GdkScreen
  Returns : the default colormap for screen.
  Since 2.2

==== :GetSystemVisual ====
'':GetSystemVisual(self @ [[#T|T]]) : [[..:..:Gtk:Gdk:Visual#T|Gtk.Gdk.Visual.T]]''

  Get the system's default visual for screen. This is the visual for the root
  window of the display. The return value should not be freed.
  screen :  a GdkScreen.
  Returns : the system visual
  Since 2.2

==== :GetToplevelWindows ====
'':GetToplevelWindows(self @ [[#T|T]]) : [[..:..:Std:List#T|Std.List.T]]''

  Obtains a list of all toplevel windows known to GDK on the screen screen. A
  toplevel window is a child of the root window (see gdk_get_default_root_window
  ()).
  The returned list should be freed with g_list_free(), but its elements need not
  be freed.
  screen :  The GdkScreen where the toplevels are located.
  Returns : list of toplevel windows, free with g_list_free()
  Since 2.2

==== :GetWidth ====
'':GetWidth(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''

  Gets the width of screen in pixels
  screen :  a GdkScreen
  Returns : the width of screen in pixels.
  Since 2.2

==== :GetWidthMm ====
'':GetWidthMm(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''

  Gets the width of screen in millimeters. Note that on some X servers this value
  will not be correct.
  screen :  a GdkScreen
  Returns : the width of screen in millimeters.
  Since 2.2

==== :GetWindowStack ====
'':GetWindowStack(self @ [[#T|T]]) : [[..:..:Std:List#T|Std.List.T]]''

  Returns a GList of GdkWindows representing the current window stack.
  On X11, this is done by inspecting the _NET_CLIENT_LIST_STACKING property on
  the root window, as described in the Extended_Window_Manager_Hints. If the
  window manager does not support the _NET_CLIENT_LIST_STACKING hint, this
  function returns NULL.
  On other platforms, this function may return NULL, depending on whether it is
  implementable on that platform.
  The returned list is newly allocated and owns references to the windows it
  contains, so it should be freed using g_list_free() and its windows unrefed
  using g_object_unref() when no longer needed.
  screen :  a GdkScreen
  Returns : a list of GdkWindows for the current window stack, or NULL.
  Since 2.10

==== GetDefault ====
''GetDefault() : [[..:..:Gtk:Gdk:Screen#T|Gtk.Gdk.Screen.T]]''

  Gets the default screen for the default display. (See gdk_display_get_default
  ()).
  Returns : a GdkScreen, or NULL if there is no default display.
  Since 2.2

==== WidthMm ====
''WidthMm() : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== Width ====
''Width() : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== HeightMm ====
''HeightMm() : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== Height ====
''Height() : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== GetType ====
''GetType() : [[..:..:Gtk:GObject:Type#T|Gtk.GObject.Type.T]]''


