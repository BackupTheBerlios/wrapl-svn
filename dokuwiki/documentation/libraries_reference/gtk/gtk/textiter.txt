====== TextIter ======
==== T ====


==== :TogglesTag ====
'':TogglesTag(self @ [[#T|T]], tag @[[..:..:Gtk:Gtk:TextTag#T|Gtk.Gtk.TextTag.T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :StartsWord ====
'':StartsWord(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :Dummy1 ====
'':Dummy1(self @ [[#T|T]]) : [[..:..:Std:Address#T|Std.Address.T]]''


==== :Dummy2 ====
'':Dummy2(self @ [[#T|T]]) : [[..:..:Std:Address#T|Std.Address.T]]''


==== :Dummy3 ====
'':Dummy3(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :Dummy4 ====
'':Dummy4(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :Dummy5 ====
'':Dummy5(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :Dummy6 ====
'':Dummy6(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :Dummy7 ====
'':Dummy7(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :Dummy8 ====
'':Dummy8(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :Dummy9 ====
'':Dummy9(self @ [[#T|T]]) : [[..:..:Std:Address#T|Std.Address.T]]''


==== :Dummy10 ====
'':Dummy10(self @ [[#T|T]]) : [[..:..:Std:Address#T|Std.Address.T]]''


==== :Dummy11 ====
'':Dummy11(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :Dummy12 ====
'':Dummy12(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :Dummy13 ====
'':Dummy13(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :Dummy14 ====
'':Dummy14(self @ [[#T|T]]) : [[..:..:Std:Address#T|Std.Address.T]]''


==== :BackwardChar ====
'':BackwardChar(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :BackwardChars ====
'':BackwardChars(self @ [[#T|T]], count @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :BackwardCursorPosition ====
'':BackwardCursorPosition(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :BackwardCursorPositions ====
'':BackwardCursorPositions(self @ [[#T|T]], count @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :BackwardFindChar ====
'':BackwardFindChar(self @ [[#T|T]], pred @[[..:..:Std:Function#T|Std.Function.T]], user_data @[[..:..:Std:Address#T|Std.Address.T]], limit @[[..:..:Gtk:Gtk:TextIter#T|Gtk.Gtk.TextIter.T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :BackwardLine ====
'':BackwardLine(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :BackwardLines ====
'':BackwardLines(self @ [[#T|T]], count @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :BackwardSearch ====
'':BackwardSearch(self @ [[#T|T]], str @[[..:..:Std:String#T|Std.String.T]], flags @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]], match_start @[[..:..:Gtk:Gtk:TextIter#T|Gtk.Gtk.TextIter.T]], match_end @[[..:..:Gtk:Gtk:TextIter#T|Gtk.Gtk.TextIter.T]], limit @[[..:..:Gtk:Gtk:TextIter#T|Gtk.Gtk.TextIter.T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :BackwardSentenceStart ====
'':BackwardSentenceStart(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :BackwardSentenceStarts ====
'':BackwardSentenceStarts(self @ [[#T|T]], count @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :BackwardToTagToggle ====
'':BackwardToTagToggle(self @ [[#T|T]], tag @[[..:..:Gtk:Gtk:TextTag#T|Gtk.Gtk.TextTag.T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :BackwardVisibleCursorPosition ====
'':BackwardVisibleCursorPosition(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :BackwardVisibleCursorPositions ====
'':BackwardVisibleCursorPositions(self @ [[#T|T]], count @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :BackwardVisibleLine ====
'':BackwardVisibleLine(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :BackwardVisibleLines ====
'':BackwardVisibleLines(self @ [[#T|T]], count @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :BackwardVisibleWordStart ====
'':BackwardVisibleWordStart(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :BackwardVisibleWordStarts ====
'':BackwardVisibleWordStarts(self @ [[#T|T]], count @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :BackwardWordStart ====
'':BackwardWordStart(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :BackwardWordStarts ====
'':BackwardWordStarts(self @ [[#T|T]], count @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :BeginsTag ====
'':BeginsTag(self @ [[#T|T]], tag @[[..:..:Gtk:Gtk:TextTag#T|Gtk.Gtk.TextTag.T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :CanInsert ====
'':CanInsert(self @ [[#T|T]], default_editability @[[..:..:Std:Symbol#T|Std.Symbol.T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :Compare ====
'':Compare(self @ [[#T|T]], rhs @[[..:..:Gtk:Gtk:TextIter#T|Gtk.Gtk.TextIter.T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :Copy ====
'':Copy(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:TextIter#T|Gtk.Gtk.TextIter.T]]''


==== :Editable ====
'':Editable(self @ [[#T|T]], default_setting @[[..:..:Std:Symbol#T|Std.Symbol.T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :EndsLine ====
'':EndsLine(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :EndsSentence ====
'':EndsSentence(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :EndsTag ====
'':EndsTag(self @ [[#T|T]], tag @[[..:..:Gtk:Gtk:TextTag#T|Gtk.Gtk.TextTag.T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :EndsWord ====
'':EndsWord(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :Equal ====
'':Equal(self @ [[#T|T]], rhs @[[..:..:Gtk:Gtk:TextIter#T|Gtk.Gtk.TextIter.T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :ForwardChar ====
'':ForwardChar(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :ForwardChars ====
'':ForwardChars(self @ [[#T|T]], count @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :ForwardCursorPosition ====
'':ForwardCursorPosition(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :ForwardCursorPositions ====
'':ForwardCursorPositions(self @ [[#T|T]], count @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :ForwardFindChar ====
'':ForwardFindChar(self @ [[#T|T]], pred @[[..:..:Std:Function#T|Std.Function.T]], user_data @[[..:..:Std:Address#T|Std.Address.T]], limit @[[..:..:Gtk:Gtk:TextIter#T|Gtk.Gtk.TextIter.T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :ForwardLine ====
'':ForwardLine(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :ForwardLines ====
'':ForwardLines(self @ [[#T|T]], count @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :ForwardSearch ====
'':ForwardSearch(self @ [[#T|T]], str @[[..:..:Std:String#T|Std.String.T]], flags @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]], match_start @[[..:..:Gtk:Gtk:TextIter#T|Gtk.Gtk.TextIter.T]], match_end @[[..:..:Gtk:Gtk:TextIter#T|Gtk.Gtk.TextIter.T]], limit @[[..:..:Gtk:Gtk:TextIter#T|Gtk.Gtk.TextIter.T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :ForwardSentenceEnd ====
'':ForwardSentenceEnd(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :ForwardSentenceEnds ====
'':ForwardSentenceEnds(self @ [[#T|T]], count @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :ForwardToEnd ====
'':ForwardToEnd(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :ForwardToLineEnd ====
'':ForwardToLineEnd(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :ForwardToTagToggle ====
'':ForwardToTagToggle(self @ [[#T|T]], tag @[[..:..:Gtk:Gtk:TextTag#T|Gtk.Gtk.TextTag.T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :ForwardVisibleCursorPosition ====
'':ForwardVisibleCursorPosition(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :ForwardVisibleCursorPositions ====
'':ForwardVisibleCursorPositions(self @ [[#T|T]], count @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :ForwardVisibleLine ====
'':ForwardVisibleLine(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :ForwardVisibleLines ====
'':ForwardVisibleLines(self @ [[#T|T]], count @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :ForwardVisibleWordEnd ====
'':ForwardVisibleWordEnd(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :ForwardVisibleWordEnds ====
'':ForwardVisibleWordEnds(self @ [[#T|T]], count @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :ForwardWordEnd ====
'':ForwardWordEnd(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :ForwardWordEnds ====
'':ForwardWordEnds(self @ [[#T|T]], count @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :Free ====
'':Free(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :GetAttributes ====
'':GetAttributes(self @ [[#T|T]], values @[[..:..:Gtk:Gtk:TextAttributes#T|Gtk.Gtk.TextAttributes.T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :GetBuffer ====
'':GetBuffer(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:TextBuffer#T|Gtk.Gtk.TextBuffer.T]]''


==== :GetBytesInLine ====
'':GetBytesInLine(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :GetChar ====
'':GetChar(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :GetCharsInLine ====
'':GetCharsInLine(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :GetChildAnchor ====
'':GetChildAnchor(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:TextChildAnchor#T|Gtk.Gtk.TextChildAnchor.T]]''


==== :GetLanguage ====
'':GetLanguage(self @ [[#T|T]]) : [[..:..:Gtk:Pango:Language#T|Gtk.Pango.Language.T]]''


==== :GetLine ====
'':GetLine(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :GetLineIndex ====
'':GetLineIndex(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :GetLineOffset ====
'':GetLineOffset(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :GetMarks ====
'':GetMarks(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :GetOffset ====
'':GetOffset(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :GetPixbuf ====
'':GetPixbuf(self @ [[#T|T]]) : [[..:..:Gtk:Gdk:Pixbuf#T|Gtk.Gdk.Pixbuf.T]]''


==== :GetSlice ====
'':GetSlice(self @ [[#T|T]], end @[[..:..:Gtk:Gtk:TextIter#T|Gtk.Gtk.TextIter.T]]) : [[..:..:Std:String#T|Std.String.T]]''


==== :GetTags ====
'':GetTags(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :GetText ====
'':GetText(self @ [[#T|T]], end @[[..:..:Gtk:Gtk:TextIter#T|Gtk.Gtk.TextIter.T]]) : [[..:..:Std:String#T|Std.String.T]]''


==== :GetToggledTags ====
'':GetToggledTags(self @ [[#T|T]], toggled_on @[[..:..:Std:Symbol#T|Std.Symbol.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :GetVisibleLineIndex ====
'':GetVisibleLineIndex(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :GetVisibleLineOffset ====
'':GetVisibleLineOffset(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :GetVisibleSlice ====
'':GetVisibleSlice(self @ [[#T|T]], end @[[..:..:Gtk:Gtk:TextIter#T|Gtk.Gtk.TextIter.T]]) : [[..:..:Std:String#T|Std.String.T]]''


==== :GetVisibleText ====
'':GetVisibleText(self @ [[#T|T]], end @[[..:..:Gtk:Gtk:TextIter#T|Gtk.Gtk.TextIter.T]]) : [[..:..:Std:String#T|Std.String.T]]''


==== :HasTag ====
'':HasTag(self @ [[#T|T]], tag @[[..:..:Gtk:Gtk:TextTag#T|Gtk.Gtk.TextTag.T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :InRange ====
'':InRange(self @ [[#T|T]], start @[[..:..:Gtk:Gtk:TextIter#T|Gtk.Gtk.TextIter.T]], end @[[..:..:Gtk:Gtk:TextIter#T|Gtk.Gtk.TextIter.T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :InsideSentence ====
'':InsideSentence(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :InsideWord ====
'':InsideWord(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :IsCursorPosition ====
'':IsCursorPosition(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :IsEnd ====
'':IsEnd(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :IsStart ====
'':IsStart(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :Order ====
'':Order(self @ [[#T|T]], second @[[..:..:Gtk:Gtk:TextIter#T|Gtk.Gtk.TextIter.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetLine ====
'':SetLine(self @ [[#T|T]], line_number @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetLineIndex ====
'':SetLineIndex(self @ [[#T|T]], byte_on_line @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetLineOffset ====
'':SetLineOffset(self @ [[#T|T]], char_on_line @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetOffset ====
'':SetOffset(self @ [[#T|T]], char_offset @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetVisibleLineIndex ====
'':SetVisibleLineIndex(self @ [[#T|T]], byte_on_line @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetVisibleLineOffset ====
'':SetVisibleLineOffset(self @ [[#T|T]], char_on_line @[[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :StartsLine ====
'':StartsLine(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :StartsSentence ====
'':StartsSentence(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== New ====
''New()''


==== GetType ====
''GetType() : [[..:..:Gtk:GObject:Type#T|Gtk.GObject.Type.T]]''


