====== ScrolledWindow ======
==== T ====
=== inherits from ===
  * [[..:..:Gtk:Gtk:Bin#T|Gtk.Gtk.Bin.T]]
  * [[..:..:Gtk:Gtk:Container#T|Gtk.Gtk.Container.T]]
  * [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]
  * [[..:..:Gtk:Gtk:Object#T|Gtk.Gtk.Object.T]]
  * [[..:..:Gtk:GObject:Object#T|Gtk.GObject.Object.T]]

  GtkScrolledWindow is a GtkBin subclass: it's a container the accepts a single child widget. GtkScrolledWindow adds scrollbars to the child widget and optionally draws a beveled frame around the child widget.
  The scrolled window can work in two ways. Some widgets have native scrolling support; these widgets have "slots" for GtkAdjustment objects. [5] Widgets with native scroll support include GtkTreeView, GtkTextView, and GtkLayout.
  For widgets that lack native scrolling support, the GtkViewport widget acts as an adaptor class, implementing scrollability for child widgets that lack their own scrolling capabilities. Use GtkViewport to scroll child widgets such as GtkTable, GtkBox, and so on.
  If a widget has native scrolling abilities, it can be added to the GtkScrolledWindow with gtk_container_add(). If a widget does not, you must first add the widget to a GtkViewport, then add the GtkViewport to the scrolled window. The convenience function gtk_scrolled_window_add_with_viewport() does exactly this, so you can ignore the presence of the viewport.
  The position of the scrollbars is controlled by the scroll adjustments. See GtkAdjustment for the fields in an adjustment - for GtkScrollbar, used by GtkScrolledWindow, the "value" field represents the position of the scrollbar, which must be between the "lower" field and "upper - page_size." The "page_size" field represents the size of the visible scrollable area. The "step_increment" and "page_increment" fields are used when the user asks to step down (using the small stepper arrows) or page down (using for example the PageDown key).
  If a GtkScrolledWindow doesn't behave quite as you would like, or doesn't have exactly the right layout, it's very possible to set up your own scrolling with GtkScrollbar and for example a GtkTable.
  

==== :UnsetPlacement ====
'':UnsetPlacement(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Unsets the placement of the contents with respect to the scrollbars for the scrolled window. If no window placement is set for a scrolled window, it obeys the "gtk-scrolled-window-placement" XSETTING.
  See also gtk_scrolled_window_set_placement() and gtk_scrolled_window_get_placement().
  
  scrolled_window : a GtkScrolledWindow
  

==== :SetVadjustment ====
'':SetVadjustment(self @ [[#T|T]], vadjustment @ [[..:..:Gtk:Gtk:Adjustment#T|Gtk.Gtk.Adjustment.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Sets the GtkAdjustment for the vertical scrollbar.
  
  scrolled_window : A GtkScrolledWindow.
  vadjustment :     Vertical scroll adjustment.
  

==== :Hscrollbar ====
'':Hscrollbar(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]''

  Returns the horizontal scrollbar of scrolled_window.
  
  scrolled_window : a GtkScrolledWindow
  Returns :         the horizontal scrollbar of the scrolled window, or NULL if it does not have one.
  

==== :Vscrollbar ====
'':Vscrollbar(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]''

  Returns the vertical scrollbar of scrolled_window.
  
  scrolled_window : a GtkScrolledWindow
  Returns :         the vertical scrollbar of the scrolled window, or NULL if it does not have one.
  

==== :HscrollbarPolicy ====
'':HscrollbarPolicy(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :VscrollbarPolicy ====
'':VscrollbarPolicy(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :HscrollbarVisible ====
'':HscrollbarVisible(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :VscrollbarVisible ====
'':VscrollbarVisible(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :WindowPlacement ====
'':WindowPlacement(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :FocusOut ====
'':FocusOut(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :ShadowType ====
'':ShadowType(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''

  Changes the type of shadow drawn around the contents of scrolled_window.
  
  scrolled_window : a GtkScrolledWindow
  type :            kind of shadow to draw around scrolled window contents
  
  Gets the shadow type of the scrolled window. See gtk_scrolled_window_set_shadow_type().
  
  scrolled_window : a GtkScrolledWindow
  Returns :         the current shadow type
  

==== :AddWithViewport ====
'':AddWithViewport(self @ [[#T|T]], child @ [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Used to add children without native scrolling capabilities. This is simply a convenience function; it is equivalent to adding the unscrollable child to a viewport, then adding the viewport to the scrolled window. If a child has native scrolling, use gtk_container_add() instead of this function.
  The viewport scrolls the child by moving its GdkWindow, and takes the size of the child to be the size of its toplevel GdkWindow. This will be very wrong for most widgets that support native scrolling; for example, if you add a widget such as GtkTreeView with a viewport, the whole widget will scroll, including the column headings. Thus, widgets with native scrolling support should not be used with the GtkViewport proxy.
  A widget supports scrolling natively if the set_scroll_adjustments_signal field in GtkWidgetClass is non-zero, i.e. has been filled in with a valid signal identifier.
  
  scrolled_window : A GtkScrolledWindow.
  child :           Widget you want to scroll.
  

==== :GetHadjustment ====
'':GetHadjustment(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:Adjustment#T|Gtk.Gtk.Adjustment.T]]''

  Returns the horizontal scrollbar's adjustment, used to connect the horizontal scrollbar to the child widget's horizontal scroll functionality.
  
  scrolled_window : A GtkScrolledWindow.
  Returns :         The horizontal GtkAdjustment.
  

==== :GetHscrollbar ====
'':GetHscrollbar(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]''

  Returns the horizontal scrollbar of scrolled_window.
  
  scrolled_window : a GtkScrolledWindow
  Returns :         the horizontal scrollbar of the scrolled window, or NULL if it does not have one.
  

==== :GetPlacement ====
'':GetPlacement(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:CornerType#T|Gtk.Gtk.CornerType.T]]''

  Gets the placement of the contents with respect to the scrollbars for the scrolled window. See gtk_scrolled_window_set_placement().
  
  scrolled_window : a GtkScrolledWindow
  Returns :         the current placement value. See also gtk_scrolled_window_set_placement() and gtk_scrolled_window_unset_placement().
  

==== :GetPolicy ====
'':GetPolicy(self @ [[#T|T]], hscrollbar_policy @ [[..:..:Std:Object#T|Std.Object.T]], vscrollbar_policy @ [[..:..:Std:Object#T|Std.Object.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Retrieves the current policy values for the horizontal and vertical scrollbars. See gtk_scrolled_window_set_policy().
  
  scrolled_window :   a GtkScrolledWindow
  hscrollbar_policy : location to store the policy for the horizontal scrollbar, or NULL.
  vscrollbar_policy : location to store the policy for the horizontal scrollbar, or NULL.
  

==== :GetShadowType ====
'':GetShadowType(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:ShadowType#T|Gtk.Gtk.ShadowType.T]]''

  Gets the shadow type of the scrolled window. See gtk_scrolled_window_set_shadow_type().
  
  scrolled_window : a GtkScrolledWindow
  Returns :         the current shadow type
  

==== :GetVadjustment ====
'':GetVadjustment(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:Adjustment#T|Gtk.Gtk.Adjustment.T]]''

  Returns the vertical scrollbar's adjustment, used to connect the vertical scrollbar to the child widget's vertical scroll functionality.
  
  scrolled_window : A GtkScrolledWindow.
  Returns :         The vertical GtkAdjustment.
  

==== :GetVscrollbar ====
'':GetVscrollbar(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]''

  Returns the vertical scrollbar of scrolled_window.
  
  scrolled_window : a GtkScrolledWindow
  Returns :         the vertical scrollbar of the scrolled window, or NULL if it does not have one.
  

==== :SetHadjustment ====
'':SetHadjustment(self @ [[#T|T]], hadjustment @ [[..:..:Gtk:Gtk:Adjustment#T|Gtk.Gtk.Adjustment.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Sets the GtkAdjustment for the horizontal scrollbar.
  
  scrolled_window : A GtkScrolledWindow.
  hadjustment :     Horizontal scroll adjustment.
  

==== :SetPlacement ====
'':SetPlacement(self @ [[#T|T]], window_placement @ [[..:..:Gtk:Gtk:CornerType#T|Gtk.Gtk.CornerType.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Sets the placement of the contents with respect to the scrollbars for the scrolled window. The default is GTK_CORNER_TOP_LEFT, meaning the child is in the top left, with the scrollbars underneath and to the right. Other values in GtkCornerType are GTK_CORNER_TOP_RIGHT, GTK_CORNER_BOTTOM_LEFT, and GTK_CORNER_BOTTOM_RIGHT.
  See also gtk_scrolled_window_get_placement() and gtk_scrolled_window_unset_placement().
  Determines the location of the child widget with respect to the scrollbars. The default is GTK_CORNER_TOP_LEFT, meaning the child is in the top left, with the scrollbars underneath and to the right. Other values in GtkCornerType are GTK_CORNER_TOP_RIGHT, GTK_CORNER_BOTTOM_LEFT, and GTK_CORNER_BOTTOM_RIGHT.
  
  scrolled_window :  a GtkScrolledWindow
  window_placement : position of the child window
  

==== :SetPolicy ====
'':SetPolicy(self @ [[#T|T]], hscrollbar_policy @ [[..:..:Gtk:Gtk:PolicyType#T|Gtk.Gtk.PolicyType.T]], vscrollbar_policy @ [[..:..:Gtk:Gtk:PolicyType#T|Gtk.Gtk.PolicyType.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Sets the scrollbar policy for the horizontal and vertical scrollbars. The policy determines when the scrollbar should appear; it is a value from the GtkPolicyType enumeration. If GTK_POLICY_ALWAYS, the scrollbar is always present; if GTK_POLICY_NEVER, the scrollbar is never present; if GTK_POLICY_AUTOMATIC, the scrollbar is present only if needed (that is, if the slider part of the bar would be smaller than the trough - the display is larger than the page size).
  
  scrolled_window :   A GtkScrolledWindow.
  hscrollbar_policy : Policy for horizontal bar.
  vscrollbar_policy : Policy for vertical bar.
  

==== :SetShadowType ====
'':SetShadowType(self @ [[#T|T]], type @ [[..:..:Gtk:Gtk:ShadowType#T|Gtk.Gtk.ShadowType.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Changes the type of shadow drawn around the contents of scrolled_window.
  
  scrolled_window : a GtkScrolledWindow
  type :            kind of shadow to draw around scrolled window contents
  

==== New ====
''New(hadjustment : [[..:..:Gtk:Gtk:Adjustment#T|Gtk.Gtk.Adjustment.T]], vadjustment : [[..:..:Gtk:Gtk:Adjustment#T|Gtk.Gtk.Adjustment.T]]) : [[# T| T]]''

  Creates a new scrolled window. The two arguments are the scrolled window's adjustments; these will be shared with the scrollbars and the child widget to keep the bars in sync with the child. Usually you want to pass NULL for the adjustments, which will cause the scrolled window to create them for you.
  
  hadjustment : Horizontal adjustment.
  vadjustment : Vertical adjustment.
  Returns :     New scrolled window.
  

==== GetType ====
''GetType() : [[..:..:Gtk:GObject:Type#T|Gtk.GObject.Type.T]]''


