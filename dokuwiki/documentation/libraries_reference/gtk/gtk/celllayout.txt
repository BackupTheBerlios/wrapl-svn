====== CellLayout ======
==== T ====

  GtkCellLayout is an interface to be implemented by all objects which want to provide a GtkTreeViewColumn-like API for packing cells, setting attributes and data funcs.
  One of the notable features provided by implementations of GtkCellLayout are attributes. Attributes let you set the properties in flexible ways. They can just be set to constant values like regular properties. But they can also be mapped to a column of the underlying tree model with gtk_cell_layout_set_attributes(), which means that the value of the attribute can change from cell to cell as they are rendered by the cell renderer. Finally, it is possible to specify a function with gtk_cell_layout_set_cell_data_func() that is called to determine the value of the attribute for each cell that is rendered.
  === GtkCellLayouts as GtkBuildable ===
  Implementations of GtkCellLayout which also implement the GtkBuildable interface (GtkCellView, GtkIconView, GtkComboBox, GtkComboBoxEntry, GtkEntryCompletion, GtkTreeViewColumn) accept GtkCellRenderer objects as <child> elements in UI definitions. They support a custom <attributes> element for their children, which can contain multiple <attribute> elements. Each <attribute> element has a name attribute which specifies a property of the cell renderer; the content of the element is the attribute value.
  Example 20.&#160;A UI definition fragment specifying attributes
  <object class="GtkCellView">
    <child>
      <object class="GtkCellRendererText"/>
      <attributes>
        <attribute name="text">0</attribute>
      </attributes>
    </child>"
  </object>
  
  

==== :SetCellDataFunc ====
'':SetCellDataFunc(self @ [[#T|T]], cell @ [[..:..:Gtk:Gtk:CellRenderer#T|Gtk.Gtk.CellRenderer.T]], func @ [[..:..:Std:Function#T|Std.Function.T]], func_data @ [[..:..:Std:Address#T|Std.Address.T]], destroy @ [[..:..:Std:Object#T|Std.Object.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Sets the GtkCellLayoutDataFunc to use for cell_layout. This function is used instead of the standard attributes mapping for setting the column value, and should set the value of cell_layout's cell renderer(s) as appropriate. func may be NULL to remove and older one.
  
  cell_layout : A GtkCellLayout.
  cell :        A GtkCellRenderer.
  func :        The GtkCellLayoutDataFunc to use.
  func_data :   The user data for func.
  destroy :     The destroy notification for func_data.
  

==== :AddAttribute ====
'':AddAttribute(self @ [[#T|T]], cell @ [[..:..:Gtk:Gtk:CellRenderer#T|Gtk.Gtk.CellRenderer.T]], attribute @ [[..:..:Std:String#T|Std.String.T]], column @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Adds an attribute mapping to the list in cell_layout. The column is the column of the model to get a value from, and the attribute is the parameter on cell to be set from the value. So for example if column 2 of the model contains strings, you could have the "text" attribute of a GtkCellRendererText get its values from column 2.
  
  cell_layout : A GtkCellLayout.
  cell :        A GtkCellRenderer.
  attribute :   An attribute on the renderer.
  column :      The column position on the model to get the attribute from.
  

==== :Clear ====
'':Clear(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Unsets all the mappings on all renderers on cell_layout and removes all renderers from cell_layout.
  
  cell_layout : A GtkCellLayout.
  

==== :ClearAttributes ====
'':ClearAttributes(self @ [[#T|T]], cell @ [[..:..:Gtk:Gtk:CellRenderer#T|Gtk.Gtk.CellRenderer.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Clears all existing attributes previously set with gtk_cell_layout_set_attributes().
  
  cell_layout : A GtkCellLayout.
  cell :        A GtkCellRenderer to clear the attribute mapping on.
  

==== :GetCells ====
'':GetCells(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Returns the cell renderers which have been added to cell_layout.
  
  cell_layout : a GtkCellLayout
  Returns :     a list of cell renderers. The list, but not the renderers has been newly allocated and should be freed with g_list_free() when no longer needed.
  

==== :PackEnd ====
'':PackEnd(self @ [[#T|T]], cell @ [[..:..:Gtk:Gtk:CellRenderer#T|Gtk.Gtk.CellRenderer.T]], expand @ [[..:..:Std:Symbol#T|Std.Symbol.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Adds the cell to the end of cell_layout. If expand is FALSE, then the cell is allocated no more space than it needs. Any unused space is divided evenly between cells for which expand is TRUE.
  Note that reusing the same cell renderer is not supported.
  
  cell_layout : A GtkCellLayout.
  cell :        A GtkCellRenderer.
  expand :      TRUE if cell is to be given extra space allocated to cell_layout.
  

==== :PackStart ====
'':PackStart(self @ [[#T|T]], cell @ [[..:..:Gtk:Gtk:CellRenderer#T|Gtk.Gtk.CellRenderer.T]], expand @ [[..:..:Std:Symbol#T|Std.Symbol.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Packs the cell into the beginning of cell_layout. If expand is FALSE, then the cell is allocated no more space than it needs. Any unused space is divided evenly between cells for which expand is TRUE.
  Note that reusing the same cell renderer is not supported.
  
  cell_layout : A GtkCellLayout.
  cell :        A GtkCellRenderer.
  expand :      TRUE if cell is to be given extra space allocated to cell_layout.
  

==== :Reorder ====
'':Reorder(self @ [[#T|T]], cell @ [[..:..:Gtk:Gtk:CellRenderer#T|Gtk.Gtk.CellRenderer.T]], position @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Re-inserts cell at position. Note that cell has already to be packed into cell_layout for this to function properly.
  
  cell_layout : A GtkCellLayout.
  cell :        A GtkCellRenderer to reorder.
  position :    New position to insert cell at.
  

==== :SetAttributes ====
'':SetAttributes(self @ [[#T|T]], cell @ [[..:..:Gtk:Gtk:CellRenderer#T|Gtk.Gtk.CellRenderer.T]], __etc__ @ [[..:..:Std:Object#T|Std.Object.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Sets the attributes in list as the attributes of cell_layout. The attributes should be in attribute/column order, as in gtk_cell_layout_add_attribute(). All existing attributes are removed, and replaced with the new attributes.
  
  cell_layout : A GtkCellLayout.
  cell :        A GtkCellRenderer.
  ... :         A NULL-terminated list of attributes.
  

==== GetType ====
''GetType() : [[..:..:Gtk:GObject:Type#T|Gtk.GObject.Type.T]]''


