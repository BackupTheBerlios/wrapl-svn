====== Toolbar ======
==== T ====
=== inherits from ===
  * [[..:..:Gtk:Gtk:Container#T|Gtk.Gtk.Container.T]]
  * [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]
  * [[..:..:Gtk:Gtk:Object#T|Gtk.Gtk.Object.T]]
  * [[..:..:Gtk:GObject:Object#T|Gtk.GObject.Object.T]]

  A toolbar is created with a call to gtk_toolbar_new().
  A toolbar can contain instances of a subclass of GtkToolItem. To add a
  GtkToolItem to the a toolbar, use gtk_toolbar_insert(). To remove an item from
  the toolbar use gtk_container_remove(). To add a button to the toolbar, add an
  instance of GtkToolButton.
  Toolbar items can be visually grouped by adding instances of
  GtkSeparatorToolItem to the toolbar. If a GtkSeparatorToolItem has the "expand"
  property set to TRUE and the "draw" property set to FALSE the effect is to
  force all following items to the end of the toolbar.
  Creating a context menu for the toolbar can be done by connecting to the
  "popup-context-menu" signal.
  

==== :UnsetStyle ====
'':UnsetStyle(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Unsets a toolbar style set with gtk_toolbar_set_style(), so that user
  preferences will be used to determine the toolbar style.
  toolbar : a GtkToolbar
  ***** Property Details *****
  The "icon-size" property
    "icon-size"                GtkIconSize           : Read / Write
  The size of the icons in a toolbar is normally determined by the toolbar-icon-
  size setting. When this property is set, it overrides the setting.
  This should only be used for special-purpose toolbars, normal application
  toolbars should respect the user preferences for the size of icons.
  Default value: GTK_ICON_SIZE_LARGE_TOOLBAR
  Since 2.10

==== :UnsetIconSize ====
'':UnsetIconSize(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Unsets toolbar icon size set with gtk_toolbar_set_icon_size(), so that user
  preferences will be used to determine the icon size.
  toolbar : a GtkToolbar

==== :NumChildren ====
'':NumChildren(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :Children ====
'':Children(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :Orientation ====
'':Orientation(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:Orientation#T|Gtk.Gtk.Orientation.T]]''

  Sets whether a toolbar should appear horizontally or vertically.
  toolbar :     a GtkToolbar.
  orientation : a new GtkOrientation.
  Retrieves the current orientation of the toolbar. See
  gtk_toolbar_set_orientation().
  toolbar : a GtkToolbar
  Returns : the orientation

==== :Style ====
'':Style(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:ToolbarStyle#T|Gtk.Gtk.ToolbarStyle.T]]''

  Retrieves whether the toolbar has text, icons, or both . See
  gtk_toolbar_set_style().
  toolbar : a GtkToolbar
  Returns : the current style of toolbar
  Returns the relief style of buttons on toolbar. See gtk_button_set_relief().
  toolbar : a GtkToolbar
  Returns : The relief style of buttons on toolbar.
  Since 2.4
  Alters the view of toolbar to display either icons only, text only, or both.
  toolbar : a GtkToolbar.
  style :   the new style for toolbar.
  Unsets a toolbar style set with gtk_toolbar_set_style(), so that user
  preferences will be used to determine the toolbar style.
  toolbar : a GtkToolbar
  ***** Property Details *****
  The "icon-size" property
    "icon-size"                GtkIconSize           : Read / Write
  The size of the icons in a toolbar is normally determined by the toolbar-icon-
  size setting. When this property is set, it overrides the setting.
  This should only be used for special-purpose toolbars, normal application
  toolbars should respect the user preferences for the size of icons.
  Default value: GTK_ICON_SIZE_LARGE_TOOLBAR
  Since 2.10

==== :IconSize ====
'':IconSize(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:IconSize#T|Gtk.Gtk.IconSize.T]]''

  Unsets toolbar icon size set with gtk_toolbar_set_icon_size(), so that user
  preferences will be used to determine the icon size.
  toolbar : a GtkToolbar
  Retrieves the icon size for the toolbar. See gtk_toolbar_set_icon_size().
  toolbar : a GtkToolbar
  Returns : the current icon size for the icons on the toolbar.
  This function sets the size of stock icons in the toolbar. You can call it both
  before you add the icons and after they've been added. The size you set will
  override user preferences for the default icon size.
  This should only be used for special-purpose toolbars, normal application
  toolbars should respect the user preferences for the size of icons.
  toolbar :   A GtkToolbar
  icon_size : The GtkIconSize that stock icons in the toolbar shall have.

==== :ButtonMaxw ====
'':ButtonMaxw(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :ButtonMaxh ====
'':ButtonMaxh(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :GtkReserved1 ====
'':GtkReserved1(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :GtkReserved2 ====
'':GtkReserved2(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :StyleSet ====
'':StyleSet(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :IconSizeSet ====
'':IconSizeSet(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :AppendElement ====
'':AppendElement(self @ [[#T|T]], type @ [[..:..:Gtk:Gtk:ToolbarChildType#T|Gtk.Gtk.ToolbarChildType.T]], widget @ [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]], text @ [[..:..:Std:String#T|Std.String.T]], tooltip_text @ [[..:..:Std:String#T|Std.String.T]], tooltip_private_text @ [[..:..:Std:String#T|Std.String.T]], icon @ [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]], callback @ [[..:..:Std:Function#T|Std.Function.T]], user_data @ [[..:..:Std:Address#T|Std.Address.T]]) : [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]''

  **** Warning ****
  gtk_toolbar_append_element is deprecated and should not be used in newly-
  written code.
  Adds a new element to the end of a toolbar.
  If type == GTK_TOOLBAR_CHILD_WIDGET, widget is used as the new element. If type
  == GTK_TOOLBAR_CHILD_RADIOBUTTON, widget is used to determine the radio group
  for the new element. In all other cases, widget must be NULL.
  callback must be a pointer to a function taking a GtkWidget and a gpointer as
  arguments. Use the GTK_SIGNAL_FUNC() to cast the function to GtkSignalFunc.
  toolbar :              a GtkToolbar.
  type :                 a value of type GtkToolbarChildType that determines what
                         widget will be.
  widget :               a GtkWidget, or NULL.
  text :                 the element's label.
  tooltip_text :         the element's tooltip.
  tooltip_private_text : used for context-sensitive help about this toolbar
                         element.
  icon :                 a GtkWidget that provides pictorial representation of
                         the element's function.
  callback :             the function to be executed when the button is pressed.
  user_data :            any data you wish to pass to the callback.
  Returns :              the new toolbar element as a GtkWidget.

==== :AppendItem ====
'':AppendItem(self @ [[#T|T]], text @ [[..:..:Std:String#T|Std.String.T]], tooltip_text @ [[..:..:Std:String#T|Std.String.T]], tooltip_private_text @ [[..:..:Std:String#T|Std.String.T]], icon @ [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]], callback @ [[..:..:Std:Function#T|Std.Function.T]], user_data @ [[..:..:Std:Address#T|Std.Address.T]]) : [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]''

  **** Warning ****
  gtk_toolbar_append_item is deprecated and should not be used in newly-written
  code.
  Inserts a new item into the toolbar. You must specify the position in the
  toolbar where it will be inserted.
  callback must be a pointer to a function taking a GtkWidget and a gpointer as
  arguments. Use the GTK_SIGNAL_FUNC() to cast the function to GtkSignalFunc.
  toolbar :              a GtkToolbar.
  text :                 give your toolbar button a label.
  tooltip_text :         a string that appears when the user holds the mouse over
                         this item.
  tooltip_private_text : use with GtkTipsQuery.
  icon :                 a GtkWidget that should be used as the button's icon.
  callback :             the function to be executed when the button is pressed.
  user_data :            a pointer to any data you wish to be passed to the
                         callback.
  Returns :              the new toolbar item as a GtkWidget.

==== :AppendSpace ====
'':AppendSpace(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  **** Warning ****
  gtk_toolbar_append_space is deprecated and should not be used in newly-written
  code.
  Adds a new space to the end of the toolbar.
  toolbar : a GtkToolbar.

==== :AppendWidget ====
'':AppendWidget(self @ [[#T|T]], widget @ [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]], tooltip_text @ [[..:..:Std:String#T|Std.String.T]], tooltip_private_text @ [[..:..:Std:String#T|Std.String.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  **** Warning ****
  gtk_toolbar_append_widget is deprecated and should not be used in newly-written
  code.
  Adds a widget to the end of the given toolbar.
  toolbar :              a GtkToolbar.
  widget :               a GtkWidget to add to the toolbar.
  tooltip_text :         the element's tooltip.
  tooltip_private_text : used for context-sensitive help about this toolbar
                         element.

==== :GetDropIndex ====
'':GetDropIndex(self @ [[#T|T]], x @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]], y @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''

  Returns the position corresponding to the indicated point on toolbar. This is
  useful when dragging items to the toolbar: this function returns the position a
  new item should be inserted.
  x and y are in toolbar coordinates.
  toolbar : a GtkToolbar
  x :       x coordinate of a point on the toolbar
  y :       y coordinate of a point on the toolbar
  Returns : The position corresponding to the point (x, y) on the toolbar.
  Since 2.4

==== :GetIconSize ====
'':GetIconSize(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:IconSize#T|Gtk.Gtk.IconSize.T]]''

  Retrieves the icon size for the toolbar. See gtk_toolbar_set_icon_size().
  toolbar : a GtkToolbar
  Returns : the current icon size for the icons on the toolbar.

==== :GetItemIndex ====
'':GetItemIndex(self @ [[#T|T]], item @ [[..:..:Gtk:Gtk:ToolItem#T|Gtk.Gtk.ToolItem.T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''

  Returns the position of item on the toolbar, starting from 0. It is an error if
  item is not a child of the toolbar.
  toolbar : a GtkToolbar
  item :    a GtkToolItem that is a child of toolbar
  Returns : the position of item on the toolbar.
  Since 2.4

==== :GetNItems ====
'':GetNItems(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''

  Returns the number of items on the toolbar.
  toolbar : a GtkToolbar
  Returns : the number of items on the toolbar
  Since 2.4

==== :GetNthItem ====
'':GetNthItem(self @ [[#T|T]], n @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Gtk:Gtk:ToolItem#T|Gtk.Gtk.ToolItem.T]]''

  Returns the n'th item on toolbar, or NULL if the toolbar does not contain an
  n'th item.
  toolbar : a GtkToolbar
  n :       A position on the toolbar
  Returns : The n'th GtkToolItem on toolbar, or NULL if there isn't an n'th item.
  Since 2.4

==== :GetOrientation ====
'':GetOrientation(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:Orientation#T|Gtk.Gtk.Orientation.T]]''

  Retrieves the current orientation of the toolbar. See
  gtk_toolbar_set_orientation().
  toolbar : a GtkToolbar
  Returns : the orientation

==== :GetReliefStyle ====
'':GetReliefStyle(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:ReliefStyle#T|Gtk.Gtk.ReliefStyle.T]]''

  Returns the relief style of buttons on toolbar. See gtk_button_set_relief().
  toolbar : a GtkToolbar
  Returns : The relief style of buttons on toolbar.
  Since 2.4

==== :GetShowArrow ====
'':GetShowArrow(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''

  Returns whether the toolbar has an overflow menu. See
  gtk_toolbar_set_show_arrow().
  toolbar : a GtkToolbar
  Returns : TRUE if the toolbar has an overflow menu.
  Since 2.4

==== :GetStyle ====
'':GetStyle(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:ToolbarStyle#T|Gtk.Gtk.ToolbarStyle.T]]''

  Retrieves whether the toolbar has text, icons, or both . See
  gtk_toolbar_set_style().
  toolbar : a GtkToolbar
  Returns : the current style of toolbar

==== :GetTooltips ====
'':GetTooltips(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''

  Retrieves whether tooltips are enabled. See gtk_toolbar_set_tooltips().
  toolbar : a GtkToolbar
  Returns : TRUE if tooltips are enabled

==== :Insert ====
'':Insert(self @ [[#T|T]], item @ [[..:..:Gtk:Gtk:ToolItem#T|Gtk.Gtk.ToolItem.T]], pos @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Insert a GtkToolItem into the toolbar at position pos. If pos is 0 the item is
  prepended to the start of the toolbar. If pos is negative, the item is appended
  to the end of the toolbar.
  toolbar : a GtkToolbar
  item :    a GtkToolItem
  pos :     the position of the new item
  Since 2.4

==== :InsertElement ====
'':InsertElement(self @ [[#T|T]], type @ [[..:..:Gtk:Gtk:ToolbarChildType#T|Gtk.Gtk.ToolbarChildType.T]], widget @ [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]], text @ [[..:..:Std:String#T|Std.String.T]], tooltip_text @ [[..:..:Std:String#T|Std.String.T]], tooltip_private_text @ [[..:..:Std:String#T|Std.String.T]], icon @ [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]], callback @ [[..:..:Std:Function#T|Std.Function.T]], user_data @ [[..:..:Std:Address#T|Std.Address.T]], position @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]''

  **** Warning ****
  gtk_toolbar_insert_element is deprecated and should not be used in newly-
  written code.
  Inserts a new element in the toolbar at the given position.
  If type == GTK_TOOLBAR_CHILD_WIDGET, widget is used as the new element. If type
  == GTK_TOOLBAR_CHILD_RADIOBUTTON, widget is used to determine the radio group
  for the new element. In all other cases, widget must be NULL.
  callback must be a pointer to a function taking a GtkWidget and a gpointer as
  arguments. Use the GTK_SIGNAL_FUNC() to cast the function to GtkSignalFunc.
  toolbar :              a GtkToolbar.
  type :                 a value of type GtkToolbarChildType that determines what
                         widget will be.
  widget :               a GtkWidget, or NULL.
  text :                 the element's label.
  tooltip_text :         the element's tooltip.
  tooltip_private_text : used for context-sensitive help about this toolbar
                         element.
  icon :                 a GtkWidget that provides pictorial representation of
                         the element's function.
  callback :             the function to be executed when the button is pressed.
  user_data :            any data you wish to pass to the callback.
  position :             the number of widgets to insert this element after.
  Returns :              the new toolbar element as a GtkWidget.

==== :InsertItem ====
'':InsertItem(self @ [[#T|T]], text @ [[..:..:Std:String#T|Std.String.T]], tooltip_text @ [[..:..:Std:String#T|Std.String.T]], tooltip_private_text @ [[..:..:Std:String#T|Std.String.T]], icon @ [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]], callback @ [[..:..:Std:Function#T|Std.Function.T]], user_data @ [[..:..:Std:Address#T|Std.Address.T]], position @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]''

  **** Warning ****
  gtk_toolbar_insert_item is deprecated and should not be used in newly-written
  code.
  Inserts a new item into the toolbar. You must specify the position in the
  toolbar where it will be inserted.
  callback must be a pointer to a function taking a GtkWidget and a gpointer as
  arguments. Use the GTK_SIGNAL_FUNC() to cast the function to GtkSignalFunc.
  toolbar :              a GtkToolbar.
  text :                 give your toolbar button a label.
  tooltip_text :         a string that appears when the user holds the mouse over
                         this item.
  tooltip_private_text : use with GtkTipsQuery.
  icon :                 a GtkWidget that should be used as the button's icon.
  callback :             the function to be executed when the button is pressed.
  user_data :            a pointer to any data you wish to be passed to the
                         callback.
  position :             the number of widgets to insert this item after.
  Returns :              the new toolbar item as a GtkWidget.

==== :InsertSpace ====
'':InsertSpace(self @ [[#T|T]], position @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  **** Warning ****
  gtk_toolbar_insert_space is deprecated and should not be used in newly-written
  code.
  Inserts a new space in the toolbar at the specified position.
  toolbar :  a GtkToolbar
  position : the number of widgets after which a space should be inserted.

==== :InsertStock ====
'':InsertStock(self @ [[#T|T]], stock_id @ [[..:..:Std:String#T|Std.String.T]], tooltip_text @ [[..:..:Std:String#T|Std.String.T]], tooltip_private_text @ [[..:..:Std:String#T|Std.String.T]], callback @ [[..:..:Std:Function#T|Std.Function.T]], user_data @ [[..:..:Std:Address#T|Std.Address.T]], position @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]''

  **** Warning ****
  gtk_toolbar_insert_stock is deprecated and should not be used in newly-written
  code.
  Inserts a stock item at the specified position of the toolbar. If stock_id is
  not a known stock item ID, it's inserted verbatim, except that underscores used
  to mark mnemonics are removed.
  callback must be a pointer to a function taking a GtkWidget and a gpointer as
  arguments. Use the GTK_SIGNAL_FUNC() to cast the function to GtkSignalFunc.
  toolbar :              A GtkToolbar
  stock_id :             The id of the stock item you want to insert
  tooltip_text :         The text in the tooltip of the toolbar button
  tooltip_private_text : The private text of the tooltip
  callback :             The callback called when the toolbar button is clicked.
  user_data :            user data passed to callback
  position :             The position the button shall be inserted at. -1 means
                         at the end.
  Returns :              the inserted widget

==== :InsertWidget ====
'':InsertWidget(self @ [[#T|T]], widget @ [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]], tooltip_text @ [[..:..:Std:String#T|Std.String.T]], tooltip_private_text @ [[..:..:Std:String#T|Std.String.T]], position @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  **** Warning ****
  gtk_toolbar_insert_widget is deprecated and should not be used in newly-written
  code.
  Inserts a widget in the toolbar at the given position.
  toolbar :              a GtkToolbar.
  widget :               a GtkWidget to add to the toolbar.
  tooltip_text :         the element's tooltip.
  tooltip_private_text : used for context-sensitive help about this toolbar
                         element.
  position :             the number of widgets to insert this widget after.

==== :PrependElement ====
'':PrependElement(self @ [[#T|T]], type @ [[..:..:Gtk:Gtk:ToolbarChildType#T|Gtk.Gtk.ToolbarChildType.T]], widget @ [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]], text @ [[..:..:Std:String#T|Std.String.T]], tooltip_text @ [[..:..:Std:String#T|Std.String.T]], tooltip_private_text @ [[..:..:Std:String#T|Std.String.T]], icon @ [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]], callback @ [[..:..:Std:Function#T|Std.Function.T]], user_data @ [[..:..:Std:Address#T|Std.Address.T]]) : [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]''

  **** Warning ****
  gtk_toolbar_prepend_element is deprecated and should not be used in newly-
  written code.
  Adds a new element to the beginning of a toolbar.
  If type == GTK_TOOLBAR_CHILD_WIDGET, widget is used as the new element. If type
  == GTK_TOOLBAR_CHILD_RADIOBUTTON, widget is used to determine the radio group
  for the new element. In all other cases, widget must be NULL.
  callback must be a pointer to a function taking a GtkWidget and a gpointer as
  arguments. Use the GTK_SIGNAL_FUNC() to cast the function to GtkSignalFunc.
  toolbar :              a GtkToolbar.
  type :                 a value of type GtkToolbarChildType that determines what
                         widget will be.
  widget :               a GtkWidget, or NULL
  text :                 the element's label.
  tooltip_text :         the element's tooltip.
  tooltip_private_text : used for context-sensitive help about this toolbar
                         element.
  icon :                 a GtkWidget that provides pictorial representation of
                         the element's function.
  callback :             the function to be executed when the button is pressed.
  user_data :            any data you wish to pass to the callback.
  Returns :              the new toolbar element as a GtkWidget.

==== :PrependItem ====
'':PrependItem(self @ [[#T|T]], text @ [[..:..:Std:String#T|Std.String.T]], tooltip_text @ [[..:..:Std:String#T|Std.String.T]], tooltip_private_text @ [[..:..:Std:String#T|Std.String.T]], icon @ [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]], callback @ [[..:..:Std:Function#T|Std.Function.T]], user_data @ [[..:..:Std:Address#T|Std.Address.T]]) : [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]''

  **** Warning ****
  gtk_toolbar_prepend_item is deprecated and should not be used in newly-written
  code.
  Adds a new button to the beginning (top or left edges) of the given toolbar.
  callback must be a pointer to a function taking a GtkWidget and a gpointer as
  arguments. Use the GTK_SIGNAL_FUNC() to cast the function to GtkSignalFunc.
  toolbar :              a GtkToolbar.
  text :                 give your toolbar button a label.
  tooltip_text :         a string that appears when the user holds the mouse over
                         this item.
  tooltip_private_text : use with GtkTipsQuery.
  icon :                 a GtkWidget that should be used as the button's icon.
  callback :             the function to be executed when the button is pressed.
  user_data :            a pointer to any data you wish to be passed to the
                         callback.
  Returns :              the new toolbar item as a GtkWidget.

==== :PrependSpace ====
'':PrependSpace(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  **** Warning ****
  gtk_toolbar_prepend_space is deprecated and should not be used in newly-written
  code.
  Adds a new space to the beginning of the toolbar.
  toolbar : a GtkToolbar.

==== :PrependWidget ====
'':PrependWidget(self @ [[#T|T]], widget @ [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]], tooltip_text @ [[..:..:Std:String#T|Std.String.T]], tooltip_private_text @ [[..:..:Std:String#T|Std.String.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  **** Warning ****
  gtk_toolbar_prepend_widget is deprecated and should not be used in newly-
  written code.
  Adds a widget to the beginning of the given toolbar.
  toolbar :              a GtkToolbar.
  widget :               a GtkWidget to add to the toolbar.
  tooltip_text :         the element's tooltip.
  tooltip_private_text : used for context-sensitive help about this toolbar
                         element.

==== :RemoveSpace ====
'':RemoveSpace(self @ [[#T|T]], position @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  **** Warning ****
  gtk_toolbar_remove_space is deprecated and should not be used in newly-written
  code.
  Removes a space from the specified position.
  toolbar :  a GtkToolbar.
  position : the index of the space to remove.

==== :SetDropHighlightItem ====
'':SetDropHighlightItem(self @ [[#T|T]], tool_item @ [[..:..:Gtk:Gtk:ToolItem#T|Gtk.Gtk.ToolItem.T]], index_ @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Highlights toolbar to give an idea of what it would look like if item was added
  to toolbar at the position indicated by index_. If item is NULL, highlighting
  is turned off. In that case index_ is ignored.
  The tool_item passed to this function must not be part of any widget hierarchy.
  When an item is set as drop highlight item it can not added to any widget
  hierarchy or used as highlight item for another toolbar.
  toolbar :   a GtkToolbar
  tool_item : a GtkToolItem, or NULL to turn of highlighting
  index_ :    a position on toolbar
  Since 2.4

==== :SetIconSize ====
'':SetIconSize(self @ [[#T|T]], icon_size @ [[..:..:Gtk:Gtk:IconSize#T|Gtk.Gtk.IconSize.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  This function sets the size of stock icons in the toolbar. You can call it both
  before you add the icons and after they've been added. The size you set will
  override user preferences for the default icon size.
  This should only be used for special-purpose toolbars, normal application
  toolbars should respect the user preferences for the size of icons.
  toolbar :   A GtkToolbar
  icon_size : The GtkIconSize that stock icons in the toolbar shall have.

==== :SetOrientation ====
'':SetOrientation(self @ [[#T|T]], orientation @ [[..:..:Gtk:Gtk:Orientation#T|Gtk.Gtk.Orientation.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Sets whether a toolbar should appear horizontally or vertically.
  toolbar :     a GtkToolbar.
  orientation : a new GtkOrientation.

==== :SetShowArrow ====
'':SetShowArrow(self @ [[#T|T]], show_arrow @ [[..:..:Std:Symbol#T|Std.Symbol.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Sets whether to show an overflow menu when toolbar doesn't have room for all
  items on it. If TRUE, items that there are not room are available through an
  overflow menu.
  toolbar :    a GtkToolbar
  show_arrow : Whether to show an overflow menu
  Since 2.4

==== :SetStyle ====
'':SetStyle(self @ [[#T|T]], style @ [[..:..:Gtk:Gtk:ToolbarStyle#T|Gtk.Gtk.ToolbarStyle.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Alters the view of toolbar to display either icons only, text only, or both.
  toolbar : a GtkToolbar.
  style :   the new style for toolbar.

==== :SetTooltips ====
'':SetTooltips(self @ [[#T|T]], enable @ [[..:..:Std:Symbol#T|Std.Symbol.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Sets if the tooltips of a toolbar should be active or not.
  toolbar : a GtkToolbar.
  enable :  set to FALSE to disable the tooltips, or TRUE to enable them.

==== New ====
''New() : [[# T| T]]''

  Creates a new toolbar.
  Returns : the newly-created toolbar.

==== GetType ====
''GetType() : [[..:..:Gtk:GObject:Type#T|Gtk.GObject.Type.T]]''


