====== Style ======
==== T ====
=== inherits from ===
  * [[..:..:Gtk:GObject:Object#T|Gtk.GObject.Object.T]]

  

==== :Unref ====
'':Unref(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  **** Warning ****
  gtk_style_unref is deprecated and should not be used in newly-written code.
  Deprecated equivalent of g_object_unref().
  style : a GtkStyle.

==== :SetFont ====
'':SetFont(self @ [[#T|T]], font @ [[..:..:Gtk:Gdk:Font#T|Gtk.Gdk.Font.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  **** Warning ****
  gtk_style_set_font is deprecated and should not be used in newly-written code.
  Sets the GdkFont to use for a given style. This is meant only as a replacement
  for direct access to style->font and should not be used in new code. New code
  should use style->font_desc instead.
  style : a GtkStyle.
  font :  a GdkFont, or NULL to use the GdkFont corresponding to style-
          >font_desc.

==== :Black ====
'':Black(self @ [[#T|T]]) : [[..:..:Gtk:Gdk:Color#T|Gtk.Gdk.Color.T]]''


==== :White ====
'':White(self @ [[#T|T]]) : [[..:..:Gtk:Gdk:Color#T|Gtk.Gdk.Color.T]]''


==== :FontDesc ====
'':FontDesc(self @ [[#T|T]]) : [[..:..:Gtk:Pango:FontDescription#T|Gtk.Pango.FontDescription.T]]''


==== :Xthickness ====
'':Xthickness(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :Ythickness ====
'':Ythickness(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :BlackGc ====
'':BlackGc(self @ [[#T|T]]) : [[..:..:Gtk:Gdk:GC#T|Gtk.Gdk.GC.T]]''


==== :WhiteGc ====
'':WhiteGc(self @ [[#T|T]]) : [[..:..:Gtk:Gdk:GC#T|Gtk.Gdk.GC.T]]''


==== :AttachCount ====
'':AttachCount(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :Depth ====
'':Depth(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :Colormap ====
'':Colormap(self @ [[#T|T]]) : [[..:..:Gtk:Gdk:Colormap#T|Gtk.Gdk.Colormap.T]]''


==== :PrivateFont ====
'':PrivateFont(self @ [[#T|T]]) : [[..:..:Gtk:Gdk:Font#T|Gtk.Gdk.Font.T]]''


==== :PrivateFontDesc ====
'':PrivateFontDesc(self @ [[#T|T]]) : [[..:..:Gtk:Pango:FontDescription#T|Gtk.Pango.FontDescription.T]]''


==== :RcStyle ====
'':RcStyle(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:RcStyle#T|Gtk.Gtk.RcStyle.T]]''


==== :Styles ====
'':Styles(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :PropertyCache ====
'':PropertyCache(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :IconFactories ====
'':IconFactories(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :Fg ====
'':Fg(self @ [[#T|T]], @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Gtk:Gdk:Color#T|Gtk.Gdk.Color.T]]''


==== :Bg ====
'':Bg(self @ [[#T|T]], @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Gtk:Gdk:Color#T|Gtk.Gdk.Color.T]]''


==== :Light ====
'':Light(self @ [[#T|T]], @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Gtk:Gdk:Color#T|Gtk.Gdk.Color.T]]''


==== :Dark ====
'':Dark(self @ [[#T|T]], @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Gtk:Gdk:Color#T|Gtk.Gdk.Color.T]]''


==== :Mid ====
'':Mid(self @ [[#T|T]], @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Gtk:Gdk:Color#T|Gtk.Gdk.Color.T]]''


==== :Text ====
'':Text(self @ [[#T|T]], @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Gtk:Gdk:Color#T|Gtk.Gdk.Color.T]]''


==== :Base ====
'':Base(self @ [[#T|T]], @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Gtk:Gdk:Color#T|Gtk.Gdk.Color.T]]''


==== :TextAa ====
'':TextAa(self @ [[#T|T]], @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Gtk:Gdk:Color#T|Gtk.Gdk.Color.T]]''


==== :FgGc ====
'':FgGc(self @ [[#T|T]], @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Gtk:Gdk:GC#T|Gtk.Gdk.GC.T]]''


==== :BgGc ====
'':BgGc(self @ [[#T|T]], @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Gtk:Gdk:GC#T|Gtk.Gdk.GC.T]]''


==== :LightGc ====
'':LightGc(self @ [[#T|T]], @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Gtk:Gdk:GC#T|Gtk.Gdk.GC.T]]''


==== :DarkGc ====
'':DarkGc(self @ [[#T|T]], @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Gtk:Gdk:GC#T|Gtk.Gdk.GC.T]]''


==== :MidGc ====
'':MidGc(self @ [[#T|T]], @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Gtk:Gdk:GC#T|Gtk.Gdk.GC.T]]''


==== :TextGc ====
'':TextGc(self @ [[#T|T]], @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Gtk:Gdk:GC#T|Gtk.Gdk.GC.T]]''


==== :BaseGc ====
'':BaseGc(self @ [[#T|T]], @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Gtk:Gdk:GC#T|Gtk.Gdk.GC.T]]''


==== :TextAaGc ====
'':TextAaGc(self @ [[#T|T]], @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Gtk:Gdk:GC#T|Gtk.Gdk.GC.T]]''


==== :BgPixmap ====
'':BgPixmap(self @ [[#T|T]], @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Gtk:Gdk:Pixmap#T|Gtk.Gdk.Pixmap.T]]''


==== :ApplyDefaultBackground ====
'':ApplyDefaultBackground(self @ [[#T|T]], window @ [[..:..:Gtk:Gdk:Window#T|Gtk.Gdk.Window.T]], set_bg @ [[..:..:Std:Symbol#T|Std.Symbol.T]], state_type @ [[..:..:Gtk:Gtk:StateType#T|Gtk.Gtk.StateType.T]], area @ [[..:..:Gtk:Gdk:Rectangle#T|Gtk.Gdk.Rectangle.T]], x @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]], y @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]], width @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]], height @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  style :
  window :
  set_bg :
  state_type :
  area :
  x :
  y :
  width :
  height :

==== :Attach ====
'':Attach(self @ [[#T|T]], window @ [[..:..:Gtk:Gdk:Window#T|Gtk.Gdk.Window.T]]) : [[..:..:Gtk:Gtk:Style#T|Gtk.Gtk.Style.T]]''

  Attaches a style to a window; this process allocates the colors and creates the
  GC's for the style - it specializes it to a particular visual and colormap. The
  process may involve the creation of a new style if the style has already been
  attached to a window with a different style and colormap.
  Since this function may return a new object, you have to use it in the
  following way: style = gtk_style_attach (style, window)
  style :   a GtkStyle.
  window :  a GdkWindow.
            Either style, or a newly-created GtkStyle. If the style is newly
  Returns : created, the style parameter will be unref'ed, and the new style will
            have a reference count belonging to the caller.

==== :Copy ====
'':Copy(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:Style#T|Gtk.Gtk.Style.T]]''

  style :
  Returns :

==== :Detach ====
'':Detach(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Detaches a style from a window. If the style is not attached to any windows
  anymore, it is unrealized. See gtk_style_attach().
  style : a GtkStyle

==== :GetFont ====
'':GetFont(self @ [[#T|T]]) : [[..:..:Gtk:Gdk:Font#T|Gtk.Gdk.Font.T]]''

  **** Warning ****
  gtk_style_get_font is deprecated and should not be used in newly-written code.
  Gets the GdkFont to use for the given style. This is meant only as a
  replacement for direct access to style->font and should not be used in new
  code. New code should use style->font_desc instead.
  style :   a GtkStyle
  Returns : the GdkFont for the style. This font is owned by the style; if you
            want to keep around a copy, you must call gdk_font_ref().

==== :LookupColor ====
'':LookupColor(self @ [[#T|T]], color_name @ [[..:..:Std:String#T|Std.String.T]], color @ [[..:..:Gtk:Gdk:Color#T|Gtk.Gdk.Color.T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''

  Looks up color_name in the style's logical color mappings, filling in color and
  returning TRUE if found, otherwise returning FALSE. Do not cache the found
  mapping, because it depends on the GtkStyle and might change when a theme
  switch occurs.
  style :      a GtkStyle
  color_name : the name of the logical color to look up
  color :      the GdkColor to fill in
  Returns :    TRUE if the mapping was found.
  Since 2.10

==== :LookupIconSet ====
'':LookupIconSet(self @ [[#T|T]], stock_id @ [[..:..:Std:String#T|Std.String.T]]) : [[..:..:Gtk:Gtk:IconSet#T|Gtk.Gtk.IconSet.T]]''

  style :
  stock_id :
  Returns :

==== :Ref ====
'':Ref(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:Style#T|Gtk.Gtk.Style.T]]''

  **** Warning ****
  gtk_style_ref is deprecated and should not be used in newly-written code.
  Deprecated equivalent of g_object_ref().
  style :   a GtkStyle.
  Returns : style.

==== :RenderIcon ====
'':RenderIcon(self @ [[#T|T]], source @ [[..:..:Gtk:Gtk:IconSource#T|Gtk.Gtk.IconSource.T]], direction @ [[..:..:Gtk:Gtk:TextDirection#T|Gtk.Gtk.TextDirection.T]], state @ [[..:..:Gtk:Gtk:StateType#T|Gtk.Gtk.StateType.T]], size @ [[..:..:Gtk:Gtk:IconSize#T|Gtk.Gtk.IconSize.T]], widget @ [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]], detail @ [[..:..:Std:String#T|Std.String.T]]) : [[..:..:Gtk:Gdk:Pixbuf#T|Gtk.Gdk.Pixbuf.T]]''

  Renders the icon specified by source at the given size according to the given
  parameters and returns the result in a pixbuf.
  style :     a GtkStyle
  source :    the GtkIconSource specifying the icon to render
  direction : a text direction
  state :     a state
  size :      the size to render the icon at. A size of (GtkIconSize)-1 means
              render at the size of the source and don't scale.
  widget :    the widget
  detail :    a style detail
  Returns :   a newly-created GdkPixbuf containing the rendered icon

==== :SetBackground ====
'':SetBackground(self @ [[#T|T]], window @ [[..:..:Gtk:Gdk:Window#T|Gtk.Gdk.Window.T]], state_type @ [[..:..:Gtk:Gtk:StateType#T|Gtk.Gtk.StateType.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Sets the background of window to the background color or pixmap specified by
  style for the given state.
  style :      a GtkStyle
  window :     a GdkWindow
  state_type : a state

==== New ====
''New() : [[# T| T]]''

  Creates a new GtkStyle.
  Returns : a new GtkStyle.

==== GetType ====
''GetType() : [[..:..:Gtk:GObject:Type#T|Gtk.GObject.Type.T]]''


