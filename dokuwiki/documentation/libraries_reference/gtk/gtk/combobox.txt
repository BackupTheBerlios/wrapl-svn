====== ComboBox ======
==== T ====
=== inherits from ===
  * [[..:..:Gtk:Gtk:Bin#T|Gtk.Gtk.Bin.T]]
  * [[..:..:Gtk:Gtk:Container#T|Gtk.Gtk.Container.T]]
  * [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]
  * [[..:..:Gtk:Gtk:Object#T|Gtk.Gtk.Object.T]]
  * [[..:..:Gtk:GObject:Object#T|Gtk.GObject.Object.T]]

  A GtkComboBox is a widget that allows the user to choose from a list of valid choices. The GtkComboBox displays the selected choice. When activated, the GtkComboBox displays a popup which allows the user to make a new choice. The style in which the selected value is displayed, and the style of the popup is determined by the current theme. It may be similar to a GtkOptionMenu, or similar to a Windows-style combo box.
  Unlike its predecessors GtkCombo and GtkOptionMenu, the GtkComboBox uses the model-view pattern; the list of valid choices is specified in the form of a tree model, and the display of the choices can be adapted to the data in the model by using cell renderers, as you would in a tree view. This is possible since GtkComboBox implements the GtkCellLayout interface. The tree model holding the valid choices is not restricted to a flat list, it can be a real tree, and the popup will reflect the tree structure.
  In addition to the model-view API, GtkComboBox offers a simple API which is suitable for text-only combo boxes, and hides the complexity of managing the data in a model. It consists of the functions gtk_combo_box_new_text(), gtk_combo_box_append_text(), gtk_combo_box_insert_text(), gtk_combo_box_prepend_text(), gtk_combo_box_remove_text() and gtk_combo_box_get_active_text().
  

==== :SetWrapWidth ====
'':SetWrapWidth(self @ [[#T|T]], width @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Sets the wrap width of combo_box to be width. The wrap width is basically the preferred number of columns when you want the popup to be layed out in a table.
  
  combo_box : A GtkComboBox
  width :     Preferred number of columns
  

==== :SetTitle ====
'':SetTitle(self @ [[#T|T]], title @ [[..:..:Std:String#T|Std.String.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Sets the menu's title in tearoff mode.
  
  combo_box : a GtkComboBox
  title :     a title for the menu in tearoff mode
  

==== :SetRowSpanColumn ====
'':SetRowSpanColumn(self @ [[#T|T]], row_span @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Sets the column with row span information for combo_box to be row_span. The row span column contains integers which indicate how many rows an item should span.
  
  combo_box : A GtkComboBox.
  row_span :  A column in the model passed during construction.
  

==== :SetRowSeparatorFunc ====
'':SetRowSeparatorFunc(self @ [[#T|T]], func @ [[..:..:Std:Function#T|Std.Function.T]], data @ [[..:..:Std:Address#T|Std.Address.T]], destroy @ [[..:..:Std:Function#T|Std.Function.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Sets the row separator function, which is used to determine whether a row should be drawn as a separator. If the row separator function is NULL, no separators are drawn. This is the default value.
  
  combo_box : a GtkComboBox
  func :      a GtkTreeViewRowSeparatorFunc
  data :      user data to pass to func, or NULL
  destroy :   destroy notifier for data, or NULL
  

==== :Priv ====
'':Priv(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :AppendText ====
'':AppendText(self @ [[#T|T]], text @ [[..:..:Std:String#T|Std.String.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Appends string to the list of strings stored in combo_box. Note that you can only use this function with combo boxes constructed with gtk_combo_box_new_text().
  
  combo_box : A GtkComboBox constructed using gtk_combo_box_new_text()
  text :      A string
  

==== :GetActive ====
'':GetActive(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''

  Returns the index of the currently active item, or -1 if there's no active item. If the model is a non-flat treemodel, and the active item is not an immediate child of the root of the tree, this function returns gtk_tree_path_get_indices (path)[0], where path is the GtkTreePath of the active item.
  
  combo_box : A GtkComboBox
  Returns :   An integer which is the index of the currently active item, or -1 if there's no active item.
  

==== :GetActiveIter ====
'':GetActiveIter(self @ [[#T|T]], iter @ [[..:..:Gtk:Gtk:TreeIter#T|Gtk.Gtk.TreeIter.T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''

  Sets iter to point to the current active item, if it exists.
  
  combo_box : A GtkComboBox
  iter :      The uninitialized GtkTreeIter
  Returns :   TRUE, if iter was set
  

==== :GetActiveText ====
'':GetActiveText(self @ [[#T|T]]) : [[..:..:Std:String#T|Std.String.T]]''

  Returns the currently active string in combo_box or NULL if none is selected. Note that you can only use this function with combo boxes constructed with gtk_combo_box_new_text() and with GtkComboBoxEntrys.
  
  combo_box : A GtkComboBox constructed with gtk_combo_box_new_text()
  Returns :   a newly allocated string containing the currently active text.
  

==== :GetAddTearoffs ====
'':GetAddTearoffs(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''

  Gets the current value of the :add-tearoffs property.
  
  combo_box : a GtkComboBox
  Returns :   the current value of the :add-tearoffs property.
  

==== :GetColumnSpanColumn ====
'':GetColumnSpanColumn(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''

  Returns the column with column span information for combo_box.
  
  combo_box : A GtkComboBox
  Returns :   the column span column.
  

==== :GetFocusOnClick ====
'':GetFocusOnClick(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''

  Returns whether the combo box grabs focus when it is clicked with the mouse. See gtk_combo_box_set_focus_on_click().
  
  combo :   a GtkComboBox
  Returns : TRUE if the combo box grabs focus when it is clicked with the mouse.
  

==== :GetModel ====
'':GetModel(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:TreeModel#T|Gtk.Gtk.TreeModel.T]]''

  Returns the GtkTreeModel which is acting as data source for combo_box.
  
  combo_box : A GtkComboBox
  Returns :   A GtkTreeModel which was passed during construction.
  

==== :GetPopupAccessible ====
'':GetPopupAccessible(self @ [[#T|T]]) : [[..:..:Gtk:Atk:Object#T|Gtk.Atk.Object.T]]''

  Gets the accessible object corresponding to the combo box's popup.
  This function is mostly intended for use by accessibility technologies; applications should have little use for it.
  
  combo_box : a GtkComboBox
  Returns :   the accessible object corresponding to the combo box's popup.
  

==== :GetRowSeparatorFunc ====
'':GetRowSeparatorFunc(self @ [[#T|T]]) : [[..:..:Std:Function#T|Std.Function.T]]''

  Returns the current row separator function.
  
  combo_box : a GtkComboBox
  Returns :   the current row separator function.
  

==== :GetRowSpanColumn ====
'':GetRowSpanColumn(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''

  Returns the column with row span information for combo_box.
  
  combo_box : A GtkComboBox
  Returns :   the row span column.
  

==== :GetTitle ====
'':GetTitle(self @ [[#T|T]]) : [[..:..:Std:String#T|Std.String.T]]''

  Gets the current title of the menu in tearoff mode. See gtk_combo_box_set_add_tearoffs().
  
  combo_box : a GtkComboBox
  Returns :   the menu's title in tearoff mode. This is an internal copy of the string which must not be freed.
  

==== :GetWrapWidth ====
'':GetWrapWidth(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''

  Returns the wrap width which is used to determine the number of columns for the popup menu. If the wrap width is larger than 1, the combo box is in table mode.
  
  combo_box : A GtkComboBox
  Returns :   the wrap width.
  

==== :InsertText ====
'':InsertText(self @ [[#T|T]], position @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]], text @ [[..:..:Std:String#T|Std.String.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Inserts string at position in the list of strings stored in combo_box. Note that you can only use this function with combo boxes constructed with gtk_combo_box_new_text().
  
  combo_box : A GtkComboBox constructed using gtk_combo_box_new_text()
  position :  An index to insert text
  text :      A string
  

==== :Popdown ====
'':Popdown(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Hides the menu or dropdown list of combo_box.
  This function is mostly intended for use by accessibility technologies; applications should have little use for it.
  
  combo_box : a GtkComboBox
  

==== :Popup ====
'':Popup(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Pops up the menu or dropdown list of combo_box.
  This function is mostly intended for use by accessibility technologies; applications should have little use for it.
  
  combo_box : a GtkComboBox
  

==== :PrependText ====
'':PrependText(self @ [[#T|T]], text @ [[..:..:Std:String#T|Std.String.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Prepends string to the list of strings stored in combo_box. Note that you can only use this function with combo boxes constructed with gtk_combo_box_new_text().
  
  combo_box : A GtkComboBox constructed with gtk_combo_box_new_text()
  text :      A string
  

==== :RemoveText ====
'':RemoveText(self @ [[#T|T]], position @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Removes the string at position from combo_box. Note that you can only use this function with combo boxes constructed with gtk_combo_box_new_text().
  
  combo_box : A GtkComboBox constructed with gtk_combo_box_new_text()
  position :  Index of the item to remove
  

==== :SetActive ====
'':SetActive(self @ [[#T|T]], index_ @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Sets the active item of combo_box to be the item at index.
  
  combo_box : A GtkComboBox
  index_ :    An index in the model passed during construction, or -1 to have no active item
  

==== :SetActiveIter ====
'':SetActiveIter(self @ [[#T|T]], iter @ [[..:..:Gtk:Gtk:TreeIter#T|Gtk.Gtk.TreeIter.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Sets the current active item to be the one referenced by iter. iter must correspond to a path of depth one.
  
  combo_box : A GtkComboBox
  iter :      The GtkTreeIter
  

==== :SetAddTearoffs ====
'':SetAddTearoffs(self @ [[#T|T]], add_tearoffs @ [[..:..:Std:Symbol#T|Std.Symbol.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Sets whether the popup menu should have a tearoff menu item.
  
  combo_box :    a GtkComboBox
  add_tearoffs : TRUE to add tearoff menu items
  

==== :SetColumnSpanColumn ====
'':SetColumnSpanColumn(self @ [[#T|T]], column_span @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Sets the column with column span information for combo_box to be column_span. The column span column contains integers which indicate how many columns an item should span.
  
  combo_box :   A GtkComboBox
  column_span : A column in the model passed during construction
  

==== :SetFocusOnClick ====
'':SetFocusOnClick(self @ [[#T|T]], focus_on_click @ [[..:..:Std:Symbol#T|Std.Symbol.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Sets whether the combo box will grab focus when it is clicked with the mouse. Making mouse clicks not grab focus is useful in places like toolbars where you don't want the keyboard focus removed from the main area of the application.
  
  combo :          a GtkComboBox
  focus_on_click : whether the combo box grabs focus when clicked with the mouse
  

==== :SetModel ====
'':SetModel(self @ [[#T|T]], model @ [[..:..:Gtk:Gtk:TreeModel#T|Gtk.Gtk.TreeModel.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Sets the model used by combo_box to be model. Will unset a previously set model (if applicable). If model is NULL, then it will unset the model.
  Note that this function does not clear the cell renderers, you have to call gtk_cell_layout_clear() yourself if you need to set up different cell renderers for the new model.
  
  combo_box : A GtkComboBox
  model :     A GtkTreeModel
  

==== New ====
''New() : [[# T| T]]''

  Creates a new empty GtkComboBox.
  
  Returns : A new GtkComboBox.
  

==== GetType ====
''GetType() : [[..:..:Gtk:GObject:Type#T|Gtk.GObject.Type.T]]''


==== NewWithModel ====
''NewWithModel(model : [[..:..:Gtk:Gtk:TreeModel#T|Gtk.Gtk.TreeModel.T]]) : [[# T| T]]''

  Creates a new GtkComboBox with the model initialized to model.
  
  model :   A GtkTreeModel.
  Returns : A new GtkComboBox.
  

==== NewText ====
''NewText() : [[# T| T]]''

  Convenience function which constructs a new text combo box, which is a GtkComboBox just displaying strings. If you use this function to create a text combo box, you should only manipulate its data source with the following convenience functions: gtk_combo_box_append_text(), gtk_combo_box_insert_text(), gtk_combo_box_prepend_text() and gtk_combo_box_remove_text().
  
  Returns : A new text combo box.
  

