====== Fixed ======
==== T ====
=== inherits from ===
  * [[..:..:Gtk:Gtk:Container#T|Gtk.Gtk.Container.T]]
  * [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]
  * [[..:..:Gtk:Gtk:Object#T|Gtk.Gtk.Object.T]]
  * [[..:..:Gtk:GObject:Object#T|Gtk.GObject.Object.T]]

  The GtkFixed widget is a container which can place child widgets at fixed positions and with fixed
  sizes, given in pixels. GtkFixed performs no automatic layout management.
  For most applications, you should not use this container! It keeps you from having to learn about
  the other GTK+ containers, but it results in broken applications. With GtkFixed, the following
  things will result in truncated text, overlapping widgets, and other display bugs:
   * Themes, which may change widget sizes.
   * Fonts other than the one you used to write the app will of course change the size of widgets
     containing text; keep in mind that users may use a larger font because of difficulty reading the
     default, or they may be using Windows or the framebuffer port of GTK+, where different fonts are
     available.
   * Translation of text into other languages changes its size. Also, display of non-English text will
     use a different font in many cases.
  In addition, the fixed widget can't properly be mirrored in right-to-left languages such as Hebrew
  and Arabic. i.e. normally GTK+ will flip the interface to put labels to the right of the thing they
  label, but it can't do that with GtkFixed. So your application will not be usable in right-to-left
  languages.
  Finally, fixed positioning makes it kind of annoying to add/remove GUI elements, since you have to
  reposition all the other elements. This is a long-term maintenance problem for your application.
  If you know none of these things are an issue for your application, and prefer the simplicity of
  GtkFixed, by all means use the widget. But you should be aware of the tradeoffs.
  

==== :SetHasWindow ====
'':SetHasWindow(self @ [[#T|T]], has_window @ [[..:..:Std:Symbol#T|Std.Symbol.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Sets whether a GtkFixed widget is created with a separate GdkWindow for widget->window or not. (By default, it will be
  created with no separate GdkWindow). This function must be called while the GtkFixed is not realized, for instance,
  immediately after the window is created.
  This function was added to provide an easy migration path for older applications which may expect GtkFixed to have a
  separate window.
  
  fixed :      a GtkFixed
  has_window : TRUE if a separate window should be created
  

==== :Put ====
'':Put(self @ [[#T|T]], widget @ [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]], x @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]], y @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Adds a widget to a GtkFixed container at the given position.
  
  fixed :  a GtkFixed.
  widget : the widget to add.
  x :      the horizontal position to place the widget at.
  y :      the vertical position to place the widget at.
  

==== :Children ====
'':Children(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :GetHasWindow ====
'':GetHasWindow(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''

  Gets whether the GtkFixed has its own GdkWindow. See gdk_fixed_set_has_window().
  
  fixed :   a GtkWidget
  Returns : TRUE if fixed has its own window.
  

==== :Move ====
'':Move(self @ [[#T|T]], widget @ [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]], x @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]], y @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Moves a child of a GtkFixed container to the given position.
  
  fixed :  a GtkFixed.
  widget : the child widget.
  x :      the horizontal position to move the widget to.
  y :      the vertical position to move the widget to.
  

==== New ====
''New() : [[# T| T]]''

  Creates a new GtkFixed.
  
  Returns : a new GtkFixed.
  

==== GetType ====
''GetType() : [[..:..:Gtk:GObject:Type#T|Gtk.GObject.Type.T]]''


