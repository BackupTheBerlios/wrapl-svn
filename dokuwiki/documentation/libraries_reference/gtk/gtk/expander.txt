====== Expander ======
==== T ====
=== inherits from ===
  * [[..:..:Gtk:Gtk:Bin#T|Gtk.Gtk.Bin.T]]
  * [[..:..:Gtk:Gtk:Container#T|Gtk.Gtk.Container.T]]
  * [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]
  * [[..:..:Gtk:Gtk:Object#T|Gtk.Gtk.Object.T]]
  * [[..:..:Gtk:GObject:Object#T|Gtk.GObject.Object.T]]


==== :SetUseUnderline ====
'':SetUseUnderline(self @ [[#T|T]], use_underline @ [[..:..:Std:Symbol#T|Std.Symbol.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetUseMarkup ====
'':SetUseMarkup(self @ [[#T|T]], use_markup @ [[..:..:Std:Symbol#T|Std.Symbol.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetSpacing ====
'':SetSpacing(self @ [[#T|T]], spacing @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :Priv ====
'':Priv(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :GetExpanded ====
'':GetExpanded(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :GetLabel ====
'':GetLabel(self @ [[#T|T]]) : [[..:..:Std:String#T|Std.String.T]]''


==== :GetLabelWidget ====
'':GetLabelWidget(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]''


==== :GetSpacing ====
'':GetSpacing(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :GetUseMarkup ====
'':GetUseMarkup(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :GetUseUnderline ====
'':GetUseUnderline(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :SetExpanded ====
'':SetExpanded(self @ [[#T|T]], expanded @ [[..:..:Std:Symbol#T|Std.Symbol.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetLabel ====
'':SetLabel(self @ [[#T|T]], label @ [[..:..:Std:String#T|Std.String.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetLabelWidget ====
'':SetLabelWidget(self @ [[#T|T]], label_widget @ [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== New ====
''New(label : [[..:..:Std:String#T|Std.String.T]]) : [[# T| T]]''


==== GetType ====
''GetType() : [[..:..:Gtk:GObject:Type#T|Gtk.GObject.Type.T]]''


==== NewWithMnemonic ====
''NewWithMnemonic(label : [[..:..:Std:String#T|Std.String.T]]) : [[# T| T]]''


