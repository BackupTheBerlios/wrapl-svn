====== Label ======
==== T ====
=== inherits from ===
  * [[..:..:Gtk:Gtk:Misc#T|Gtk.Gtk.Misc.T]]
  * [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]
  * [[..:..:Gtk:Gtk:Object#T|Gtk.Gtk.Object.T]]
  * [[..:..:Gtk:GObject:Object#T|Gtk.GObject.Object.T]]


==== :SetWidthChars ====
'':SetWidthChars(self @ [[#T|T]], n_chars @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetUseUnderline ====
'':SetUseUnderline(self @ [[#T|T]], setting @ [[..:..:Std:Symbol#T|Std.Symbol.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetUseMarkup ====
'':SetUseMarkup(self @ [[#T|T]], setting @ [[..:..:Std:Symbol#T|Std.Symbol.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :Label ====
'':Label(self @ [[#T|T]]) : [[..:..:Std:String#T|Std.String.T]]''


==== :Jtype ====
'':Jtype(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :Wrap ====
'':Wrap(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :UseUnderline ====
'':UseUnderline(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :UseMarkup ====
'':UseMarkup(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :Ellipsize ====
'':Ellipsize(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :SingleLineMode ====
'':SingleLineMode(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :HaveTransform ====
'':HaveTransform(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :InClick ====
'':InClick(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :WrapMode ====
'':WrapMode(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :PatternSet ====
'':PatternSet(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :MnemonicKeyval ====
'':MnemonicKeyval(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :Text ====
'':Text(self @ [[#T|T]]) : [[..:..:Std:String#T|Std.String.T]]''


==== :Attrs ====
'':Attrs(self @ [[#T|T]]) : [[..:..:Gtk:Pango:AttrList#T|Gtk.Pango.AttrList.T]]''


==== :EffectiveAttrs ====
'':EffectiveAttrs(self @ [[#T|T]]) : [[..:..:Gtk:Pango:AttrList#T|Gtk.Pango.AttrList.T]]''


==== :Layout ====
'':Layout(self @ [[#T|T]]) : [[..:..:Gtk:Pango:Layout#T|Gtk.Pango.Layout.T]]''


==== :MnemonicWidget ====
'':MnemonicWidget(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]''


==== :MnemonicWindow ====
'':MnemonicWindow(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:Window#T|Gtk.Gtk.Window.T]]''


==== :SelectInfo ====
'':SelectInfo(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:LabelSelectionInfo#T|Gtk.Gtk.LabelSelectionInfo.T]]''


==== :Get ====
'':Get(self @ [[#T|T]], str @ [[..:..:Std:List#T|Std.List.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :GetAngle ====
'':GetAngle(self @ [[#T|T]]) : [[..:..:Std:Real#T|Std.Real.T]]''


==== :GetAttributes ====
'':GetAttributes(self @ [[#T|T]]) : [[..:..:Gtk:Pango:AttrList#T|Gtk.Pango.AttrList.T]]''


==== :GetEllipsize ====
'':GetEllipsize(self @ [[#T|T]]) : [[..:..:Gtk:Pango:EllipsizeMode#T|Gtk.Pango.EllipsizeMode.T]]''


==== :GetJustify ====
'':GetJustify(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:Justification#T|Gtk.Gtk.Justification.T]]''


==== :GetLabel ====
'':GetLabel(self @ [[#T|T]]) : [[..:..:Std:String#T|Std.String.T]]''


==== :GetLayout ====
'':GetLayout(self @ [[#T|T]]) : [[..:..:Gtk:Pango:Layout#T|Gtk.Pango.Layout.T]]''


==== :GetLayoutOffsets ====
'':GetLayoutOffsets(self @ [[#T|T]], x @ [[..:..:Std:Object#T|Std.Object.T]], y @ [[..:..:Std:Object#T|Std.Object.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :GetLineWrap ====
'':GetLineWrap(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :GetLineWrapMode ====
'':GetLineWrapMode(self @ [[#T|T]]) : [[..:..:Gtk:Pango:WrapMode#T|Gtk.Pango.WrapMode.T]]''


==== :GetMaxWidthChars ====
'':GetMaxWidthChars(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :GetMnemonicKeyval ====
'':GetMnemonicKeyval(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :GetMnemonicWidget ====
'':GetMnemonicWidget(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]''


==== :GetSelectable ====
'':GetSelectable(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :GetSelectionBounds ====
'':GetSelectionBounds(self @ [[#T|T]], start @ [[..:..:Std:Object#T|Std.Object.T]], end @ [[..:..:Std:Object#T|Std.Object.T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :GetSingleLineMode ====
'':GetSingleLineMode(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :GetText ====
'':GetText(self @ [[#T|T]]) : [[..:..:Std:String#T|Std.String.T]]''


==== :GetUseMarkup ====
'':GetUseMarkup(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :GetUseUnderline ====
'':GetUseUnderline(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''


==== :GetWidthChars ====
'':GetWidthChars(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :ParseUline ====
'':ParseUline(self @ [[#T|T]], string @ [[..:..:Std:String#T|Std.String.T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :SelectRegion ====
'':SelectRegion(self @ [[#T|T]], start_offset @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]], end_offset @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetAngle ====
'':SetAngle(self @ [[#T|T]], angle @ [[..:..:Std:Real#T|Std.Real.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetAttributes ====
'':SetAttributes(self @ [[#T|T]], attrs @ [[..:..:Gtk:Pango:AttrList#T|Gtk.Pango.AttrList.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetEllipsize ====
'':SetEllipsize(self @ [[#T|T]], mode @ [[..:..:Gtk:Pango:EllipsizeMode#T|Gtk.Pango.EllipsizeMode.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetJustify ====
'':SetJustify(self @ [[#T|T]], jtype @ [[..:..:Gtk:Gtk:Justification#T|Gtk.Gtk.Justification.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetLabel ====
'':SetLabel(self @ [[#T|T]], str @ [[..:..:Std:String#T|Std.String.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetLineWrap ====
'':SetLineWrap(self @ [[#T|T]], wrap @ [[..:..:Std:Symbol#T|Std.Symbol.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetLineWrapMode ====
'':SetLineWrapMode(self @ [[#T|T]], wrap_mode @ [[..:..:Gtk:Pango:WrapMode#T|Gtk.Pango.WrapMode.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetMarkup ====
'':SetMarkup(self @ [[#T|T]], str @ [[..:..:Std:String#T|Std.String.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetMarkupWithMnemonic ====
'':SetMarkupWithMnemonic(self @ [[#T|T]], str @ [[..:..:Std:String#T|Std.String.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetMaxWidthChars ====
'':SetMaxWidthChars(self @ [[#T|T]], n_chars @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetMnemonicWidget ====
'':SetMnemonicWidget(self @ [[#T|T]], widget @ [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetPattern ====
'':SetPattern(self @ [[#T|T]], pattern @ [[..:..:Std:String#T|Std.String.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetSelectable ====
'':SetSelectable(self @ [[#T|T]], setting @ [[..:..:Std:Symbol#T|Std.Symbol.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetSingleLineMode ====
'':SetSingleLineMode(self @ [[#T|T]], single_line_mode @ [[..:..:Std:Symbol#T|Std.Symbol.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetText ====
'':SetText(self @ [[#T|T]], str @ [[..:..:Std:String#T|Std.String.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :SetTextWithMnemonic ====
'':SetTextWithMnemonic(self @ [[#T|T]], str @ [[..:..:Std:String#T|Std.String.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== New ====
''New(str : [[..:..:Std:String#T|Std.String.T]]) : [[# T| T]]''


==== GetType ====
''GetType() : [[..:..:Gtk:GObject:Type#T|Gtk.GObject.Type.T]]''


==== NewWithMnemonic ====
''NewWithMnemonic(str : [[..:..:Std:String#T|Std.String.T]]) : [[# T| T]]''


