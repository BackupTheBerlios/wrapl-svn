====== Action ======
==== T ====
=== inherits from ===
  * [[..:..:Gtk:GObject:Object#T|Gtk.GObject.Object.T]]

  Actions represent operations that the user can be perform, along with some
  information how it should be presented in the interface. Each action provides
  methods to create icons, menu items and toolbar items representing itself.
  As well as the callback that is called when the action gets activated, the
  following also gets associated with the action:
      * a name (not translated, for path lookup)
      * a label (translated, for display)
      * an accelerator
      * whether label indicates a stock id
      * a tooltip (optional, translated)
      * a toolbar label (optional, shorter than label)
  The action will also have some state information:
      * visible (shown/hidden)
      * sensitive (enabled/disabled)
  Apart from regular actions, there are toggle_actions, which can be toggled
  between two states and radio_actions, of which only one in a group can be in
  the "active" state. Other actions can be implemented as GtkAction subclasses.
  Each action can have one or more proxy menu item, toolbar button or other proxy
  widgets. Proxies mirror the state of the action (text label, tooltip, icon,
  visible, sensitive, etc), and should change when the action's state changes.
  When the proxy is activated, it should activate its action.
  

==== :UnblockActivateFrom ====
'':UnblockActivateFrom(self @ [[#T|T]], proxy @ [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Re-enables calls to the gtk_action_activate() function by signals on the given
  proxy widget. This undoes the blocking done by gtk_action_block_activate_from
  ().
  This function is intended for use by action implementations.
  action : the action object
  proxy :  a proxy widget

==== :SetVisible ====
'':SetVisible(self @ [[#T|T]], visible @ [[..:..:Std:Symbol#T|Std.Symbol.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Sets the ::visible property of the action to visible. Note that this doesn't
  necessarily mean effective visibility. See gtk_action_is_visible() for that.
  action :  the action object
  visible : TRUE to make the action visible

==== :PrivateData ====
'':PrivateData(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :Activate ====
'':Activate(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Emits the "activate" signal on the specified action, if it isn't insensitive.
  This gets called by the proxy widgets when they get activated.
  It can also be used to manually activate an action.
  action : the action object

==== :BlockActivateFrom ====
'':BlockActivateFrom(self @ [[#T|T]], proxy @ [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Disables calls to the gtk_action_activate() function by signals on the given
  proxy widget. This is used to break notification loops for things like check or
  radio actions.
  This function is intended for use by action implementations.
  action : the action object
  proxy :  a proxy widget

==== :ConnectAccelerator ====
'':ConnectAccelerator(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Installs the accelerator for action if action has an accel path and group. See
  gtk_action_set_accel_path() and gtk_action_set_accel_group()
  Since multiple proxies may independently trigger the installation of the
  accelerator, the action counts the number of times this function has been
  called and doesn't remove the accelerator until
  gtk_action_disconnect_accelerator() has been called as many times.
  action : a GtkAction

==== :ConnectProxy ====
'':ConnectProxy(self @ [[#T|T]], proxy @ [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Connects a widget to an action object as a proxy. Synchronises various
  properties of the action with the widget (such as label text, icon, tooltip,
  etc), and attaches a callback so that the action gets activated when the proxy
  widget does.
  If the widget is already connected to an action, it is disconnected first.
  action : the action object
  proxy :  the proxy widget

==== :CreateIcon ====
'':CreateIcon(self @ [[#T|T]], icon_size @ [[..:..:Gtk:Gtk:IconSize#T|Gtk.Gtk.IconSize.T]]) : [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]''

  This function is intended for use by action implementations to create icons
  displayed in the proxy widgets.
  action :    the action object
  icon_size : the size of the icon that should be created.
  Returns :   a widget that displays the icon for this action.

==== :CreateMenu ====
'':CreateMenu(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]''

  If action provides a GtkMenu widget as a submenu for the menu item or the
  toolbar item it creates, this function returns an instance of that menu.
  action :  a GtkAction
  Returns : the menu item provided by the action, or NULL.

==== :CreateMenuItem ====
'':CreateMenuItem(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]''

  Creates a menu item widget that proxies for the given action.
  action :  the action object
  Returns : a menu item connected to the action.

==== :CreateToolItem ====
'':CreateToolItem(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]''

  Creates a toolbar item widget that proxies for the given action.
  action :  the action object
  Returns : a toolbar item connected to the action.

==== :DisconnectAccelerator ====
'':DisconnectAccelerator(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Undoes the effect of one call to gtk_action_connect_accelerator().
  action : a GtkAction

==== :DisconnectProxy ====
'':DisconnectProxy(self @ [[#T|T]], proxy @ [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Disconnects a proxy widget from an action. Does not destroy the widget,
  however.
  action : the action object
  proxy :  the proxy widget

==== :GetAccelClosure ====
'':GetAccelClosure(self @ [[#T|T]]) : [[..:..:Gtk:GObject:Closure#T|Gtk.GObject.Closure.T]]''

  Returns the accel closure for this action.
  action :  the action object
  Returns : the accel closure for this action. The returned closure is owned by
            GTK+ and must not be unreffed or modified.

==== :GetAccelPath ====
'':GetAccelPath(self @ [[#T|T]]) : [[..:..:Std:String#T|Std.String.T]]''

  Returns the accel path for this action.
  action :  the action object
  Returns : the accel path for this action, or NULL if none is set. The returned
            string is owned by GTK+ and must not be freed or modified.

==== :GetName ====
'':GetName(self @ [[#T|T]]) : [[..:..:Std:String#T|Std.String.T]]''

  Returns the name of the action.
  action :  the action object
  Returns : the name of the action. The string belongs to GTK+ and should not be
            freed.

==== :GetProxies ====
'':GetProxies(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Returns the proxy widgets for an action. See also gtk_widget_get_action().
  action :  the action object
  Returns : a GSList of proxy widgets. The list is owned by GTK+ and must not be
            modified.

==== :GetSensitive ====
'':GetSensitive(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''

  Returns whether the action itself is sensitive. Note that this doesn't
  necessarily mean effective sensitivity. See gtk_action_is_sensitive() for that.
  action :  the action object
  Returns : TRUE if the action itself is sensitive.

==== :GetVisible ====
'':GetVisible(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''

  Returns whether the action itself is visible. Note that this doesn't
  necessarily mean effective visibility. See gtk_action_is_sensitive() for that.
  action :  the action object
  Returns : TRUE if the action itself is visible.

==== :IsSensitive ====
'':IsSensitive(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''

  Returns whether the action is effectively sensitive.
  action :  the action object
  Returns : TRUE if the action and its associated action group are both
            sensitive.

==== :IsVisible ====
'':IsVisible(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''

  Returns whether the action is effectively visible.
  action :  the action object
  Returns : TRUE if the action and its associated action group are both visible.

==== :SetAccelGroup ====
'':SetAccelGroup(self @ [[#T|T]], accel_group @ [[..:..:Gtk:Gtk:AccelGroup#T|Gtk.Gtk.AccelGroup.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Sets the GtkAccelGroup in which the accelerator for this action will be
  installed.
  action :      the action object
  accel_group : a GtkAccelGroup or NULL

==== :SetAccelPath ====
'':SetAccelPath(self @ [[#T|T]], accel_path @ [[..:..:Std:String#T|Std.String.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Sets the accel path for this action. All proxy widgets associated with the
  action will have this accel path, so that their accelerators are consistent.
  action :     the action object
  accel_path : the accelerator path

==== :SetSensitive ====
'':SetSensitive(self @ [[#T|T]], sensitive @ [[..:..:Std:Symbol#T|Std.Symbol.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Sets the ::sensitive property of the action to sensitive. Note that this
  doesn't necessarily mean effective sensitivity. See gtk_action_is_sensitive()
  for that.
  action :    the action object
  sensitive : TRUE to make the action sensitive

==== New ====
''New(name : [[..:..:Std:String#T|Std.String.T]], label : [[..:..:Std:String#T|Std.String.T]], tooltip : [[..:..:Std:String#T|Std.String.T]], stock_id : [[..:..:Std:String#T|Std.String.T]]) : [[# T| T]]''

  Creates a new GtkAction object. To add the action to a GtkActionGroup and set
  the accelerator for the action, call gtk_action_group_add_action_with_accel().
  See the_section_called_&#8220;UI_Definitions&#8221; for information on allowed
  action names.
  name :     A unique name for the action
  label :    the label displayed in menu items and on buttons, or NULL
  tooltip :  a tooltip for the action, or NULL
  stock_id : the stock icon to display in widgets representing the action, or
             NULL
  Returns :  a new GtkAction

==== GetType ====
''GetType() : [[..:..:Gtk:GObject:Type#T|Gtk.GObject.Type.T]]''


