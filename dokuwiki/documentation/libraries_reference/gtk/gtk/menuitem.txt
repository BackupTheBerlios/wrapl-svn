====== MenuItem ======
==== T ====
=== inherits from ===
  * [[..:..:Gtk:Gtk:Item#T|Gtk.Gtk.Item.T]]
  * [[..:..:Gtk:Gtk:Bin#T|Gtk.Gtk.Bin.T]]
  * [[..:..:Gtk:Gtk:Container#T|Gtk.Gtk.Container.T]]
  * [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]
  * [[..:..:Gtk:Gtk:Object#T|Gtk.Gtk.Object.T]]
  * [[..:..:Gtk:GObject:Object#T|Gtk.GObject.Object.T]]

  The GtkMenuItem widget and the derived widgets are the only valid childs for menus. Their function
  is to correctly handle highlighting, alignment, events and submenus.
  As it derives from GtkBin it can hold any valid child widget, altough only a few are really useful.
  

==== :ToggleSizeRequest ====
'':ToggleSizeRequest(self @ [[#T|T]], requisition @ [[..:..:Std:Object#T|Std.Object.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Emits the "toggle_size_request" signal on the given item.
  
  menu_item :   the menu item
  requisition : the requisition to use as signal data.
  

==== :ToggleSizeAllocate ====
'':ToggleSizeAllocate(self @ [[#T|T]], allocation @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Emits the "toggle_size_allocate" signal on the given item.
  
  menu_item :  the menu item.
  allocation : the allocation to use as signal data.
  

==== :SetSubmenu ====
'':SetSubmenu(self @ [[#T|T]], submenu @ [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Sets or replaces the menu item's submenu, or removes it when a NULL submenu is passed.
  
  menu_item : a GtkMenuItem
  submenu :   the submenu, or NULL
  

==== :SetRightJustified ====
'':SetRightJustified(self @ [[#T|T]], right_justified @ [[..:..:Std:Symbol#T|Std.Symbol.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Sets whether the menu item appears justified at the right side of a menu bar. This was traditionally done for "Help"
  menu items, but is now considered a bad idea. (If the widget layout is reversed for a right-to-left language like Hebrew
  or Arabic, right-justified-menu-items appear at the left.)
  
  menu_item :       a GtkMenuItem.
  right_justified : if TRUE the menu item will appear at the far right if added to a menu bar.
  

==== :Submenu ====
'':Submenu(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]''


==== :EventWindow ====
'':EventWindow(self @ [[#T|T]]) : [[..:..:Gtk:Gdk:Window#T|Gtk.Gdk.Window.T]]''


==== :ToggleSize ====
'':ToggleSize(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :AcceleratorWidth ====
'':AcceleratorWidth(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :AccelPath ====
'':AccelPath(self @ [[#T|T]]) : [[..:..:Std:String#T|Std.String.T]]''


==== :ShowSubmenuIndicator ====
'':ShowSubmenuIndicator(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :SubmenuPlacement ====
'':SubmenuPlacement(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :SubmenuDirection ====
'':SubmenuDirection(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :RightJustify ====
'':RightJustify(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :TimerFromKeypress ====
'':TimerFromKeypress(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :FromMenubar ====
'':FromMenubar(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :Timer ====
'':Timer(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :Activate ====
'':Activate(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Emits the "activate" signal on the given item
  
  menu_item : the menu item
  

==== :Deselect ====
'':Deselect(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Emits the "deselect" signal on the given item. Behaves exactly like gtk_item_deselect.
  
  menu_item : the menu item
  

==== :GetRightJustified ====
'':GetRightJustified(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''

  Gets whether the menu item appears justified at the right side of the menu bar.
  
  menu_item : a GtkMenuItem
  Returns :   TRUE if the menu item will appear at the far right if added to a menu bar.
  

==== :GetSubmenu ====
'':GetSubmenu(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]''

  Gets the submenu underneath this menu item, if any. See gtk_menu_item_set_submenu().
  
  menu_item : a GtkMenuItem
  Returns :   submenu for this menu item, or NULL if none.
  

==== :RemoveSubmenu ====
'':RemoveSubmenu(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  === Warning ===
  gtk_menu_item_remove_submenu has been deprecated since version 2.12 and should not be used in newly-written code.
  gtk_menu_item_remove_submenu() is deprecated and should not be used in newly written code. Use gtk_menu_item_set_submenu
  () instead.

==== :Select ====
'':Select(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Emits the "select" signal on the given item. Behaves exactly like gtk_item_select.
  
  menu_item : the menu item
  

==== :SetAccelPath ====
'':SetAccelPath(self @ [[#T|T]], accel_path @ [[..:..:Std:String#T|Std.String.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Set the accelerator path on menu_item, through which runtime changes of the menu item's accelerator caused by the user
  can be identified and saved to persistant storage (see gtk_accel_map_save() on this). To setup a default accelerator for
  this menu item, call gtk_accel_map_add_entry() with the same accel_path. See also gtk_accel_map_add_entry() on the
  specifics of accelerator paths, and gtk_menu_set_accel_path() for a more convenient variant of this function.
  This function is basically a convenience wrapper that handles calling gtk_widget_set_accel_path() with the appropriate
  accelerator group for the menu item.
  Note that you do need to set an accelerator on the parent menu with gtk_menu_set_accel_group() for this to work.
  
  menu_item :  a valid GtkMenuItem
  accel_path : accelerator path, corresponding to this menu item's functionality, or NULL to unset the current path.
  

==== New ====
''New() : [[# T| T]]''

  Creates a new GtkMenuItem.
  
  Returns : the newly created GtkMenuItem
  

==== GetType ====
''GetType() : [[..:..:Gtk:GObject:Type#T|Gtk.GObject.Type.T]]''


==== NewWithMnemonic ====
''NewWithMnemonic(label : [[..:..:Std:String#T|Std.String.T]]) : [[# T| T]]''

  Creates a new GtkMenuItem containing a label. The label will be created using gtk_label_new_with_mnemonic(), so
  underscores in label indicate the mnemonic for the menu item.
  
  label :   The text of the button, with an underscore in front of the mnemonic character
  Returns : a new GtkMenuItem
  

==== NewWithLabel ====
''NewWithLabel(label : [[..:..:Std:String#T|Std.String.T]]) : [[# T| T]]''

  Creates a new GtkMenuItem whose child is a GtkLabel.
  
  label :   the text for the label
  Returns : the newly created GtkMenuItem
  

