====== ToolItem ======
==== T ====
=== inherits from ===
  * [[..:..:Gtk:Gtk:Bin#T|Gtk.Gtk.Bin.T]]
  * [[..:..:Gtk:Gtk:Container#T|Gtk.Gtk.Container.T]]
  * [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]
  * [[..:..:Gtk:Gtk:Object#T|Gtk.Gtk.Object.T]]
  * [[..:..:Gtk:GObject:Object#T|Gtk.GObject.Object.T]]

GtkToolItems are widgets that can appear on a toolbar. To create a toolbar item
that contain something else than a button, use gtk_tool_item_new(). Use
gtk_container_add() to add a child widget to the tool item.
For toolbar items that contain buttons, see the GtkToolButton,
GtkToggleToolButton and GtkRadioToolButton classes.
See the GtkToolbar class for a description of the toolbar widget.

==== :SetVisibleVertical ====
'':SetVisibleVertical(self @ [[#T|T]], visible_vertical @ [[..:..:Std:Symbol#T|Std.Symbol.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

Sets whether tool_item is visible when the toolbar is docked vertically. Some
tool items, such as text entries, are too wide to be useful on a vertically
docked toolbar. If visible_vertical is FALSE tool_item will not appear on
toolbars that are docked vertically.
tool_item :        a GtkToolItem
visible_vertical : whether tool_item is visible when the toolbar is in vertical
                   mode
Since 2.4

==== :SetVisibleHorizontal ====
'':SetVisibleHorizontal(self @ [[#T|T]], visible_horizontal @ [[..:..:Std:Symbol#T|Std.Symbol.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

Sets whether tool_item is visible when the toolbar is docked horizontally.
tool_item :          a GtkToolItem
visible_horizontal : Whether tool_item is visible when in horizontal mode
Since 2.4

==== :Priv ====
'':Priv(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''


==== :GetExpand ====
'':GetExpand(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''

Returns whether tool_item is allocated extra space. See
gtk_tool_item_set_expand().
tool_item : a ""
Returns :   TRUE if tool_item is allocated extra space.
Since 2.4

==== :GetHomogeneous ====
'':GetHomogeneous(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''

Returns whether tool_item is the same size as other homogeneous items. See
gtk_tool_item_set_homogeneous().
tool_item : a ""
Returns :   TRUE if the item is the same size as other homogeneous item.s
Since 2.4

==== :GetIconSize ====
'':GetIconSize(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:IconSize#T|Gtk.Gtk.IconSize.T]]''

Returns the icon size used for tool_item. Custom subclasses of GtkToolItem
should call this function to find out what size icons they should use.
tool_item : a ""
Returns :   a GtkIconSize indicating the icon size used for tool_item
Since 2.4

==== :GetIsImportant ====
'':GetIsImportant(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''

Returns whether tool_item is considered important. See
gtk_tool_item_set_is_important()
tool_item : a GtkToolItem
Returns :   TRUE if tool_item is considered important.
Since 2.4

==== :GetOrientation ====
'':GetOrientation(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:Orientation#T|Gtk.Gtk.Orientation.T]]''

Returns the orientation used for tool_item. Custom subclasses of GtkToolItem
should call this function to find out what size icons they should use.
tool_item : a ""
Returns :   a GtkOrientation indicating the orientation used for tool_item
Since 2.4

==== :GetProxyMenuItem ====
'':GetProxyMenuItem(self @ [[#T|T]], menu_item_id @ [[..:..:Std:String#T|Std.String.T]]) : [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]''

If menu_item_id matches the string passed to gtk_tool_item_set_proxy_menu_item
() return the corresponding GtkMenuItem.
Custom subclasses of GtkToolItem should use this function to update their menu
item when the GtkToolItem changes. That the menu_item_ids must match ensures
that a GtkToolItem will not inadvertently change a menu item that they did not
create.
tool_item :    a ""
menu_item_id : a string used to identify the menu item
Returns :      The GtkMenuItem passed to gtk_tool_item_set_proxy_menu_item(),
               if the menu_item_ids match.
Since 2.4

==== :GetReliefStyle ====
'':GetReliefStyle(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:ReliefStyle#T|Gtk.Gtk.ReliefStyle.T]]''

Returns the relief style of tool_item. See gtk_button_set_relief_style().
Custom subclasses of GtkToolItem should call this function in the handler of
the "toolbar_reconfigured" signal to find out the relief style of buttons.
tool_item : a ""
Returns :   a GtkReliefStyle indicating the relief style used for tool_item.
Since 2.4

==== :GetToolbarStyle ====
'':GetToolbarStyle(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:ToolbarStyle#T|Gtk.Gtk.ToolbarStyle.T]]''

Returns the toolbar style used for tool_item. Custom subclasses of GtkToolItem
should call this function in the handler of the GtkToolItem::
toolbar_reconfigured signal to find out in what style the toolbar is displayed
and change themselves accordingly
Possibilities are:
    * GTK_TOOLBAR_BOTH, meaning the tool item should show both an icon and a
      label, stacked vertically
    * GTK_TOOLBAR_ICONS, meaning the toolbar shows only icons
    * GTK_TOOLBAR_TEXT, meaning the tool item should only show text
    * GTK_TOOLBAR_BOTH_HORIZ, meaning the tool item should show both an icon
      and a label, arranged horizontally (however, note the
      "has_text_horizontally" that makes tool buttons not show labels when the
      toolbar style is GTK_TOOLBAR_BOTH_HORIZ.
tool_item : a ""
Returns :   A GtkToolbarStyle indicating the toolbar style used for tool_item.
Since 2.4

==== :GetUseDragWindow ====
'':GetUseDragWindow(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''

Returns whether tool_item has a drag window. See
gtk_tool_item_set_use_drag_window().
tool_item : a GtkToolItem
Returns :   TRUE if tool_item uses a drag window.
Since 2.4

==== :GetVisibleHorizontal ====
'':GetVisibleHorizontal(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''

Returns whether the tool_item is visible on toolbars that are docked
horizontally.
tool_item : a GtkToolItem
Returns :   TRUE if tool_item is visible on toolbars that are docked
            horizontally.
Since 2.4

==== :GetVisibleVertical ====
'':GetVisibleVertical(self @ [[#T|T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''

Returns whether tool_item is visible when the toolbar is docked vertically. See
gtk_tool_item_set_visible_vertical().
tool_item : a GtkToolItem
Returns :   Whether tool_item is visible when the toolbar is docked vertically
Since 2.4

==== :RebuildMenu ====
'':RebuildMenu(self @ [[#T|T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

Calling this function signals to the toolbar that the overflow menu item for
tool_item has changed. If the overflow menu is visible when this function it
called, the menu will be rebuilt.
The function must be called when the tool item changes what it will do in
response to the "create_menu_proxy" signal.
tool_item : a GtkToolItem
Since 2.6
***** Property Details *****
The "is-important" property
  "is-important"             gboolean              : Read / Write
Whether the toolbar item is considered important. When TRUE, toolbar buttons
show text in GTK_TOOLBAR_BOTH_HORIZ mode.
Default value: FALSE

==== :RetrieveProxyMenuItem ====
'':RetrieveProxyMenuItem(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]''

Returns the GtkMenuItem that was last set by gtk_tool_item_set_proxy_menu_item
(), ie. the GtkMenuItem that is going to appear in the overflow menu.
tool_item : a ""
Returns :   The GtkMenuItem that is going to appear in the overflow menu for
            tool_item.
Since 2.4

==== :SetExpand ====
'':SetExpand(self @ [[#T|T]], expand @ [[..:..:Std:Symbol#T|Std.Symbol.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

Sets whether tool_item is allocated extra space when there is more room on the
toolbar then needed for the items. The effect is that the item gets bigger when
the toolbar gets bigger and smaller when the toolbar gets smaller.
tool_item : a ""
expand :    Whether tool_item is allocated extra space
Since 2.4

==== :SetHomogeneous ====
'':SetHomogeneous(self @ [[#T|T]], homogeneous @ [[..:..:Std:Symbol#T|Std.Symbol.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

Sets whether tool_item is to be allocated the same size as other homogeneous
items. The effect is that all homogeneous items will have the same width as the
widest of the items.
tool_item :   a ""
homogeneous : whether tool_item is the same size as other homogeneous items
Since 2.4

==== :SetIsImportant ====
'':SetIsImportant(self @ [[#T|T]], is_important @ [[..:..:Std:Symbol#T|Std.Symbol.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

Sets whether tool_item should be considered important. The GtkToolButton class
uses this property to determine whether to show or hide its label when the
toolbar style is GTK_TOOLBAR_BOTH_HORIZ. The result is that only tool buttons
with the "is_important" property set have labels, an effect known as "priority
text"
tool_item :    a GtkToolItem
is_important : whether the tool item should be considered important
Since 2.4

==== :SetProxyMenuItem ====
'':SetProxyMenuItem(self @ [[#T|T]], menu_item_id @ [[..:..:Std:String#T|Std.String.T]], menu_item @ [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

Sets the GtkMenuItem used in the toolbar overflow menu. The menu_item_id is
used to identify the caller of this function and should also be used with
gtk_tool_item_get_proxy_menu_item().
tool_item :    a ""
menu_item_id : a string used to identify menu_item
menu_item :    a GtkMenuItem to be used in the overflow menu
Since 2.4

==== :SetTooltip ====
'':SetTooltip(self @ [[#T|T]], tooltips @ [[..:..:Gtk:Gtk:Tooltips#T|Gtk.Gtk.Tooltips.T]], tip_text @ [[..:..:Std:String#T|Std.String.T]], tip_private @ [[..:..:Std:String#T|Std.String.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

**** Warning ****
gtk_tool_item_set_tooltip has been deprecated since version 2.12 and should not
be used in newly-written code. Use gtk_tool_item_set_tooltip_text() instead.
Sets the GtkTooltips object to be used for tool_item, the text to be displayed
as tooltip on the item and the private text to be used. See
gtk_tooltips_set_tip().
tool_item :   a ""
tooltips :    The GtkTooltips object to be used
tip_text :    text to be used as tooltip text for tool_item
tip_private : text to be used as private tooltip text
Since 2.4

==== :SetTooltipMarkup ====
'':SetTooltipMarkup(self @ [[#T|T]], markup @ [[..:..:Std:String#T|Std.String.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

Sets the markup text to be displayed as tooltip on the item. See
gtk_widget_set_tooltip_markup().
tool_item : a ""
markup :    markup text to be used as tooltip for tool_item
Since 2.12

==== :SetTooltipText ====
'':SetTooltipText(self @ [[#T|T]], text @ [[..:..:Std:String#T|Std.String.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

Sets the text to be displayed as tooltip on the item. See
gtk_widget_set_tooltip_text().
tool_item : a ""
text :      text to be used as tooltip for tool_item
Since 2.12

==== :SetUseDragWindow ====
'':SetUseDragWindow(self @ [[#T|T]], use_drag_window @ [[..:..:Std:Symbol#T|Std.Symbol.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

Sets whether tool_item has a drag window. When TRUE the toolitem can be used as
a drag source through gtk_drag_source_set(). When tool_item has a drag window
it will intercept all events, even those that would otherwise be sent to a
child of tool_item.
tool_item :       a GtkToolItem
use_drag_window : Whether tool_item has a drag window.
Since 2.4

==== New ====
''New() : [[# T| T]]''

Creates a new GtkToolItem
Returns : the new GtkToolItem
Since 2.4

==== GetType ====
''GetType() : [[..:..:Gtk:GObject:Type#T|Gtk.GObject.Type.T]]''


