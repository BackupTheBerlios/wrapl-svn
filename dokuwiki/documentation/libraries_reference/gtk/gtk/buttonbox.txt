====== ButtonBox ======
==== T ====
=== inherits from ===
  * [[..:..:Gtk:Gtk:Box#T|Gtk.Gtk.Box.T]]
  * [[..:..:Gtk:Gtk:Container#T|Gtk.Gtk.Container.T]]
  * [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]
  * [[..:..:Gtk:Gtk:Object#T|Gtk.Gtk.Object.T]]
  * [[..:..:Gtk:GObject:Object#T|Gtk.GObject.Object.T]]

  The primary purpose of this class is to keep track of the various properties of
  GtkHButtonBox and GtkVButtonBox widgets.
  gtk_button_box_get_child_size() retrieves the minimum width and height for
  widgets in a given button box. gtk_button_box_set_child_size() allows those
  properties to be changed.
  The internal padding of buttons can be retrieved and changed per button box
  using gtk_button_box_get_child_ipadding() and gtk_button_box_set_child_ipadding
  () respectively.
  gtk_button_box_get_spacing() and gtk_button_box_set_spacing() retrieve and
  change default number of pixels between buttons, respectively.
  gtk_button_box_get_layout() and gtk_button_box_set_layout() retrieve and alter
  the method used to spread the buttons in a button box across the container,
  respectively.
  The main purpose of GtkButtonBox is to make sure the children have all the same
  size. Therefore it ignores the homogeneous property which it inherited from
  GtkBox, and always behaves as if homogeneous was TRUE.
  

==== :SetLayout ====
'':SetLayout(self @ [[#T|T]], layout_style @ [[..:..:Gtk:Gtk:ButtonBoxStyle#T|Gtk.Gtk.ButtonBoxStyle.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Changes the way buttons are arranged in their container.
  widget :       a GtkButtonBox.
  layout_style : the new layout style.

==== :ChildMinWidth ====
'':ChildMinWidth(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :ChildMinHeight ====
'':ChildMinHeight(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :ChildIpadX ====
'':ChildIpadX(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :ChildIpadY ====
'':ChildIpadY(self @ [[#T|T]]) : [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]''


==== :LayoutStyle ====
'':LayoutStyle(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:ButtonBoxStyle#T|Gtk.Gtk.ButtonBoxStyle.T]]''


==== :GetChildIpadding ====
'':GetChildIpadding(self @ [[#T|T]], ipad_x @ [[..:..:Std:Object#T|Std.Object.T]], ipad_y @ [[..:..:Std:Object#T|Std.Object.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  **** Warning ****
  gtk_button_box_get_child_ipadding is deprecated and should not be used in
  newly-written code. Use the style properties "child-internal-pad-x/-y" instead.
  Gets the default number of pixels that pad the buttons in a given button box.
  widget : a GtkButtonBox.
  ipad_x : the horizontal padding used by buttons in widget.
  ipad_y : the vertical padding used by buttons in widget.

==== :GetChildSecondary ====
'':GetChildSecondary(self @ [[#T|T]], child @ [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]]) : [[..:..:Std:Symbol#T|Std.Symbol.T]]''

  Returns whether child should appear in a secondary group of children.
  widget :  a GtkButtonBox
  child :   a child of widget
  Returns : whether child should appear in a secondary group of children.
  Since 2.4

==== :GetChildSize ====
'':GetChildSize(self @ [[#T|T]], min_width @ [[..:..:Std:Object#T|Std.Object.T]], min_height @ [[..:..:Std:Object#T|Std.Object.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  **** Warning ****
  gtk_button_box_get_child_size is deprecated and should not be used in newly-
  written code. Use the style properties "child-min-width/-height" instead.
  Retrieves the current width and height of all child widgets in a button box.
  min_width and min_height are filled with those values, respectively.
  widget :     a GtkButtonBox.
  min_width :  the width of the buttons contained by widget.
  min_height : the height of the buttons contained by widget.

==== :GetLayout ====
'':GetLayout(self @ [[#T|T]]) : [[..:..:Gtk:Gtk:ButtonBoxStyle#T|Gtk.Gtk.ButtonBoxStyle.T]]''

  Retrieves the method being used to arrange the buttons in a button box.
  widget :  a GtkButtonBox.
  Returns : the method used to layout buttons in widget.

==== :SetChildIpadding ====
'':SetChildIpadding(self @ [[#T|T]], ipad_x @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]], ipad_y @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  **** Warning ****
  gtk_button_box_set_child_ipadding is deprecated and should not be used in
  newly-written code. Use the style properties "child-internal-pad-x/-y" instead.
  Changes the amount of internal padding used by all buttons in a given button
  box.
  widget : a GtkButtonBox.
  ipad_x : the horizontal padding that should be used by each button in widget.
  ipad_y : the vertical padding that should be used by each button in widget.

==== :SetChildSecondary ====
'':SetChildSecondary(self @ [[#T|T]], child @ [[..:..:Gtk:Gtk:Widget#T|Gtk.Gtk.Widget.T]], is_secondary @ [[..:..:Std:Symbol#T|Std.Symbol.T]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  Sets whether child should appear in a secondary group of children. A typical
  use of a secondary child is the help button in a dialog.
  This group appears after the other children if the style is
  GTK_BUTTONBOX_START, GTK_BUTTONBOX_SPREAD or GTK_BUTTONBOX_EDGE, and before the
  other children if the style is GTK_BUTTONBOX_END. For horizontal button boxes,
  the definition of before/after depends on direction of the widget (see
  gtk_widget_set_direction()). If the style is GTK_BUTTONBOX_START or
  GTK_BUTTONBOX_END, then the secondary children are aligned at the other end of
  the button box from the main children. For the other styles, they appear
  immediately next to the main children.
  widget :       a GtkButtonBox
  child :        a child of widget
  is_secondary : if TRUE, the child appears in a secondary group of the button
                 box.
  ***** Property Details *****
  The "layout-style" property
    "layout-style"             GtkButtonBoxStyle     : Read / Write
  How to layout the buttons in the box. Possible values are default, spread,
  edge, start and end.
  Default value: GTK_BUTTONBOX_DEFAULT_STYLE
  ***** Child Property Details *****
  The "secondary" child property
    "secondary"                gboolean              : Read / Write
  If TRUE, the child appears in a secondary group of children, suitable for,
  e.g., help buttons.
  Default value: FALSE
  ***** Style Property Details *****
  The "child-internal-pad-x" style property
    "child-internal-pad-x"     gint                  : Read
  Amount to increase child's size on either side.
  Allowed values: >= 0
  Default value: 4

==== :SetChildSize ====
'':SetChildSize(self @ [[#T|T]], min_width @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]], min_height @ [[..:..:Std:Integer#SmallT|Std.Integer.SmallT]]) : [[..:..:Std:Object#T|Std.Object.T]]''

  **** Warning ****
  gtk_button_box_set_child_size is deprecated and should not be used in newly-
  written code. Use the style properties "child-min-width/-height" instead.
  Sets a new default size for the children of a given button box.
  widget :     a GtkButtonBox.
  min_width :  a default width for buttons in widget.
  min_height : a default height for buttons in widget.

==== GetType ====
''GetType() : [[..:..:Gtk:GObject:Type#T|Gtk.GObject.Type.T]]''


